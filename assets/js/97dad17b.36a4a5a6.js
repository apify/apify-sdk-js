"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8036],{18203:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>m});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),o=["components"],l={id_old:"version-2.3.0-apify",title:"Apify",id:"apify"},p=void 0,s={unversionedId:"api/apify",id:"version-2.3/api/apify",title:"Apify",description:"The following section describes all functions and properties provided by the apify package, except individual classes and namespaces that have their",source:"@site/versioned_docs/version-2.3/api/Apify.md",sourceDirName:"api",slug:"/api/apify",permalink:"/sdk/js/docs/2.3/api/apify",draft:!1,tags:[],version:"2.3",lastUpdatedBy:"renovate[bot]",lastUpdatedAt:1693358627,formattedLastUpdatedAt:"Aug 30, 2023",frontMatter:{id_old:"version-2.3.0-apify",title:"Apify",id:"apify"},sidebar:"version-2.3/docs",previous:{title:"Use stealth mode",permalink:"/sdk/js/docs/2.3/examples/use-stealth-mode"},next:{title:"Configuration",permalink:"/sdk/js/docs/2.3/api/configuration"}},u={},m=[{value:"<code>Apify</code> Class",id:"apify-class",level:2},{value:"<code>Apify.addWebhook(options)</code>",id:"apifyaddwebhookoptions",level:2},{value:"<code>Apify.call(actId, [input], [options])</code>",id:"apifycallactid-input-options",level:2},{value:"<code>Apify.callTask(taskId, [input], [options])</code>",id:"apifycalltasktaskid-input-options",level:2},{value:"<code>Apify.createProxyConfiguration([proxyConfigurationOptions])</code>",id:"apifycreateproxyconfigurationproxyconfigurationoptions",level:2},{value:"<code>Apify.events</code>",id:"apifyevents",level:2},{value:"<code>Apify.getEnv()</code>",id:"apifygetenv",level:2},{value:"<code>Apify.getInput()</code>",id:"apifygetinput",level:2},{value:"<code>Apify.getMemoryInfo()</code>",id:"apifygetmemoryinfo",level:2},{value:"<code>Apify.getValue(key)</code>",id:"apifygetvaluekey",level:2},{value:"<code>Apify.isAtHome()</code>",id:"apifyisathome",level:2},{value:"<code>Apify.launchPlaywright([launchContext])</code>",id:"apifylaunchplaywrightlaunchcontext",level:2},{value:"<code>Apify.launchPuppeteer([launchContext])</code>",id:"apifylaunchpuppeteerlaunchcontext",level:2},{value:"<code>Apify.main(userFunc)</code>",id:"apifymainuserfunc",level:2},{value:"<code>Apify.metamorph(targetActorId, [input], [options])</code>",id:"apifymetamorphtargetactorid-input-options",level:2},{value:"<code>Apify.newClient([options])</code>",id:"apifynewclientoptions",level:2},{value:"<code>Apify.openDataset([datasetIdOrName], [options])</code>",id:"apifyopendatasetdatasetidorname-options",level:2},{value:"<code>Apify.openKeyValueStore([storeIdOrName], [options])</code>",id:"apifyopenkeyvaluestorestoreidorname-options",level:2},{value:"<code>Apify.openRequestList(listName, sources, [options])</code>",id:"apifyopenrequestlistlistname-sources-options",level:2},{value:"<code>Apify.openRequestQueue([queueIdOrName], [options])</code>",id:"apifyopenrequestqueuequeueidorname-options",level:2},{value:"<code>Apify.openSessionPool(sessionPoolOptions)</code>",id:"apifyopensessionpoolsessionpooloptions",level:2},{value:"<code>Apify.pushData(item)</code>",id:"apifypushdataitem",level:2},{value:"<code>Apify.setValue(key, value, [options])</code>",id:"apifysetvaluekey-value-options",level:2}],d={toc:m},k="wrapper";function c(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)(k,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("a",{name:"apify"}),(0,i.kt)("p",null,"The following section describes all functions and properties provided by the ",(0,i.kt)("inlineCode",{parentName:"p"},"apify")," package, except individual classes and namespaces that have their\nseparate, detailed, documentation pages accessible from the left sidebar. To learn how Apify SDK works, we suggest following the\n",(0,i.kt)("a",{parentName:"p",href:"../guides/getting-started",target:null,rel:null},"Getting Started")," tutorial."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Important:")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The following functions: ",(0,i.kt)("inlineCode",{parentName:"p"},"addWebhook"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"call"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"callTask")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"newClient")," invoke features of the ",(0,i.kt)("a",{parentName:"p",href:"../guides/apify-platform",target:null,rel:null},"Apify platform")," and\nrequire your scripts to be authenticated. See the ",(0,i.kt)("a",{parentName:"p",href:"../guides/apify-platform#logging-into-apify-platform-from-apify-sdk",target:null,rel:null},"authentication guide")," for\ninstructions.")),(0,i.kt)("h2",{id:"apify-class"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify")," Class"),(0,i.kt)("p",null,"As opposed to those helper functions, there is an alternative approach using ",(0,i.kt)("inlineCode",{parentName:"p"},"Apify")," class (a named export). It has mostly the same API, but the\nmethods on ",(0,i.kt)("inlineCode",{parentName:"p"},"Apify")," instance will use the configuration provided in the constructor. Environment variables will have precedence over this\nconfiguration."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { Apify } = require('apify'); // use named export to get the class\n\nconst sdk = new Apify({ token: '123' });\nconsole.log(sdk.config.get('token')); // '123'\n\n// the token will be passed to the `call` method automatically\nconst run = await sdk.call('apify/hello-world', { myInput: 123 });\nconsole.log(`Received message: ${run.output.body.message}`);\n")),(0,i.kt)("p",null,"Another example shows how the default dataset name can be changed:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { Apify } = require('apify'); // use named export to get the class\n\nconst sdk = new Apify({ defaultDatasetId: 'custom-name' });\nawait sdk.pushData({ myValue: 123 });\n")),(0,i.kt)("p",null,"is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const Apify = require('apify'); // use default export to get the helper functions\n\nconst dataset = await Apify.openDataset('custom-name');\nawait dataset.pushData({ myValue: 123 });\n")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"../api/configuration",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Configuration"))," for details about what can be configured and what are the default values."),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"addwebhook"}),(0,i.kt)("h2",{id:"apifyaddwebhookoptions"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.addWebhook(options)")),(0,i.kt)("p",null,"Creates an ad-hoc webhook for the current actor run, which lets you receive a notification when the actor run finished or failed. For more information\nabout Apify actor webhooks, please see the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.apify.com/webhooks",target:"_blank",rel:"noopener"},"documentation"),"."),(0,i.kt)("p",null,"Note that webhooks are only supported for actors running on the Apify platform. In local environment, the function will print a warning and have no\neffect."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"options")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"eventTypes")),": ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/event-types",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"EventTypes"))," - Array of event types, which you can set for actor run, see the\n",(0,i.kt)("a",{parentName:"li",href:"https://docs.apify.com/webhooks/events#actor-run",target:"_blank",rel:"noopener"},"actor run events")," in the Apify doc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"requestUrl")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - URL which will be requested using HTTP POST request, when actor run will reach the set event type."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[payloadTemplate]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Payload template is a JSON-like string that describes the structure of the webhook POST request payload.\nIt uses JSON syntax, extended with a double curly braces syntax for injecting variables ",(0,i.kt)("inlineCode",{parentName:"li"},"{{variable}}"),". Those variables are resolved at the\ntime of the webhook's dispatch, and a list of available variables with their descriptions is available in the\n",(0,i.kt)("a",{parentName:"li",href:"https://docs.apify.com/webhooks",target:"_blank",rel:"noopener"},"Apify webhook documentation"),". If ",(0,i.kt)("inlineCode",{parentName:"li"},"payloadTemplate")," is omitted, the default payload template is used\n(",(0,i.kt)("a",{parentName:"li",href:"https://docs.apify.com/webhooks/actions#payload-template",target:"_blank",rel:"noopener"},"view docs"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[idempotencyKey]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Idempotency key enables you to ensure that a webhook will not be added multiple times in case of an actor\nrestart or other situation that would cause the ",(0,i.kt)("inlineCode",{parentName:"li"},"addWebhook()")," function to be called again. We suggest using the actor run ID as the\nidempotency key. You can get the run ID by calling ",(0,i.kt)("a",{parentName:"li",href:"../api/apify#getenv",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.getEnv()"))," function.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../typedefs/webhook-run",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Promise<(WebhookRun|undefined)>"))," - The return value is the Webhook object. For more information, see the\n",(0,i.kt)("a",{parentName:"p",href:"https://apify.com/docs/api/v2#/reference/webhooks/webhook-object/get-webhook",target:"_blank",rel:"noopener"},"Get webhook")," API endpoint."),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"call"}),(0,i.kt)("h2",{id:"apifycallactid-input-options"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.call(actId, [input], [options])")),(0,i.kt)("p",null,"Runs an actor on the Apify platform using the current user account (determined by the ",(0,i.kt)("inlineCode",{parentName:"p"},"APIFY_TOKEN")," environment variable), waits for the actor to\nfinish and fetches its output."),(0,i.kt)("p",null,"By passing the ",(0,i.kt)("inlineCode",{parentName:"p"},"waitSecs")," option you can reduce the maximum amount of time to wait for the run to finish. If the value is less than or equal to zero,\nthe function returns immediately after the run is started."),(0,i.kt)("p",null,"The result of the function is an ",(0,i.kt)("a",{parentName:"p",href:"../typedefs/actor-run",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ActorRun"))," object that contains details about the actor run and its output (if any). If the\nactor run fails, the function throws the ",(0,i.kt)("a",{parentName:"p",href:"../api/apify-call-error",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ApifyCallError"))," exception."),(0,i.kt)("p",null,"If you want to run an actor task rather than an actor, please use the ",(0,i.kt)("a",{parentName:"p",href:"../api/apify#calltask",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.callTask()"))," function instead."),(0,i.kt)("p",null,"For more information about actors, read the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.apify.com/actor",target:"_blank",rel:"noopener"},"documentation"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example usage:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const run = await Apify.call('apify/hello-world', { myInput: 123 });\nconsole.log(`Received message: ${run.output.body.message}`);\n")),(0,i.kt)("p",null,"Internally, the ",(0,i.kt)("inlineCode",{parentName:"p"},"call()")," function invokes the ",(0,i.kt)("a",{parentName:"p",href:"https://apify.com/docs/api/v2#/reference/actors/run-collection/run-actor",target:"_blank",rel:"noopener"},"Run actor")," and several other\nAPI endpoints to obtain the output."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Throws"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../api/apify-call-error",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ApifyCallError"))," If the run did not succeed, e.g. if it failed or timed out.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"actId")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Allowed formats are ",(0,i.kt)("inlineCode",{parentName:"li"},"username/actor-name"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"userId/actor-name")," or actor ID."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[input]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"Object<string, *>")," - Input for the actor. If it is an object, it will be stringified to JSON and its content type set to\n",(0,i.kt)("inlineCode",{parentName:"li"},"application/json; charset=utf-8"),". Otherwise the ",(0,i.kt)("inlineCode",{parentName:"li"},"options.contentType")," parameter must be provided."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[options]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"object")," - Object with the settings below:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[contentType]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Content type for the ",(0,i.kt)("inlineCode",{parentName:"li"},"input"),". If not specified, ",(0,i.kt)("inlineCode",{parentName:"li"},"input")," is expected to be an object that will be stringified\nto JSON and content type set to ",(0,i.kt)("inlineCode",{parentName:"li"},"application/json; charset=utf-8"),". If ",(0,i.kt)("inlineCode",{parentName:"li"},"options.contentType")," is specified, then ",(0,i.kt)("inlineCode",{parentName:"li"},"input")," must be a ",(0,i.kt)("inlineCode",{parentName:"li"},"String")," or\n",(0,i.kt)("inlineCode",{parentName:"li"},"Buffer"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[token]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - User API token that is used to run the actor. By default, it is taken from the ",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_TOKEN")," environment variable."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[memoryMbytes]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"number")," - Memory in megabytes which will be allocated for the new actor run. If not provided, the run uses memory of\nthe default actor run configuration."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[timeoutSecs]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"number")," - Timeout for the actor run in seconds. Zero value means there is no timeout. If not provided, the run uses\ntimeout of the default actor run configuration."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[build]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Tag or number of the actor build to run (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"beta")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"1.2.345"),"). If not provided, the run uses build tag or\nnumber from the default actor run configuration (typically ",(0,i.kt)("inlineCode",{parentName:"li"},"latest"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[waitSecs]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"number")," - Maximum time to wait for the actor run to finish, in seconds. If the limit is reached, the returned promise is\nresolved to a run object that will have status ",(0,i.kt)("inlineCode",{parentName:"li"},"READY")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"RUNNING")," and it will not contain the actor run output. If ",(0,i.kt)("inlineCode",{parentName:"li"},"waitSecs")," is null or\nundefined, the function waits for the actor to finish (default behavior)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[fetchOutput]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean")," ",(0,i.kt)("code",null," = true")," - If ",(0,i.kt)("inlineCode",{parentName:"li"},"false")," then the function does not fetch output of the actor."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[disableBodyParser]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean")," ",(0,i.kt)("code",null," = false")," - If ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," then the function will not attempt to parse the actor's output and will\nreturn it in a raw ",(0,i.kt)("inlineCode",{parentName:"li"},"Buffer"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[webhooks]")),": ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/adhoc-webhook",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Array<AdhocWebhook>"))," - Specifies optional webhooks associated with the actor run, which can be\nused to receive a notification e.g. when the actor finished or failed, see\n",(0,i.kt)("a",{parentName:"li",href:"https://docs.apify.com/webhooks/ad-hoc-webhooks",target:"_blank",rel:"noopener"},"ad hook webhooks documentation")," for detailed description.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../typedefs/actor-run",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Promise<ActorRun>"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"calltask"}),(0,i.kt)("h2",{id:"apifycalltasktaskid-input-options"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.callTask(taskId, [input], [options])")),(0,i.kt)("p",null,"Runs an actor task on the Apify platform using the current user account (determined by the ",(0,i.kt)("inlineCode",{parentName:"p"},"APIFY_TOKEN")," environment variable), waits for the task to\nfinish and fetches its output."),(0,i.kt)("p",null,"By passing the ",(0,i.kt)("inlineCode",{parentName:"p"},"waitSecs")," option you can reduce the maximum amount of time to wait for the run to finish. If the value is less than or equal to zero,\nthe function returns immediately after the run is started."),(0,i.kt)("p",null,"The result of the function is an ",(0,i.kt)("a",{parentName:"p",href:"../typedefs/actor-run",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ActorRun"))," object that contains details about the actor run and its output (if any). If the\nactor run failed, the function fails with ",(0,i.kt)("a",{parentName:"p",href:"../api/apify-call-error",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ApifyCallError"))," exception."),(0,i.kt)("p",null,"Note that an actor task is a saved input configuration and options for an actor. If you want to run an actor directly rather than an actor task,\nplease use the ",(0,i.kt)("a",{parentName:"p",href:"../api/apify#call",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.call()"))," function instead."),(0,i.kt)("p",null,"For more information about actor tasks, read the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.apify.com/tasks",target:"_blank",rel:"noopener"},"documentation"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example usage:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const run = await Apify.callTask('bob/some-task');\nconsole.log(`Received message: ${run.output.body.message}`);\n")),(0,i.kt)("p",null,"Internally, the ",(0,i.kt)("inlineCode",{parentName:"p"},"callTask()")," function calls the ",(0,i.kt)("a",{parentName:"p",href:"https://apify.com/docs/api/v2#/reference/actor-tasks/run-collection/run-task",target:"_blank",rel:"noopener"},"Run task")," and several\nother API endpoints to obtain the output."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Throws"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../api/apify-call-error",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ApifyCallError"))," If the run did not succeed, e.g. if it failed or timed out.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"taskId")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Allowed formats are ",(0,i.kt)("inlineCode",{parentName:"li"},"username/task-name"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"userId/task-name")," or task ID."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[input]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"Object<string, *>")," - Input overrides for the actor task. If it is an object, it will be stringified to JSON and its content type\nset to ",(0,i.kt)("inlineCode",{parentName:"li"},"application/json; charset=utf-8"),". Provided input will be merged with actor task input."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[options]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"object")," - Object with the settings below:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[token]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - User API token that is used to run the actor. By default, it is taken from the ",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_TOKEN")," environment variable."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[memoryMbytes]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"number")," - Memory in megabytes which will be allocated for the new actor task run. If not provided, the run uses memory\nof the default actor run configuration."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[timeoutSecs]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"number")," - Timeout for the actor task run in seconds. Zero value means there is no timeout. If not provided, the run uses\ntimeout of the default actor run configuration."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[build]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Tag or number of the actor build to run (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"beta")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"1.2.345"),"). If not provided, the run uses build tag or\nnumber from the default actor run configuration (typically ",(0,i.kt)("inlineCode",{parentName:"li"},"latest"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[waitSecs]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"number")," - Maximum time to wait for the actor task run to finish, in seconds. If the limit is reached, the returned promise\nis resolved to a run object that will have status ",(0,i.kt)("inlineCode",{parentName:"li"},"READY")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"RUNNING")," and it will not contain the actor run output. If ",(0,i.kt)("inlineCode",{parentName:"li"},"waitSecs")," is null or\nundefined, the function waits for the actor task to finish (default behavior)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[webhooks]")),": ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/adhoc-webhook",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Array<AdhocWebhook>"))," - Specifies optional webhooks associated with the actor run, which can be\nused to receive a notification e.g. when the actor finished or failed, see\n",(0,i.kt)("a",{parentName:"li",href:"https://docs.apify.com/webhooks/ad-hoc-webhooks",target:"_blank",rel:"noopener"},"ad hook webhooks documentation")," for detailed description.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../typedefs/actor-run",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Promise<ActorRun>"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"createproxyconfiguration"}),(0,i.kt)("h2",{id:"apifycreateproxyconfigurationproxyconfigurationoptions"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.createProxyConfiguration([proxyConfigurationOptions])")),(0,i.kt)("p",null,"Creates a proxy configuration and returns a promise resolving to an instance of the ",(0,i.kt)("a",{parentName:"p",href:"../api/proxy-configuration",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ProxyConfiguration"))," class that is\nalready initialized."),(0,i.kt)("p",null,"Configures connection to a proxy server with the provided options. Proxy servers are used to prevent target websites from blocking your crawlers based\non IP address rate limits or blacklists. Setting proxy configuration in your crawlers automatically configures them to use the selected proxies for\nall connections."),(0,i.kt)("p",null,"For more details and code examples, see the ",(0,i.kt)("a",{parentName:"p",href:"../api/proxy-configuration",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ProxyConfiguration"))," class."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"\n// Returns initialized proxy configuration class\nconst proxyConfiguration = await Apify.createProxyConfiguration({\n    groups: ['GROUP1', 'GROUP2'] // List of Apify proxy groups\n    countryCode: 'US'\n});\n\nconst crawler = new Apify.CheerioCrawler({\n  // ...\n  proxyConfiguration,\n  handlePageFunction: ({ proxyInfo }) => {\n      const usedProxyUrl = proxyInfo.url; // Getting the proxy URL\n  }\n})\n\n")),(0,i.kt)("p",null,"For compatibility with existing Actor Input UI (Input Schema), this function returns ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," when the following object is passed as\n",(0,i.kt)("inlineCode",{parentName:"p"},"proxyConfigurationOptions"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"{ useApifyProxy: false }\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[proxyConfigurationOptions]")),": ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/proxy-configuration-options",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ProxyConfigurationOptions")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../api/proxy-configuration",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Promise<(ProxyConfiguration|undefined)>"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"events"}),(0,i.kt)("h2",{id:"apifyevents"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.events")),(0,i.kt)("p",null,"Gets an instance of a Node.js' ",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/api/events.html#events_class_eventemitter",target:"_blank",rel:"noopener"},"EventEmitter")," class that emits various events from the\nSDK or the Apify platform. The event emitter is initialized by calling the ",(0,i.kt)("a",{parentName:"p",href:"../api/apify#main",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.main()"))," function."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example usage:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"Apify.events.on('cpuInfo', data => {\n    if (data.isCpuOverloaded) console.log('Oh no, the CPU is overloaded!');\n});\n")),(0,i.kt)("p",null,"The following events are emitted:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cpuInfo"),": ",(0,i.kt)("inlineCode",{parentName:"li"},'{ "isCpuOverloaded": Boolean }')," The event is emitted approximately every second and it indicates whether the actor is using the\nmaximum of available CPU resources. If that's the case, the actor should not add more workload. For example, this event is used by the\n",(0,i.kt)("a",{parentName:"li",href:"../api/autoscaled-pool",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"AutoscaledPool"))," class."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"migrating"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"void")," Emitted when the actor running on the Apify platform is going to be migrated to another worker server soon. You can use it to\npersist the state of the actor and gracefully stop your in-progress tasks, so that they are not interrupted by the migration. For example, this is\nused by the ",(0,i.kt)("a",{parentName:"li",href:"../api/request-list",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestList"))," class."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aborting"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"void")," When a user aborts an actor run on the Apify platform, they can choose to abort gracefully to allow the actor some time before\ngetting killed. This graceful abort emits the ",(0,i.kt)("inlineCode",{parentName:"li"},"aborting")," event which the SDK uses to gracefully stop running crawls and you can use it to do your\nown cleanup as well."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"persistState"),": ",(0,i.kt)("inlineCode",{parentName:"li"},'{ "isMigrating": Boolean }')," Emitted in regular intervals (by default 60 seconds) to notify all components of Apify SDK that it is\ntime to persist their state, in order to avoid repeating all work when the actor restarts. This event is automatically emitted together with the\n",(0,i.kt)("inlineCode",{parentName:"li"},"migrating")," event, in which case the ",(0,i.kt)("inlineCode",{parentName:"li"},"isMigrating")," flag is set to ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),". Otherwise the flag is ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),". Note that the ",(0,i.kt)("inlineCode",{parentName:"li"},"persistState")," event is\nprovided merely for user convenience, you can achieve the same effect using ",(0,i.kt)("inlineCode",{parentName:"li"},"setInterval()")," and listening for the ",(0,i.kt)("inlineCode",{parentName:"li"},"migrating")," event.")),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"getenv"}),(0,i.kt)("h2",{id:"apifygetenv"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.getEnv()")),(0,i.kt)("p",null,"Returns a new ",(0,i.kt)("a",{parentName:"p",href:"../typedefs/apify-env",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ApifyEnv"))," object which contains information parsed from all the ",(0,i.kt)("inlineCode",{parentName:"p"},"APIFY_XXX")," environment variables."),(0,i.kt)("p",null,"For the list of the ",(0,i.kt)("inlineCode",{parentName:"p"},"APIFY_XXX")," environment variables, see ",(0,i.kt)("a",{parentName:"p",href:"https://docs.apify.com/actor/run#environment-variables",target:"_blank",rel:"noopener"},"Actor documentation"),". If some of\nthe variables are not defined or are invalid, the corresponding value in the resulting object will be null."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../typedefs/apify-env",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ApifyEnv"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"getinput"}),(0,i.kt)("h2",{id:"apifygetinput"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.getInput()")),(0,i.kt)("p",null,"Gets the actor input value from the default ",(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"KeyValueStore"))," associated with the current actor run."),(0,i.kt)("p",null,"This is just a convenient shortcut for ",(0,i.kt)("a",{parentName:"p",href:"key-value-store#getvalue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"keyValueStore.getValue('INPUT')")),". For example, calling the following code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const input = await Apify.getInput();\n")),(0,i.kt)("p",null,"is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const store = await Apify.openKeyValueStore();\nawait store.getValue('INPUT');\n")),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("inlineCode",{parentName:"p"},"getInput()")," function does not cache the value read from the key-value store. If you need to use the input multiple times in your actor,\nit is far more efficient to read it once and store it locally."),(0,i.kt)("p",null,"For more information, see ",(0,i.kt)("a",{parentName:"p",href:"../api/apify#openkeyvaluestore",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.openKeyValueStore()"))," and\n",(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store#getvalue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"KeyValueStore.getValue()")),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise<(Object<string, *>|string|Buffer|null)>")," - Returns a promise that resolves to an object, string or\n",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/api/buffer.html",target:"_blank",rel:"noopener"},(0,i.kt)("inlineCode",{parentName:"a"},"Buffer")),", depending on the MIME content type of the record, or ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," if the record is missing."),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"getmemoryinfo"}),(0,i.kt)("h2",{id:"apifygetmemoryinfo"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.getMemoryInfo()")),(0,i.kt)("p",null,"Returns memory statistics of the process and the system, see ",(0,i.kt)("a",{parentName:"p",href:"../typedefs/memory-info",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"MemoryInfo")),"."),(0,i.kt)("p",null,"If the process runs inside of Docker, the ",(0,i.kt)("inlineCode",{parentName:"p"},"getMemoryInfo")," gets container memory limits, otherwise it gets system memory limits."),(0,i.kt)("p",null,"Beware that the function is quite inefficient because it spawns a new process. Therefore you shouldn't call it too often, like more than once per\nsecond."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../typedefs/memory-info",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Promise<MemoryInfo>"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"getvalue"}),(0,i.kt)("h2",{id:"apifygetvaluekey"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.getValue(key)")),(0,i.kt)("p",null,"Gets a value from the default ",(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"KeyValueStore"))," associated with the current actor run."),(0,i.kt)("p",null,"This is just a convenient shortcut for ",(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store#getvalue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"KeyValueStore.getValue()")),". For example, calling the following code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const value = await Apify.getValue('my-key');\n")),(0,i.kt)("p",null,"is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const store = await Apify.openKeyValueStore();\nconst value = await store.getValue('my-key');\n")),(0,i.kt)("p",null,"To store the value to the default key-value store, you can use the ",(0,i.kt)("a",{parentName:"p",href:"../api/apify#setvalue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.setValue()"))," function."),(0,i.kt)("p",null,"For more information, see ",(0,i.kt)("a",{parentName:"p",href:"../api/apify#openkeyvaluestore",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.openKeyValueStore()"))," and\n",(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store#getvalue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"KeyValueStore.getValue()")),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"key")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Unique record key.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise<(Object<string, *>|string|Buffer|null)>")," - Returns a promise that resolves to an object, string or\n",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/api/buffer.html",target:"_blank",rel:"noopener"},(0,i.kt)("inlineCode",{parentName:"a"},"Buffer")),", depending on the MIME content type of the record, or ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," if the record is missing."),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"isathome"}),(0,i.kt)("h2",{id:"apifyisathome"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.isAtHome()")),(0,i.kt)("p",null,"Returns ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," when code is running on Apify platform and ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," otherwise (for example locally)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"launchplaywright"}),(0,i.kt)("h2",{id:"apifylaunchplaywrightlaunchcontext"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.launchPlaywright([launchContext])")),(0,i.kt)("p",null,"Launches headless browsers using Playwright pre-configured to work within the Apify platform. The function has the same return value as\n",(0,i.kt)("inlineCode",{parentName:"p"},"browserType.launch()"),". See ",(0,i.kt)("a",{href:"https://playwright.dev/docs/api/class-browsertype",target:"_blank"}," Playwright documentation")," for more\ndetails."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"launchPlaywright()")," function alters the following Playwright options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Passes the setting from the ",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_HEADLESS")," environment variable to the ",(0,i.kt)("inlineCode",{parentName:"li"},"headless")," option, unless it was already defined by the caller or\n",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_XVFB")," environment variable is set to ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),". Note that Apify Actor cloud platform automatically sets ",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_HEADLESS=1")," to all running actors."),(0,i.kt)("li",{parentName:"ul"},"Takes the ",(0,i.kt)("inlineCode",{parentName:"li"},"proxyUrl")," option, validates it and adds it to ",(0,i.kt)("inlineCode",{parentName:"li"},"launchOptions")," in a proper format. The proxy URL must define a port number and have one\nof the following schemes: ",(0,i.kt)("inlineCode",{parentName:"li"},"http://"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"https://"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"socks4://")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"socks5://"),". If the proxy is HTTP (i.e. has the ",(0,i.kt)("inlineCode",{parentName:"li"},"http://")," scheme) and contains\nusername or password, the ",(0,i.kt)("inlineCode",{parentName:"li"},"launchPlaywright")," functions sets up an anonymous proxy HTTP to make the proxy work with headless Chrome. For more\ninformation, read the",(0,i.kt)("a",{href:"https://blog.apify.com/how-to-make-headless-chrome-and-puppeteer-use-a-proxy-server-with-authentication-249a21a79212",target:"_blank"},"blog post about proxy-chain library"),".")),(0,i.kt)("p",null,"To use this function, you need to have the ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/playwright",target:"_blank",rel:"noopener"},"Playwright")," NPM package installed in your project. When running\non the Apify Platform, you can achieve that simply by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"apify/actor-node-playwright-*")," base Docker image for your actor - see\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.apify.com/actor/build#base-images",target:"_blank",rel:"noopener"},"Apify Actor documentation")," for details."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[launchContext]")),": ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/playwright-launch-context",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"PlaywrightLaunchContext"))," - Optional settings passed to ",(0,i.kt)("inlineCode",{parentName:"li"},"browserType.launch()"),". In\naddition to ",(0,i.kt)("a",{parentName:"li",href:"https://playwright.dev/docs/api/class-browsertype?_highlight=launch#browsertypelaunchoptions",target:"_blank",rel:"noopener"},"Playwright's options")," the object may\ncontain our own ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/playwright-launch-context",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"PlaywrightLaunchContext"))," that enable additional features.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise<*>")," - Promise that resolves to Playwright's ",(0,i.kt)("inlineCode",{parentName:"p"},"Browser")," instance."),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"launchpuppeteer"}),(0,i.kt)("h2",{id:"apifylaunchpuppeteerlaunchcontext"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.launchPuppeteer([launchContext])")),(0,i.kt)("p",null,"Launches headless Chrome using Puppeteer pre-configured to work within the Apify platform. The function has the same argument and the return value as\n",(0,i.kt)("inlineCode",{parentName:"p"},"puppeteer.launch()"),". See ",(0,i.kt)("a",{href:"https://github.com/puppeteer/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions",target:"_blank"}," Puppeteer\ndocumentation")," for more details."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"launchPuppeteer()")," function alters the following Puppeteer options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Passes the setting from the ",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_HEADLESS")," environment variable to the ",(0,i.kt)("inlineCode",{parentName:"li"},"headless")," option, unless it was already defined by the caller or\n",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_XVFB")," environment variable is set to ",(0,i.kt)("inlineCode",{parentName:"li"},"1"),". Note that Apify Actor cloud platform automatically sets ",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_HEADLESS=1")," to all running actors."),(0,i.kt)("li",{parentName:"ul"},"Takes the ",(0,i.kt)("inlineCode",{parentName:"li"},"proxyUrl")," option, validates it and adds it to ",(0,i.kt)("inlineCode",{parentName:"li"},"args")," as ",(0,i.kt)("inlineCode",{parentName:"li"},"--proxy-server=XXX"),". The proxy URL must define a port number and have one of\nthe following schemes: ",(0,i.kt)("inlineCode",{parentName:"li"},"http://"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"https://"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"socks4://")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"socks5://"),". If the proxy is HTTP (i.e. has the ",(0,i.kt)("inlineCode",{parentName:"li"},"http://")," scheme) and contains\nusername or password, the ",(0,i.kt)("inlineCode",{parentName:"li"},"launchPuppeteer")," functions sets up an anonymous proxy HTTP to make the proxy work with headless Chrome. For more\ninformation, read the",(0,i.kt)("a",{href:"https://blog.apify.com/how-to-make-headless-chrome-and-puppeteer-use-a-proxy-server-with-authentication-249a21a79212",target:"_blank"},"blog post about proxy-chain library"),".")),(0,i.kt)("p",null,"To use this function, you need to have the ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/puppeteer",target:"_blank",rel:"noopener"},"puppeteer")," NPM package installed in your project. When running on\nthe Apify cloud, you can achieve that simply by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"apify/actor-node-chrome")," base Docker image for your actor - see\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.apify.com/actor/build#base-images",target:"_blank",rel:"noopener"},"Apify Actor documentation")," for details."),(0,i.kt)("p",null,"For an example of usage, see the ",(0,i.kt)("a",{parentName:"p",href:"../examples/synchronous-run",target:null,rel:null},"Synchronous run Example")," or the\n",(0,i.kt)("a",{parentName:"p",href:"../examples/puppeteer-with-proxy",target:null,rel:null},"Puppeteer proxy Example")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[launchContext]")),": ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/puppeteer-launch-context",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"PuppeteerLaunchContext"))," - All ",(0,i.kt)("inlineCode",{parentName:"li"},"PuppeteerLauncher")," parameters are passed via an\nlaunchContext object. If you want to pass custom ",(0,i.kt)("inlineCode",{parentName:"li"},"puppeteer.launch(options)")," options you can use the ",(0,i.kt)("inlineCode",{parentName:"li"},"PuppeteerLaunchContext.launchOptions"),"\nproperty.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise<*>")," - Promise that resolves to Puppeteer's ",(0,i.kt)("inlineCode",{parentName:"p"},"Browser")," instance."),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"main"}),(0,i.kt)("h2",{id:"apifymainuserfunc"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.main(userFunc)")),(0,i.kt)("p",null,"Runs the main user function that performs the job of the actor and terminates the process when the user function finishes."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The ",(0,i.kt)("inlineCode",{parentName:"strong"},"Apify.main()")," function is optional")," and is provided merely for your convenience. It is mainly useful when you're running your code as an actor\non the ",(0,i.kt)("a",{parentName:"p",href:"https://apify.com/actors",target:"_blank",rel:"noopener"},"Apify platform"),". However, if you want to use Apify SDK tools directly inside your existing projects, e.g. running in\nan ",(0,i.kt)("a",{parentName:"p",href:"https://expressjs.com/",target:"_blank",rel:"noopener"},"Express")," server, on ",(0,i.kt)("a",{parentName:"p",href:"https://cloud.google.com/functions",target:"_blank",rel:"noopener"},"Google Cloud functions")," or\n",(0,i.kt)("a",{parentName:"p",href:"https://aws.amazon.com/lambda/",target:"_blank",rel:"noopener"},"AWS Lambda"),", it's better to avoid it since the function terminates the main process when it finishes!"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Apify.main()")," function performs the following actions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"When running on the Apify platform (i.e. ",(0,i.kt)("code",null,"APIFY_IS_AT_HOME")," environment variable is set), it sets up a connection to listen for\nplatform events. For example, to get a notification about an imminent migration to another server. See ",(0,i.kt)("a",{parentName:"li",href:"../api/apify#events",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.events"))," for\ndetails."),(0,i.kt)("li",{parentName:"ul"},"It checks that either ",(0,i.kt)("code",null,"APIFY_TOKEN")," or ",(0,i.kt)("code",null,"APIFY_LOCAL_STORAGE_DIR")," environment variable is defined. If not, the functions sets",(0,i.kt)("code",null,"APIFY_LOCAL_STORAGE_DIR")," to ",(0,i.kt)("code",null,"./apify_storage")," inside the current working directory. This is to simplify running code examples."),(0,i.kt)("li",{parentName:"ul"},"It invokes the user function passed as the ",(0,i.kt)("code",null,"userFunc")," parameter."),(0,i.kt)("li",{parentName:"ul"},"If the user function returned a promise, waits for it to resolve."),(0,i.kt)("li",{parentName:"ul"},"If the user function throws an exception or some other error is encountered, prints error details to console so that they are stored to the log."),(0,i.kt)("li",{parentName:"ul"},"Exits the Node.js process, with zero exit code on success and non-zero on errors.")),(0,i.kt)("p",null,"The user function can be synchronous:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"Apify.main(() => {\n    // My synchronous function that returns immediately\n    console.log('Hello world from actor!');\n});\n")),(0,i.kt)("p",null,"If the user function returns a promise, it is considered asynchronous:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const { requestAsBrowser } = require('some-request-library');\n\nApify.main(() => {\n    // My asynchronous function that returns a promise\n    return request('http://www.example.com').then(html => {\n        console.log(html);\n    });\n});\n")),(0,i.kt)("p",null,"To simplify your code, you can take advantage of the ",(0,i.kt)("inlineCode",{parentName:"p"},"async"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"await")," keywords:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const request = require('some-request-library');\n\nApify.main(async () => {\n    // My asynchronous function\n    const html = await request('http://www.example.com');\n    console.log(html);\n});\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"userFunc")),": ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/user-func",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"UserFunc"))," - User function to be executed. If it returns a promise, the promise will be awaited. The user\nfunction is called with no arguments.")),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"metamorph"}),(0,i.kt)("h2",{id:"apifymetamorphtargetactorid-input-options"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.metamorph(targetActorId, [input], [options])")),(0,i.kt)("p",null,"Transforms this actor run to an actor run of a given actor. The system stops the current container and starts the new container instead. All the\ndefault storages are preserved and the new input is stored under the ",(0,i.kt)("inlineCode",{parentName:"p"},"INPUT-METAMORPH-1")," key in the same default key-value store."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"targetActorId")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Either ",(0,i.kt)("inlineCode",{parentName:"li"},"username/actor-name")," or actor ID of an actor to which we want to metamorph."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[input]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"Object<string, *>")," - Input for the actor. If it is an object, it will be stringified to JSON and its content type set to\n",(0,i.kt)("inlineCode",{parentName:"li"},"application/json; charset=utf-8"),". Otherwise the ",(0,i.kt)("inlineCode",{parentName:"li"},"options.contentType")," parameter must be provided."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[options]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"object")," - Object with the settings below:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[contentType]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Content type for the ",(0,i.kt)("inlineCode",{parentName:"li"},"input"),". If not specified, ",(0,i.kt)("inlineCode",{parentName:"li"},"input")," is expected to be an object that will be stringified\nto JSON and content type set to ",(0,i.kt)("inlineCode",{parentName:"li"},"application/json; charset=utf-8"),". If ",(0,i.kt)("inlineCode",{parentName:"li"},"options.contentType")," is specified, then ",(0,i.kt)("inlineCode",{parentName:"li"},"input")," must be a ",(0,i.kt)("inlineCode",{parentName:"li"},"String")," or\n",(0,i.kt)("inlineCode",{parentName:"li"},"Buffer"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[build]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Tag or number of the target actor build to metamorph into (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"beta")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"1.2.345"),"). If not provided, the run uses\nbuild tag or number from the default actor run configuration (typically ",(0,i.kt)("inlineCode",{parentName:"li"},"latest"),").")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise<void>")),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"newclient"}),(0,i.kt)("h2",{id:"apifynewclientoptions"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.newClient([options])")),(0,i.kt)("p",null,"Returns a new instance of the Apify API client. The ",(0,i.kt)("inlineCode",{parentName:"p"},"ApifyClient")," class is provided by the"),(0,i.kt)("a",{href:"https://www.npmjs.com/package/apify-client",target:"_blank"},"apify-client")," NPM package, and it is automatically configured using the `APIFY_API_BASE_URL`, and `APIFY_TOKEN` environment variables. You can override the token via the available options. That's useful if you want to use the client as a different Apify user than the SDK internals are using.",(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[options]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[token]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[maxRetries]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[minDelayBetweenRetriesMillis]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string"))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../api/apify",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"ApifyClient"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"opendataset"}),(0,i.kt)("h2",{id:"apifyopendatasetdatasetidorname-options"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.openDataset([datasetIdOrName], [options])")),(0,i.kt)("p",null,"Opens a dataset and returns a promise resolving to an instance of the ",(0,i.kt)("a",{parentName:"p",href:"../api/dataset",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Dataset"))," class."),(0,i.kt)("p",null,"Datasets are used to store structured data where each object stored has the same attributes, such as online store products or real estate offers. The\nactual data is stored either on the local filesystem or in the cloud."),(0,i.kt)("p",null,"For more details and code examples, see the ",(0,i.kt)("a",{parentName:"p",href:"../api/dataset",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Dataset"))," class."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[datasetIdOrName]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - ID or name of the dataset to be opened. If ",(0,i.kt)("inlineCode",{parentName:"li"},"null")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"undefined"),", the function returns the default dataset\nassociated with the actor run."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[options]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"Object"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[forceCloud]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean")," ",(0,i.kt)("code",null," = false")," - If set to ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," then the function uses cloud storage usage even if the\n",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_LOCAL_STORAGE_DIR")," environment variable is set. This way it is possible to combine local and cloud storage."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[config]")),": ",(0,i.kt)("a",{parentName:"li",href:"../api/configuration",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Configuration"))," - SDK configuration instance, defaults to the static register")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../api/dataset",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Promise<Dataset>"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"openkeyvaluestore"}),(0,i.kt)("h2",{id:"apifyopenkeyvaluestorestoreidorname-options"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.openKeyValueStore([storeIdOrName], [options])")),(0,i.kt)("p",null,"Opens a key-value store and returns a promise resolving to an instance of the ",(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"KeyValueStore"))," class."),(0,i.kt)("p",null,"Key-value stores are used to store records or files, along with their MIME content type. The records are stored and retrieved using a unique key. The\nactual data is stored either on a local filesystem or in the Apify cloud."),(0,i.kt)("p",null,"For more details and code examples, see the ",(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"KeyValueStore"))," class."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[storeIdOrName]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - ID or name of the key-value store to be opened. If ",(0,i.kt)("inlineCode",{parentName:"li"},"null")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"undefined"),", the function returns the default\nkey-value store associated with the actor run."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[options]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[forceCloud]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean")," ",(0,i.kt)("code",null," = false")," - If set to ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," then the function uses cloud storage usage even if the\n",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_LOCAL_STORAGE_DIR")," environment variable is set. This way it is possible to combine local and cloud storage."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[config]")),": ",(0,i.kt)("a",{parentName:"li",href:"../api/configuration",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Configuration"))," - SDK configuration instance, defaults to the static register")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Promise<KeyValueStore>"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"openrequestlist"}),(0,i.kt)("h2",{id:"apifyopenrequestlistlistname-sources-options"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.openRequestList(listName, sources, [options])")),(0,i.kt)("p",null,"Opens a request list and returns a promise resolving to an instance of the ",(0,i.kt)("a",{parentName:"p",href:"../api/request-list",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestList"))," class that is already initialized."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../api/request-list",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestList"))," represents a list of URLs to crawl, which is always stored in memory. To enable picking up where left off after a\nprocess restart, the request list sources are persisted to the key-value store at initialization of the list. Then, while crawling, a small state\nobject is regularly persisted to keep track of the crawling status."),(0,i.kt)("p",null,"For more details and code examples, see the ",(0,i.kt)("a",{parentName:"p",href:"../api/request-list",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestList"))," class."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example usage:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const sources = ['https://www.example.com', 'https://www.google.com', 'https://www.bing.com'];\n\nconst requestList = await Apify.openRequestList('my-name', sources);\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"listName")),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," | ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," - Name of the request list to be opened. Setting a name enables the ",(0,i.kt)("inlineCode",{parentName:"p"},"RequestList"),"'s state to be persisted in the\nkey-value store. This is useful in case of a restart or migration. Since ",(0,i.kt)("inlineCode",{parentName:"p"},"RequestList")," is only stored in memory, a restart or migration wipes it\nclean. Setting a name will enable the ",(0,i.kt)("inlineCode",{parentName:"p"},"RequestList"),"'s state to survive those situations and continue where it left off."),(0,i.kt)("p",{parentName:"li"},"The name will be used as a prefix in key-value store, producing keys such as ",(0,i.kt)("inlineCode",{parentName:"p"},"NAME-REQUEST_LIST_STATE")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"NAME-REQUEST_LIST_SOURCES"),"."),(0,i.kt)("p",{parentName:"li"},"If ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),", the list will not be persisted and will only be stored in memory. Process restart will then cause the list to be crawled again from the\nbeginning. We suggest always using a name.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"sources")),": ",(0,i.kt)("a",{parentName:"p",href:"../typedefs/request-options",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Array<(RequestOptions|Request|string)>"))," - An array of sources of URLs for the\n",(0,i.kt)("a",{parentName:"p",href:"../api/request-list",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestList")),". It can be either an array of strings, plain objects that define at least the ",(0,i.kt)("inlineCode",{parentName:"p"},"url")," property, or an array of\n",(0,i.kt)("a",{parentName:"p",href:"../api/request",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Request"))," instances."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"IMPORTANT:")," The ",(0,i.kt)("inlineCode",{parentName:"p"},"sources")," array will be consumed (left empty) after ",(0,i.kt)("a",{parentName:"p",href:"../api/request-list",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestList"))," initializes. This is a measure to\nprevent memory leaks in situations when millions of sources are added."))),(0,i.kt)("p",null,"Additionally, the ",(0,i.kt)("inlineCode",{parentName:"p"},"requestsFromUrl")," property may be used instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"url"),", which will instruct ",(0,i.kt)("a",{parentName:"p",href:"../api/request-list",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestList"))," to download the\nsource URLs from a given remote location. The URLs will be parsed from the received response. In this case you can limit the URLs using ",(0,i.kt)("inlineCode",{parentName:"p"},"regex"),"\nparameter containing regular expression pattern for URLs to be included."),(0,i.kt)("p",null,"For details, see the ",(0,i.kt)("a",{parentName:"p",href:"../typedefs/request-list-options#sources",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestListOptions.sources"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[options]")),": ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/request-list-options",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestListOptions"))," - The ",(0,i.kt)("a",{parentName:"li",href:"../api/request-list",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestList"))," options. Note that the\n",(0,i.kt)("inlineCode",{parentName:"li"},"listName")," parameter supersedes the ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/request-list-options#persiststatekey",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestListOptions.persistStateKey"))," and\n",(0,i.kt)("a",{parentName:"li",href:"../typedefs/request-list-options#persistrequestskey",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestListOptions.persistRequestsKey"))," options and the ",(0,i.kt)("inlineCode",{parentName:"li"},"sources")," parameter supersedes the\n",(0,i.kt)("a",{parentName:"li",href:"../typedefs/request-list-options#sources",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestListOptions.sources"))," option.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../api/request-list",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Promise<RequestList>"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"openrequestqueue"}),(0,i.kt)("h2",{id:"apifyopenrequestqueuequeueidorname-options"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.openRequestQueue([queueIdOrName], [options])")),(0,i.kt)("p",null,"Opens a request queue and returns a promise resolving to an instance of the ",(0,i.kt)("a",{parentName:"p",href:"../api/request-queue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestQueue"))," class."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../api/request-queue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestQueue"))," represents a queue of URLs to crawl, which is stored either on local filesystem or in the cloud. The queue is\nused for deep crawling of websites, where you start with several URLs and then recursively follow links to other pages. The data structure supports\nboth breadth-first and depth-first crawling orders."),(0,i.kt)("p",null,"For more details and code examples, see the ",(0,i.kt)("a",{parentName:"p",href:"../api/request-queue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"RequestQueue"))," class."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[queueIdOrName]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - ID or name of the request queue to be opened. If ",(0,i.kt)("inlineCode",{parentName:"li"},"null")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"undefined"),", the function returns the default request\nqueue associated with the actor run."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[options]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[forceCloud]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean")," ",(0,i.kt)("code",null," = false")," - If set to ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," then the function uses cloud storage usage even if the\n",(0,i.kt)("inlineCode",{parentName:"li"},"APIFY_LOCAL_STORAGE_DIR")," environment variable is set. This way it is possible to combine local and cloud storage.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../api/request-queue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Promise<RequestQueue>"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"opensessionpool"}),(0,i.kt)("h2",{id:"apifyopensessionpoolsessionpooloptions"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.openSessionPool(sessionPoolOptions)")),(0,i.kt)("p",null,"Opens a SessionPool and returns a promise resolving to an instance of the ",(0,i.kt)("a",{parentName:"p",href:"../api/session-pool",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"SessionPool"))," class that is already initialized."),(0,i.kt)("p",null,"For more details and code examples, see the ",(0,i.kt)("a",{parentName:"p",href:"../api/session-pool",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"SessionPool"))," class."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"sessionPoolOptions")),": ",(0,i.kt)("a",{parentName:"li",href:"../typedefs/session-pool-options",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"SessionPoolOptions")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../api/session-pool",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Promise<SessionPool>"))),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"pushdata"}),(0,i.kt)("h2",{id:"apifypushdataitem"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.pushData(item)")),(0,i.kt)("p",null,"Stores an object or an array of objects to the default ",(0,i.kt)("a",{parentName:"p",href:"../api/dataset",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Dataset"))," of the current actor run."),(0,i.kt)("p",null,"This is just a convenient shortcut for ",(0,i.kt)("a",{parentName:"p",href:"../api/dataset#pushdata",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Dataset.pushData()")),". For example, calling the following code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"await Apify.pushData({ myValue: 123 });\n")),(0,i.kt)("p",null,"is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const dataset = await Apify.openDataset();\nawait dataset.pushData({ myValue: 123 });\n")),(0,i.kt)("p",null,"For more information, see ",(0,i.kt)("a",{parentName:"p",href:"../api/apify#opendataset",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.openDataset()"))," and ",(0,i.kt)("a",{parentName:"p",href:"../api/dataset#pushdata",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Dataset.pushData()"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"IMPORTANT"),": Make sure to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"await")," keyword when calling ",(0,i.kt)("inlineCode",{parentName:"p"},"pushData()"),", otherwise the actor process might finish before the data are stored!"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"item")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"object")," - Object or array of objects containing data to be stored in the default dataset. The objects must be serializable to JSON\nand the JSON representation of each object must be smaller than 9MB.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise<void>")),(0,i.kt)("hr",null),(0,i.kt)("a",{name:"setvalue"}),(0,i.kt)("h2",{id:"apifysetvaluekey-value-options"},(0,i.kt)("inlineCode",{parentName:"h2"},"Apify.setValue(key, value, [options])")),(0,i.kt)("p",null,"Stores or deletes a value in the default ",(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"KeyValueStore"))," associated with the current actor run."),(0,i.kt)("p",null,"This is just a convenient shortcut for ",(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store#setvalue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"KeyValueStore.setValue()")),". For example, calling the following code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"await Apify.setValue('OUTPUT', { foo: 'bar' });\n")),(0,i.kt)("p",null,"is equivalent to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const store = await Apify.openKeyValueStore();\nawait store.setValue('OUTPUT', { foo: 'bar' });\n")),(0,i.kt)("p",null,"To get a value from the default key-value store, you can use the ",(0,i.kt)("a",{parentName:"p",href:"../api/apify#getvalue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.getValue()"))," function."),(0,i.kt)("p",null,"For more information, see ",(0,i.kt)("a",{parentName:"p",href:"../api/apify#openkeyvaluestore",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"Apify.openKeyValueStore()"))," and\n",(0,i.kt)("a",{parentName:"p",href:"../api/key-value-store#getvalue",target:null,rel:null},(0,i.kt)("inlineCode",{parentName:"a"},"KeyValueStore.getValue()")),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"key")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Unique record key."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"value")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"*")," - Record data, which can be one of the following values:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"null"),", the record in the key-value store is deleted."),(0,i.kt)("li",{parentName:"ul"},"If no ",(0,i.kt)("inlineCode",{parentName:"li"},"options.contentType")," is specified, ",(0,i.kt)("inlineCode",{parentName:"li"},"value")," can be any JavaScript object and it will be stringified to JSON."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"options.contentType")," is set, ",(0,i.kt)("inlineCode",{parentName:"li"},"value")," is taken as is and it must be a ",(0,i.kt)("inlineCode",{parentName:"li"},"String")," or ",(0,i.kt)("a",{parentName:"li",href:"https://nodejs.org/api/buffer.html",target:"_blank",rel:"noopener"},(0,i.kt)("inlineCode",{parentName:"a"},"Buffer")),". For any\nother value an error will be thrown."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[options]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"object"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"[contentType]")),": ",(0,i.kt)("inlineCode",{parentName:"li"},"string")," - Specifies a custom MIME content type of the record.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise<void>")),(0,i.kt)("hr",null))}c.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),k=r,c=m["".concat(p,".").concat(k)]||m[k]||d[k]||i;return n?a.createElement(c,o(o({ref:t},u),{},{components:n})):a.createElement(c,o({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"}}]);