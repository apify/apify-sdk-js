{
	"id": 0,
	"name": "apify",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 279,
			"name": "Actor",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`Actor`"
					},
					{
						"kind": "text",
						"text": " class serves as an alternative approach to the static helpers exported from the package. It allows to pass configuration\nthat will be used on the instance methods. Environment variables will have precedence over this configuration.\nSee "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "Configuration"
					},
					{
						"kind": "text",
						"text": " for details about what can be configured and what are the default values."
					}
				]
			},
			"children": [
				{
					"id": 391,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 68,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L68"
						}
					],
					"signatures": [
						{
							"id": 392,
							"name": "new Actor",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 393,
									"name": "Data",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									}
								}
							],
							"parameters": [
								{
									"id": 394,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ConfigurationOptions",
										"qualifiedName": "ConfigurationOptions",
										"package": "@crawlee/core"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 279,
								"typeArguments": [
									{
										"type": "reference",
										"id": 393,
										"name": "Data"
									}
								],
								"name": "Actor"
							}
						}
					]
				},
				{
					"id": 385,
					"name": "apifyClient",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1349,
							"character": 15,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1349"
						}
					],
					"getSignature": {
						"id": 386,
						"name": "apifyClient",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Default "
								},
								{
									"kind": "inline-tag",
									"tag": "@apilink",
									"text": "ApifyClient"
								},
								{
									"kind": "text",
									"text": " instance."
								}
							]
						},
						"type": {
							"type": "reference",
							"id": 205,
							"name": "ApifyClient",
							"qualifiedName": "ApifyClient",
							"package": "apify-client"
						}
					}
				},
				{
					"id": 387,
					"name": "config",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1354,
							"character": 15,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1354"
						}
					],
					"getSignature": {
						"id": 388,
						"name": "config",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Default "
								},
								{
									"kind": "inline-tag",
									"tag": "@apilink",
									"text": "Configuration"
								},
								{
									"kind": "text",
									"text": " instance."
								}
							]
						},
						"type": {
							"type": "reference",
							"id": 643,
							"name": "Configuration"
						}
					}
				},
				{
					"id": 326,
					"name": "abort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1042,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1042"
						}
					],
					"signatures": [
						{
							"id": 327,
							"name": "abort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Aborts given actor run on the Apify platform using the current user account (determined by the "
									},
									{
										"kind": "code",
										"text": "`APIFY_TOKEN`"
									},
									{
										"kind": "text",
										"text": " environment variable).\n\nThe result of the function is an "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "ActorRun"
									},
									{
										"kind": "text",
										"text": " object that contains details about the actor run.\n\nFor more information about actors, read the\n[documentation](https://docs.apify.com/actor).\n\n**Example usage:**\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst run = await Actor.abort(runId);\n```"
									}
								]
							},
							"parameters": [
								{
									"id": 328,
									"name": "runId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 329,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 545,
										"name": "AbortOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 564,
										"name": "ActorRun",
										"qualifiedName": "ActorRun",
										"package": "apify-client"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 337,
					"name": "addWebhook",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1082,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1082"
						}
					],
					"signatures": [
						{
							"id": 338,
							"name": "addWebhook",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an ad-hoc webhook for the current actor run, which lets you receive a notification when the actor run finished or failed.\nFor more information about Apify actor webhooks, please see the [documentation](https://docs.apify.com/webhooks).\n\nNote that webhooks are only supported for actors running on the Apify platform.\nIn local environment, the function will print a warning and have no effect."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The return value is the Webhook object.\nFor more information, see the [Get webhook](https://apify.com/docs/api/v2#/reference/webhooks/webhook-object/get-webhook) API endpoint."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 339,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 548,
										"name": "WebhookOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "Webhook",
												"qualifiedName": "Webhook",
												"package": "apify-client"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 311,
					"name": "call",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 958,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L958"
						}
					],
					"signatures": [
						{
							"id": 312,
							"name": "call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Runs an actor on the Apify platform using the current user account (determined by the "
									},
									{
										"kind": "code",
										"text": "`APIFY_TOKEN`"
									},
									{
										"kind": "text",
										"text": " environment variable),\nwaits for the actor to finish and fetches its output.\n\nBy passing the "
									},
									{
										"kind": "code",
										"text": "`waitSecs`"
									},
									{
										"kind": "text",
										"text": " option you can reduce the maximum amount of time to wait for the run to finish.\nIf the value is less than or equal to zero, the function returns immediately after the run is started.\n\nThe result of the function is an "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "ActorRun"
									},
									{
										"kind": "text",
										"text": " object\nthat contains details about the actor run and its output (if any).\n\nIf you want to run an actor task rather than an actor, please use the\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Actor.callTask"
									},
									{
										"kind": "text",
										"text": " function instead.\n\nFor more information about actors, read the\n[documentation](https://docs.apify.com/actor).\n\n**Example usage:**\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst run = await Actor.call('apify/hello-world', { myInput: 123 });\nconsole.log(`Received message: ${run.output.body.message}`);\n```"
									},
									{
										"kind": "text",
										"text": "\n\nInternally, the "
									},
									{
										"kind": "code",
										"text": "`call()`"
									},
									{
										"kind": "text",
										"text": " function invokes the\n[Run actor](https://apify.com/docs/api/v2#/reference/actors/run-collection/run-actor)\nand several other API endpoints to obtain the output."
									}
								]
							},
							"parameters": [
								{
									"id": 313,
									"name": "actorId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allowed formats are "
											},
											{
												"kind": "code",
												"text": "`username/actor-name`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`userId/actor-name`"
											},
											{
												"kind": "text",
												"text": " or actor ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 314,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Input for the actor. If it is an object, it will be stringified to\n JSON and its content type set to "
											},
											{
												"kind": "code",
												"text": "`application/json; charset=utf-8`"
											},
											{
												"kind": "text",
												"text": ".\n Otherwise the "
											},
											{
												"kind": "code",
												"text": "`options.contentType`"
											},
											{
												"kind": "text",
												"text": " parameter must be provided."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 315,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 530,
										"name": "CallOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 564,
										"name": "ActorRun",
										"qualifiedName": "ActorRun",
										"package": "apify-client"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 316,
					"name": "callTask",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 997,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L997"
						}
					],
					"signatures": [
						{
							"id": 317,
							"name": "callTask",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Runs an actor task on the Apify platform using the current user account (determined by the "
									},
									{
										"kind": "code",
										"text": "`APIFY_TOKEN`"
									},
									{
										"kind": "text",
										"text": " environment variable),\nwaits for the task to finish and fetches its output.\n\nBy passing the "
									},
									{
										"kind": "code",
										"text": "`waitSecs`"
									},
									{
										"kind": "text",
										"text": " option you can reduce the maximum amount of time to wait for the run to finish.\nIf the value is less than or equal to zero, the function returns immediately after the run is started.\n\nThe result of the function is an "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "ActorRun"
									},
									{
										"kind": "text",
										"text": " object\nthat contains details about the actor run and its output (if any).\n\nNote that an actor task is a saved input configuration and options for an actor.\nIf you want to run an actor directly rather than an actor task, please use the\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Actor.call"
									},
									{
										"kind": "text",
										"text": " function instead.\n\nFor more information about actor tasks, read the [documentation](https://docs.apify.com/tasks).\n\n**Example usage:**\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst run = await Actor.callTask('bob/some-task');\nconsole.log(`Received message: ${run.output.body.message}`);\n```"
									},
									{
										"kind": "text",
										"text": "\n\nInternally, the "
									},
									{
										"kind": "code",
										"text": "`callTask()`"
									},
									{
										"kind": "text",
										"text": " function calls the\n[Run task](https://apify.com/docs/api/v2#/reference/actor-tasks/run-collection/run-task)\nand several other API endpoints to obtain the output."
									}
								]
							},
							"parameters": [
								{
									"id": 318,
									"name": "taskId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allowed formats are "
											},
											{
												"kind": "code",
												"text": "`username/task-name`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`userId/task-name`"
											},
											{
												"kind": "text",
												"text": " or task ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 319,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Input overrides for the actor task. If it is an object, it will be stringified to\n JSON and its content type set to "
											},
											{
												"kind": "code",
												"text": "`application/json; charset=utf-8`"
											},
											{
												"kind": "text",
												"text": ".\n Provided input will be merged with actor task input."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									}
								},
								{
									"id": 320,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 538,
										"name": "CallTaskOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 564,
										"name": "ActorRun",
										"qualifiedName": "ActorRun",
										"package": "apify-client"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 373,
					"name": "createProxyConfiguration",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1313,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1313"
						}
					],
					"signatures": [
						{
							"id": 374,
							"name": "createProxyConfiguration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a proxy configuration and returns a promise resolving to an instance\nof the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "ProxyConfiguration"
									},
									{
										"kind": "text",
										"text": " class that is already initialized.\n\nConfigures connection to a proxy server with the provided options. Proxy servers are used to prevent target websites from blocking\nyour crawlers based on IP address rate limits or blacklists. Setting proxy configuration in your crawlers automatically configures\nthem to use the selected proxies for all connections.\n\nFor more details and code examples, see the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "ProxyConfiguration"
									},
									{
										"kind": "text",
										"text": " class.\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\n\n// Returns initialized proxy configuration class\nconst proxyConfiguration = await Actor.createProxyConfiguration({\n    groups: ['GROUP1', 'GROUP2'] // List of Apify proxy groups\n    countryCode: 'US'\n});\n\nconst crawler = new CheerioCrawler({\n  // ...\n  proxyConfiguration,\n  requestHandler({ proxyInfo }) {\n      const usedProxyUrl = proxyInfo.url; // Getting the proxy URL\n  }\n})\n\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor compatibility with existing Actor Input UI (Input Schema), this function\nreturns "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " when the following object is passed as "
									},
									{
										"kind": "code",
										"text": "`proxyConfigurationOptions`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```\n{ useApifyProxy: false }\n```"
									}
								]
							},
							"parameters": [
								{
									"id": 375,
									"name": "proxyConfigurationOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 778,
												"name": "ProxyConfigurationOptions"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 376,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 377,
															"name": "useApifyProxy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/apify/src/actor.ts",
																	"line": 1314,
																	"character": 65,
																	"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1314"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																377
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/apify/src/actor.ts",
															"line": 1314,
															"character": 63,
															"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1314"
														}
													]
												}
											}
										]
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 795,
												"name": "ProxyConfiguration"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 289,
					"name": "exit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 907,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L907"
						}
					],
					"signatures": [
						{
							"id": 290,
							"name": "exit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 291,
									"name": "messageOrOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 557,
												"name": "ExitOptions"
											}
										]
									}
								},
								{
									"id": 292,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 557,
										"name": "ExitOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 293,
					"name": "fail",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 911,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L911"
						}
					],
					"signatures": [
						{
							"id": 294,
							"name": "fail",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 295,
									"name": "messageOrOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 557,
												"name": "ExitOptions"
											}
										]
									}
								},
								{
									"id": 296,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 557,
										"name": "ExitOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 378,
					"name": "getEnv",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1326,
							"character": 11,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1326"
						}
					],
					"signatures": [
						{
							"id": 379,
							"name": "getEnv",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "ApifyEnv"
									},
									{
										"kind": "text",
										"text": " object which contains information parsed from all the "
									},
									{
										"kind": "code",
										"text": "`APIFY_XXX`"
									},
									{
										"kind": "text",
										"text": " environment variables.\n\nFor the list of the "
									},
									{
										"kind": "code",
										"text": "`APIFY_XXX`"
									},
									{
										"kind": "text",
										"text": " environment variables, see\n[Actor documentation](https://docs.apify.com/actor/run#environment-variables).\nIf some of the variables are not defined or are invalid, the corresponding value in the resulting object will be null."
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 515,
								"name": "ApifyEnv"
							}
						}
					]
				},
				{
					"id": 362,
					"name": "getInput",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1236,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1236"
						}
					],
					"signatures": [
						{
							"id": 363,
							"name": "getInput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets the actor input value from the default "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore"
									},
									{
										"kind": "text",
										"text": " associated with the current actor run.\n\nThis is just a convenient shortcut for "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore.getValue | `keyValueStore.getValue('INPUT')`"
									},
									{
										"kind": "text",
										"text": ".\nFor example, calling the following code:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst input = await Actor.getInput();\n```"
									},
									{
										"kind": "text",
										"text": "\n\nis equivalent to:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst store = await Actor.openKeyValueStore();\nawait store.getValue('INPUT');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nNote that the "
									},
									{
										"kind": "code",
										"text": "`getInput()`"
									},
									{
										"kind": "text",
										"text": " function does not cache the value read from the key-value store.\nIf you need to use the input multiple times in your actor,\nit is far more efficient to read it once and store it locally.\n\nFor more information, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Actor.openKeyValueStore"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore.getValue"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns a promise that resolves to an object, string\n  or ["
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": "](https://nodejs.org/api/buffer.html), depending\n  on the MIME content type of the record, or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "\n  if the record is missing."
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 364,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Dictionary",
												"qualifiedName": "Dictionary",
												"package": "@crawlee/types"
											},
											{
												"type": "reference",
												"name": "Buffer",
												"qualifiedName": "global.Buffer",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 364,
												"name": "T"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 352,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1171,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1171"
						}
					],
					"signatures": [
						{
							"id": 353,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets a value from the default "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore"
									},
									{
										"kind": "text",
										"text": " associated with the current actor run.\n\nThis is just a convenient shortcut for "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore.getValue"
									},
									{
										"kind": "text",
										"text": ".\nFor example, calling the following code:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst value = await Actor.getValue('my-key');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nis equivalent to:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst store = await Actor.openKeyValueStore();\nconst value = await store.getValue('my-key');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nTo store the value to the default key-value store, you can use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Actor.setValue"
									},
									{
										"kind": "text",
										"text": " function.\n\nFor more information, see  "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Actor.openKeyValueStore"
									},
									{
										"kind": "text",
										"text": "\nand  "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore.getValue"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns a promise that resolves to an object, string\n  or ["
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": "](https://nodejs.org/api/buffer.html), depending\n  on the MIME content type of the record, or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "\n  if the record is missing."
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 354,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 355,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unique record key."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 354,
												"name": "T"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 286,
					"name": "init",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 903,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L903"
						}
					],
					"signatures": [
						{
							"id": 287,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 288,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 507,
										"name": "InitOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 383,
					"name": "isAtHome",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1344,
							"character": 11,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1344"
						}
					],
					"signatures": [
						{
							"id": 384,
							"name": "isAtHome",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " when code is running on Apify platform and "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise (for example locally)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 281,
					"name": "main",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 899,
							"character": 11,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L899"
						}
					],
					"signatures": [
						{
							"id": 282,
							"name": "main",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Runs the main user function that performs the job of the actor\nand terminates the process when the user function finishes.\n\n**The "
									},
									{
										"kind": "code",
										"text": "`Actor.main()`"
									},
									{
										"kind": "text",
										"text": " function is optional** and is provided merely for your convenience.\nIt is mainly useful when you're running your code as an actor on the [Apify platform](https://apify.com/actors).\nHowever, if you want to use Apify SDK tools directly inside your existing projects, e.g.\nrunning in an [Express](https://expressjs.com/) server, on\n[Google Cloud functions](https://cloud.google.com/functions)\nor [AWS Lambda](https://aws.amazon.com/lambda/), it's better to avoid\nit since the function terminates the main process when it finishes!\n\nThe "
									},
									{
										"kind": "code",
										"text": "`Actor.main()`"
									},
									{
										"kind": "text",
										"text": " function performs the following actions:\n\n- When running on the Apify platform (i.e. "
									},
									{
										"kind": "code",
										"text": "`APIFY_IS_AT_HOME`"
									},
									{
										"kind": "text",
										"text": " environment variable is set),\n  it sets up a connection to listen for platform events.\n  For example, to get a notification about an imminent migration to another server.\n  See "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Actor.events"
									},
									{
										"kind": "text",
										"text": " for details.\n- It checks that either "
									},
									{
										"kind": "code",
										"text": "`APIFY_TOKEN`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`APIFY_LOCAL_STORAGE_DIR`"
									},
									{
										"kind": "text",
										"text": " environment variable\n  is defined. If not, the functions sets "
									},
									{
										"kind": "code",
										"text": "`APIFY_LOCAL_STORAGE_DIR`"
									},
									{
										"kind": "text",
										"text": " to "
									},
									{
										"kind": "code",
										"text": "`./apify_storage`"
									},
									{
										"kind": "text",
										"text": "\n  inside the current working directory. This is to simplify running code examples.\n- It invokes the user function passed as the "
									},
									{
										"kind": "code",
										"text": "`userFunc`"
									},
									{
										"kind": "text",
										"text": " parameter.\n- If the user function returned a promise, waits for it to resolve.\n- If the user function throws an exception or some other error is encountered,\n  prints error details to console so that they are stored to the log.\n- Exits the Node.js process, with zero exit code on success and non-zero on errors.\n\nThe user function can be synchronous:\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nawait Actor.main(() => {\n  // My synchronous function that returns immediately\n  console.log('Hello world from actor!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf the user function returns a promise, it is considered asynchronous:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nimport { gotScraping } from 'got-scraping';\n\nawait Actor.main(() => {\n  // My asynchronous function that returns a promise\n  return gotScraping('http://www.example.com').then((html) => {\n    console.log(html);\n  });\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nTo simplify your code, you can take advantage of the "
									},
									{
										"kind": "code",
										"text": "`async`"
									},
									{
										"kind": "text",
										"text": "/"
									},
									{
										"kind": "code",
										"text": "`await`"
									},
									{
										"kind": "text",
										"text": " keywords:\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nimport { gotScraping } from 'got-scraping';\n\nawait Actor.main(async () => {\n  // My asynchronous function\n  const html = await gotScraping('http://www.example.com');\n  console.log(html);\n});\n```"
									}
								]
							},
							"typeParameter": [
								{
									"id": 283,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 284,
									"name": "userFunc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "User function to be executed. If it returns a promise,\nthe promise will be awaited. The user function is called with no arguments."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 526,
										"typeArguments": [
											{
												"type": "reference",
												"id": 283,
												"name": "T"
											}
										],
										"name": "UserFunc"
									}
								},
								{
									"id": 285,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 509,
										"name": "MainOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 283,
										"name": "T"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 330,
					"name": "metamorph",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1059,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1059"
						}
					],
					"signatures": [
						{
							"id": 331,
							"name": "metamorph",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Transforms this actor run to an actor run of a given actor. The system stops the current container and starts\nthe new container instead. All the default storages are preserved and the new input is stored under the "
									},
									{
										"kind": "code",
										"text": "`INPUT-METAMORPH-1`"
									},
									{
										"kind": "text",
										"text": " key\nin the same default key-value store."
									}
								]
							},
							"parameters": [
								{
									"id": 332,
									"name": "targetActorId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Either "
											},
											{
												"kind": "code",
												"text": "`username/actor-name`"
											},
											{
												"kind": "text",
												"text": " or actor ID of an actor to which we want to metamorph."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 333,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Input for the actor. If it is an object, it will be stringified to\n JSON and its content type set to "
											},
											{
												"kind": "code",
												"text": "`application/json; charset=utf-8`"
											},
											{
												"kind": "text",
												"text": ".\n Otherwise, the "
											},
											{
												"kind": "code",
												"text": "`options.contentType`"
											},
											{
												"kind": "text",
												"text": " parameter must be provided."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 334,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 553,
										"name": "MetamorphOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 380,
					"name": "newClient",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1337,
							"character": 11,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1337"
						}
					],
					"signatures": [
						{
							"id": 381,
							"name": "newClient",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new instance of the Apify API client. The "
									},
									{
										"kind": "code",
										"text": "`ApifyClient`"
									},
									{
										"kind": "text",
										"text": " class is provided\nby the [apify-client](https://www.npmjs.com/package/apify-client)\nNPM package, and it is automatically configured using the "
									},
									{
										"kind": "code",
										"text": "`APIFY_API_BASE_URL`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`APIFY_TOKEN`"
									},
									{
										"kind": "text",
										"text": "\nenvironment variables. You can override the token via the available options. That's useful\nif you want to use the client as a different Apify user than the SDK internals are using."
									}
								]
							},
							"parameters": [
								{
									"id": 382,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 269,
										"name": "ApifyClientOptions",
										"qualifiedName": "ApifyClientOptions",
										"package": "apify-client"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"id": 205,
								"name": "ApifyClient",
								"qualifiedName": "ApifyClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 304,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 919,
							"character": 11,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L919"
						}
					],
					"signatures": [
						{
							"id": 305,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 306,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventTypeName",
										"qualifiedName": "EventTypeName",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 307,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 308,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/apify/src/actor.ts",
													"line": 919,
													"character": 48,
													"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L919"
												}
											],
											"signatures": [
												{
													"id": 309,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 310,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 297,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 915,
							"character": 11,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L915"
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 299,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "EventTypeName",
										"qualifiedName": "EventTypeName",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 300,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 301,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/apify/src/actor.ts",
													"line": 915,
													"character": 46,
													"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L915"
												}
											],
											"signatures": [
												{
													"id": 302,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 303,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 347,
					"name": "openDataset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1138,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1138"
						}
					],
					"signatures": [
						{
							"id": 348,
							"name": "openDataset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Opens a dataset and returns a promise resolving to an instance of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " class.\n\nDatasets are used to store structured data where each object stored has the same attributes,\nsuch as online store products or real estate offers.\nThe actual data is stored either on the local filesystem or in the cloud.\n\nFor more details and code examples, see the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"typeParameter": [
								{
									"id": 349,
									"name": "Data",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									}
								}
							],
							"parameters": [
								{
									"id": 350,
									"name": "datasetIdOrName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "ID or name of the dataset to be opened. If "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": ",\n  the function returns the default dataset associated with the actor run."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 351,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 562,
										"name": "OpenStorageOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1,
										"typeArguments": [
											{
												"type": "reference",
												"id": 349,
												"name": "Data"
											}
										],
										"name": "Dataset",
										"qualifiedName": "Dataset",
										"package": "@crawlee/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 365,
					"name": "openKeyValueStore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1254,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1254"
						}
					],
					"signatures": [
						{
							"id": 366,
							"name": "openKeyValueStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Opens a key-value store and returns a promise resolving to an instance of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore"
									},
									{
										"kind": "text",
										"text": " class.\n\nKey-value stores are used to store records or files, along with their MIME content type.\nThe records are stored and retrieved using a unique key.\nThe actual data is stored either on a local filesystem or in the Apify cloud.\n\nFor more details and code examples, see the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"parameters": [
								{
									"id": 367,
									"name": "storeIdOrName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "ID or name of the key-value store to be opened. If "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": ",\n  the function returns the default key-value store associated with the actor run."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 368,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 562,
										"name": "OpenStorageOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 899,
										"name": "KeyValueStore"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 369,
					"name": "openRequestQueue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1274,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1274"
						}
					],
					"signatures": [
						{
							"id": 370,
							"name": "openRequestQueue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Opens a request queue and returns a promise resolving to an instance\nof the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue"
									},
									{
										"kind": "text",
										"text": " class.\n\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue"
									},
									{
										"kind": "text",
										"text": " represents a queue of URLs to crawl, which is stored either on local filesystem or in the cloud.\nThe queue is used for deep crawling of websites, where you start with several URLs and then\nrecursively follow links to other pages. The data structure supports both breadth-first\nand depth-first crawling orders.\n\nFor more details and code examples, see the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"parameters": [
								{
									"id": 371,
									"name": "queueIdOrName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "ID or name of the request queue to be opened. If "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": ",\n  the function returns the default request queue associated with the actor run."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 372,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 562,
										"name": "OpenStorageOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 97,
										"name": "RequestQueue",
										"qualifiedName": "RequestQueue",
										"package": "@crawlee/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 343,
					"name": "pushData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1120,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1120"
						}
					],
					"signatures": [
						{
							"id": 344,
							"name": "pushData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stores an object or an array of objects to the default "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " of the current actor run.\n\nThis is just a convenient shortcut for "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset.pushData"
									},
									{
										"kind": "text",
										"text": ".\nFor example, calling the following code:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nawait Actor.pushData({ myValue: 123 });\n```"
									},
									{
										"kind": "text",
										"text": "\n\nis equivalent to:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst dataset = await Actor.openDataset();\nawait dataset.pushData({ myValue: 123 });\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor more information, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Actor.openDataset"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset.pushData"
									},
									{
										"kind": "text",
										"text": "\n\n**IMPORTANT**: Make sure to use the "
									},
									{
										"kind": "code",
										"text": "`await`"
									},
									{
										"kind": "text",
										"text": " keyword when calling "
									},
									{
										"kind": "code",
										"text": "`pushData()`"
									},
									{
										"kind": "text",
										"text": ",\notherwise the actor process might finish before the data are stored!"
									}
								]
							},
							"typeParameter": [
								{
									"id": 345,
									"name": "Data",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									}
								}
							],
							"parameters": [
								{
									"id": 346,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object or array of objects containing data to be stored in the default dataset.\nThe objects must be serializable to JSON and the JSON representation of each object must be smaller than 9MB."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 345,
												"name": "Data"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 345,
													"name": "Data"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 335,
					"name": "reboot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1067,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1067"
						}
					],
					"signatures": [
						{
							"id": 336,
							"name": "reboot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Internally reboots this actor run. The system stops the current container and starts\na new container with the same run id."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 340,
					"name": "setStatusMessage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1093,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1093"
						}
					],
					"signatures": [
						{
							"id": 341,
							"name": "setStatusMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the status message for the current actor run."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The return value is the Run object.\nFor more information, see the [Actor Runs](https://docs.apify.com/api/v2#/reference/actor-runs/) API endpoints."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 342,
									"name": "statusMessage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 564,
										"name": "ActorRun",
										"qualifiedName": "ActorRun",
										"package": "apify-client"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 356,
					"name": "setValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1205,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1205"
						}
					],
					"signatures": [
						{
							"id": 357,
							"name": "setValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stores or deletes a value in the default "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore"
									},
									{
										"kind": "text",
										"text": " associated with the current actor run.\n\nThis is just a convenient shortcut for  "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore.setValue"
									},
									{
										"kind": "text",
										"text": ".\nFor example, calling the following code:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nawait Actor.setValue('OUTPUT', { foo: \"bar\" });\n```"
									},
									{
										"kind": "text",
										"text": "\n\nis equivalent to:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst store = await Actor.openKeyValueStore();\nawait store.setValue('OUTPUT', { foo: \"bar\" });\n```"
									},
									{
										"kind": "text",
										"text": "\n\nTo get a value from the default key-value store, you can use the  "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Actor.getValue"
									},
									{
										"kind": "text",
										"text": " function.\n\nFor more information, see  "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Actor.openKeyValueStore"
									},
									{
										"kind": "text",
										"text": "\nand  "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore.getValue"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"typeParameter": [
								{
									"id": 358,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 359,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unique record key."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 360,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Record data, which can be one of the following values:\n   - If "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": ", the record in the key-value store is deleted.\n   - If no "
											},
											{
												"kind": "code",
												"text": "`options.contentType`"
											},
											{
												"kind": "text",
												"text": " is specified, "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " can be any JavaScript object, and it will be stringified to JSON.\n   - If "
											},
											{
												"kind": "code",
												"text": "`options.contentType`"
											},
											{
												"kind": "text",
												"text": " is set, "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " is taken as is, and it must be a "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": " or ["
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": "](https://nodejs.org/api/buffer.html).\n  For any other value an error will be thrown."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 358,
												"name": "T"
											}
										]
									}
								},
								{
									"id": 361,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 201,
										"name": "RecordOptions",
										"qualifiedName": "RecordOptions",
										"package": "@crawlee/core"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 321,
					"name": "start",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1024,
							"character": 17,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1024"
						}
					],
					"signatures": [
						{
							"id": 322,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Runs an actor on the Apify platform using the current user account (determined by the "
									},
									{
										"kind": "code",
										"text": "`APIFY_TOKEN`"
									},
									{
										"kind": "text",
										"text": " environment variable),\nunlike "
									},
									{
										"kind": "code",
										"text": "`Actor.call`"
									},
									{
										"kind": "text",
										"text": ", this method just starts the run without waiting for finish.\n\nThe result of the function is an "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "ActorRun"
									},
									{
										"kind": "text",
										"text": " object that contains details about the actor run.\n\nFor more information about actors, read the\n[documentation](https://docs.apify.com/actor).\n\n**Example usage:**\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst run = await Actor.start('apify/hello-world', { myInput: 123 });\n```"
									}
								]
							},
							"parameters": [
								{
									"id": 323,
									"name": "actorId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allowed formats are "
											},
											{
												"kind": "code",
												"text": "`username/actor-name`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`userId/actor-name`"
											},
											{
												"kind": "text",
												"text": " or actor ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 324,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Input for the actor. If it is an object, it will be stringified to\n JSON and its content type set to "
											},
											{
												"kind": "code",
												"text": "`application/json; charset=utf-8`"
											},
											{
												"kind": "text",
												"text": ".\n Otherwise the "
											},
											{
												"kind": "code",
												"text": "`options.contentType`"
											},
											{
												"kind": "text",
												"text": " parameter must be provided."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									}
								},
								{
									"id": 325,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 530,
										"name": "CallOptions"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 564,
										"name": "ActorRun",
										"qualifiedName": "ActorRun",
										"package": "apify-client"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						391
					]
				},
				{
					"title": "Accessors",
					"children": [
						385,
						387
					]
				},
				{
					"title": "Methods",
					"children": [
						326,
						337,
						311,
						316,
						373,
						289,
						293,
						378,
						362,
						352,
						286,
						383,
						281,
						330,
						380,
						304,
						297,
						347,
						365,
						369,
						343,
						335,
						340,
						356,
						321
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 46,
					"character": 13,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L46"
				}
			],
			"typeParameters": [
				{
					"id": 506,
					"name": "Data",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "Dictionary",
						"qualifiedName": "Dictionary",
						"package": "@crawlee/types"
					},
					"default": {
						"type": "reference",
						"name": "Dictionary",
						"qualifiedName": "Dictionary",
						"package": "@crawlee/types"
					}
				}
			]
		},
		{
			"id": 205,
			"name": "ApifyClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExternal": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "ApifyClient is the official library to access [Apify API](https://docs.apify.com/api/v2) from your\nJavaScript applications. It runs both in Node.js and browser."
					}
				]
			},
			"children": [
				{
					"id": 206,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 207,
							"name": "new ApifyClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 208,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 269,
										"name": "ApifyClientOptions",
										"qualifiedName": "ApifyClientOptions",
										"package": "apify-client"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 205,
								"name": "ApifyClient",
								"qualifiedName": "ApifyClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 209,
					"name": "baseUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 213,
					"name": "httpClient",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "HttpClient",
						"qualifiedName": "HttpClient",
						"package": "apify-client"
					}
				},
				{
					"id": 212,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Log",
						"qualifiedName": "Log",
						"package": "@apify/log"
					}
				},
				{
					"id": 211,
					"name": "stats",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Statistics",
						"qualifiedName": "Statistics",
						"package": "apify-client"
					}
				},
				{
					"id": 210,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 217,
					"name": "actor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 218,
							"name": "actor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/actors/actor-object"
									}
								]
							},
							"parameters": [
								{
									"id": 219,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ActorClient",
								"qualifiedName": "ActorClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 215,
					"name": "actors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "actors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/actors/actor-collection"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "ActorCollectionClient",
								"qualifiedName": "ActorCollectionClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 220,
					"name": "build",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 221,
							"name": "build",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/actor-builds/build-object"
									}
								]
							},
							"parameters": [
								{
									"id": 222,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BuildClient",
								"qualifiedName": "BuildClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 225,
					"name": "dataset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 226,
							"name": "dataset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/datasets/dataset"
									}
								]
							},
							"typeParameter": [
								{
									"id": 227,
									"name": "Data",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"qualifiedName": "Record",
										"package": "typescript"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"qualifiedName": "Record",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 228,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 227,
										"name": "Data",
										"qualifiedName": "Data",
										"package": "apify-client"
									}
								],
								"name": "DatasetClient",
								"qualifiedName": "DatasetClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 223,
					"name": "datasets",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 224,
							"name": "datasets",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/datasets/dataset-collection"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "DatasetCollectionClient",
								"qualifiedName": "DatasetCollectionClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 231,
					"name": "keyValueStore",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "keyValueStore",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/key-value-stores/store-object"
									}
								]
							},
							"parameters": [
								{
									"id": 233,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "KeyValueStoreClient",
								"qualifiedName": "KeyValueStoreClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 229,
					"name": "keyValueStores",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 60,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 230,
							"name": "keyValueStores",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/key-value-stores/store-collection"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "KeyValueStoreCollectionClient",
								"qualifiedName": "KeyValueStoreCollectionClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 234,
					"name": "log",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 235,
							"name": "log",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/logs"
									}
								]
							},
							"parameters": [
								{
									"id": 236,
									"name": "buildOrRunId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "LogClient",
								"qualifiedName": "LogClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 239,
					"name": "requestQueue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "requestQueue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/request-queues/queue"
									}
								]
							},
							"parameters": [
								{
									"id": 241,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 242,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "RequestQueueUserOptions",
										"qualifiedName": "RequestQueueUserOptions",
										"package": "apify-client"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RequestQueueClient",
								"qualifiedName": "RequestQueueClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 237,
					"name": "requestQueues",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 238,
							"name": "requestQueues",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/request-queues/queue-collection"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "RequestQueueCollectionClient",
								"qualifiedName": "RequestQueueCollectionClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 243,
					"name": "run",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 80,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 244,
							"name": "run",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/actor-runs/run-object-and-its-storages"
									}
								]
							},
							"parameters": [
								{
									"id": 245,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RunClient",
								"qualifiedName": "RunClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 253,
					"name": "schedule",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 96,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 254,
							"name": "schedule",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/schedules/schedule-object"
									}
								]
							},
							"parameters": [
								{
									"id": 255,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ScheduleClient",
								"qualifiedName": "ScheduleClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 251,
					"name": "schedules",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 92,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 252,
							"name": "schedules",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/schedules/schedules-collection"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "ScheduleCollectionClient",
								"qualifiedName": "ScheduleCollectionClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 248,
					"name": "task",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 88,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 249,
							"name": "task",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/actor-tasks/task-object"
									}
								]
							},
							"parameters": [
								{
									"id": 250,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "TaskClient",
								"qualifiedName": "TaskClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 246,
					"name": "tasks",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 84,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 247,
							"name": "tasks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/actor-tasks/task-collection"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "TaskCollectionClient",
								"qualifiedName": "TaskCollectionClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 256,
					"name": "user",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 100,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 257,
							"name": "user",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/users"
									}
								]
							},
							"parameters": [
								{
									"id": 258,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "UserClient",
								"qualifiedName": "UserClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 261,
					"name": "webhook",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 108,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 262,
							"name": "webhook",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/webhooks/webhook-object"
									}
								]
							},
							"parameters": [
								{
									"id": 263,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WebhookClient",
								"qualifiedName": "WebhookClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 266,
					"name": "webhookDispatch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 116,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 267,
							"name": "webhookDispatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/webhook-dispatches/webhook-dispatch-object"
									}
								]
							},
							"parameters": [
								{
									"id": 268,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "WebhookDispatchClient",
								"qualifiedName": "WebhookDispatchClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 264,
					"name": "webhookDispatches",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 112,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 265,
							"name": "webhookDispatches",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/webhook-dispatches"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "WebhookDispatchCollectionClient",
								"qualifiedName": "WebhookDispatchCollectionClient",
								"package": "apify-client"
							}
						}
					]
				},
				{
					"id": 259,
					"name": "webhooks",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 104,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 260,
							"name": "webhooks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "https://docs.apify.com/api/v2#/reference/webhooks/webhook-collection"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "WebhookCollectionClient",
								"qualifiedName": "WebhookCollectionClient",
								"package": "apify-client"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						206
					]
				},
				{
					"title": "Properties",
					"children": [
						209,
						213,
						212,
						211,
						210
					]
				},
				{
					"title": "Methods",
					"children": [
						217,
						215,
						220,
						225,
						223,
						231,
						229,
						234,
						239,
						237,
						243,
						253,
						251,
						248,
						246,
						256,
						261,
						266,
						264,
						259
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
					"line": 29,
					"character": 21
				}
			]
		},
		{
			"id": 643,
			"name": "Configuration",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`Configuration`"
					},
					{
						"kind": "text",
						"text": " is a value object holding the SDK configuration. We can use it in two ways:\n\n1. When using "
					},
					{
						"kind": "code",
						"text": "`Actor`"
					},
					{
						"kind": "text",
						"text": " class, we can get the instance configuration via "
					},
					{
						"kind": "code",
						"text": "`sdk.config`"
					},
					{
						"kind": "text",
						"text": "\n\n   "
					},
					{
						"kind": "code",
						"text": "```javascript\n   import { Actor } from 'apify';\n   import { BasicCrawler } from 'crawlee';\n\n   const sdk = new Actor({ token: '123' });\n   console.log(sdk.config.get('token')); // '123'\n\n   const crawler = new BasicCrawler({\n       // ... crawler options\n   }, sdk.config);\n   ```"
					},
					{
						"kind": "text",
						"text": "\n\n2. To get the global configuration (singleton instance). It will respect the environment variables.\n\n   "
					},
					{
						"kind": "code",
						"text": "```javascript\n   import { BasicCrawler, Configuration } from 'crawlee';\n\n   // Get the global configuration\n   const config = Configuration.getGlobalConfig();\n   // Set the 'persistStateIntervalMillis' option\n   // of global configuration to 30 seconds\n   config.set('persistStateIntervalMillis', 30_000);\n\n   // No need to pass the configuration to the crawler,\n   // as it's using the global configuration by default\n   const crawler = new BasicCrawler();\n   ```"
					},
					{
						"kind": "text",
						"text": "\n\n## Supported Configuration Options\n\nKey | Environment Variable | Default Value\n---|---|---\n"
					},
					{
						"kind": "code",
						"text": "`memoryMbytes`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_MEMORY_MBYTES`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`headless`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_HEADLESS`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`persistStateIntervalMillis`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_PERSIST_STATE_INTERVAL_MILLIS`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`60e3`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`token`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_TOKEN`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`isAtHome`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_IS_AT_HOME`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`defaultDatasetId`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_DEFAULT_DATASET_ID`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`'default'`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`defaultKeyValueStoreId`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_DEFAULT_KEY_VALUE_STORE_ID`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`'default'`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`defaultRequestQueueId`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_DEFAULT_REQUEST_QUEUE_ID`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`'default'`"
					},
					{
						"kind": "text",
						"text": "\n\n## Advanced Configuration Options\n\nKey | Environment Variable | Default Value\n---|---|---\n"
					},
					{
						"kind": "code",
						"text": "`actorEventsWsUrl`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_ACTOR_EVENTS_WS_URL`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`actorId`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_ACTOR_ID`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`actorRunId`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_ACTOR_RUN_ID`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`actorTaskId`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_ACTOR_TASK_ID`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`apiBaseUrl`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_API_BASE_URL`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`'https://api.apify.com'`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`containerPort`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_CONTAINER_PORT`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`4321`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`containerUrl`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_CONTAINER_URL`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`'http://localhost:4321'`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`inputKey`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_INPUT_KEY`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`'INPUT'`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`metamorphAfterSleepMillis`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_METAMORPH_AFTER_SLEEP_MILLIS`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`300e3`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`proxyHostname`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_PROXY_HOSTNAME`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`'proxy.apify.com'`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`proxyPassword`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_PROXY_PASSWORD`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`proxyPort`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_PROXY_PORT`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`8000`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`proxyStatusUrl`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_PROXY_STATUS_URL`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`'http://proxy.apify.com'`"
					},
					{
						"kind": "text",
						"text": "\n"
					},
					{
						"kind": "code",
						"text": "`userId`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_USER_ID`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`xvfb`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_XVFB`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`chromeExecutablePath`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_CHROME_EXECUTABLE_PATH`"
					},
					{
						"kind": "text",
						"text": " | -\n"
					},
					{
						"kind": "code",
						"text": "`defaultBrowserPath`"
					},
					{
						"kind": "text",
						"text": " | "
					},
					{
						"kind": "code",
						"text": "`APIFY_DEFAULT_BROWSER_PATH`"
					},
					{
						"kind": "text",
						"text": " | -"
					}
				]
			},
			"children": [
				{
					"id": 701,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 213,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 702,
							"name": "new Configuration",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates new "
									},
									{
										"kind": "code",
										"text": "`Configuration`"
									},
									{
										"kind": "text",
										"text": " instance with provided options. Env vars will have precedence over those."
									}
								]
							},
							"parameters": [
								{
									"id": 703,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "ConfigurationOptions",
										"qualifiedName": "ConfigurationOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 643,
								"name": "Configuration"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreConfiguration.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfiguration.constructor"
					}
				},
				{
					"id": 644,
					"name": "globalConfig",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@inheritDoc",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 93,
							"character": 20,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L93"
						}
					],
					"type": {
						"type": "reference",
						"id": 643,
						"name": "Configuration"
					},
					"overwrites": {
						"type": "reference",
						"name": "CoreConfiguration.globalConfig"
					}
				},
				{
					"id": 704,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 157,
							"character": 13,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L157"
						}
					],
					"signatures": [
						{
							"id": 705,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@inheritDoc",
										"content": []
									}
								]
							},
							"typeParameter": [
								{
									"id": 706,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 587,
											"name": "ConfigurationOptions"
										}
									}
								},
								{
									"id": 728,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"name": "StorageClient",
												"qualifiedName": "StorageClient",
												"package": "@crawlee/types"
											},
											{
												"type": "reference",
												"name": "EventManager",
												"qualifiedName": "EventManager",
												"package": "@crawlee/core"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Dictionary",
												"qualifiedName": "Dictionary",
												"package": "@crawlee/types"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 707,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
															"line": 556,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 708,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Returns a string representation of an object."
																	}
																]
															},
															"parameters": [
																{
																	"id": 709,
																	"name": "radix",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Specifies a radix for converting numeric values to strings. This value is only used for numbers."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 710,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
															"line": 562,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 711,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Returns a string representing a number in fixed-point notation."
																	}
																]
															},
															"parameters": [
																{
																	"id": 712,
																	"name": "fractionDigits",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 713,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
															"line": 568,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 714,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Returns a string containing a number represented in exponential notation."
																	}
																]
															},
															"parameters": [
																{
																	"id": 715,
																	"name": "fractionDigits",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 716,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
															"line": 574,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 717,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits."
																	}
																]
															},
															"parameters": [
																{
																	"id": 718,
																	"name": "precision",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Number of significant digits. Must be in the range 1 - 21, inclusive."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 719,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
															"line": 577,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 720,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Returns the primitive value of the specified object."
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 721,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
															"line": 4478,
															"character": 4
														},
														{
															"fileName": "website/node_modules/typescript/lib/lib.es2020.number.d.ts",
															"line": 29,
															"character": 4
														}
													],
													"signatures": [
														{
															"id": 722,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Converts a number to a string by using the current or specified locale."
																	}
																]
															},
															"parameters": [
																{
																	"id": 723,
																	"name": "locales",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used."
																			}
																		]
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		]
																	}
																},
																{
																	"id": 724,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "An object that contains one or more properties that specify comparison options."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"name": "NumberFormatOptions",
																		"qualifiedName": "Intl.NumberFormatOptions",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 725,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Converts a number to a string by using the current or specified locale."
																	}
																]
															},
															"parameters": [
																{
																	"id": 726,
																	"name": "locales",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"name": "LocalesArgument",
																		"qualifiedName": "Intl.LocalesArgument",
																		"package": "typescript"
																	}
																},
																{
																	"id": 727,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "An object that contains one or more properties that specify comparison options."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"name": "NumberFormatOptions",
																		"qualifiedName": "Intl.NumberFormatOptions",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 729,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 706,
										"name": "T"
									}
								},
								{
									"id": 730,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 728,
										"name": "U"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 728,
								"name": "U"
							},
							"overwrites": {
								"type": "reference",
								"name": "CoreConfiguration.get"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "CoreConfiguration.get"
					}
				},
				{
					"id": 764,
					"name": "getEventManager",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 236,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 765,
							"name": "getEventManager",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"name": "EventManager",
								"qualifiedName": "EventManager",
								"package": "@crawlee/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreConfiguration.getEventManager"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfiguration.getEventManager"
					}
				},
				{
					"id": 731,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 164,
							"character": 13,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L164"
						}
					],
					"signatures": [
						{
							"id": 732,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@inheritDoc",
										"content": []
									}
								]
							},
							"parameters": [
								{
									"id": 733,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 587,
											"name": "ConfigurationOptions"
										}
									}
								},
								{
									"id": 734,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "CoreConfiguration.set"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "CoreConfiguration.set"
					}
				},
				{
					"id": 772,
					"name": "useEventManager",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 243,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 773,
							"name": "useEventManager",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 774,
									"name": "events",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "EventManager",
										"qualifiedName": "EventManager",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreConfiguration.useEventManager"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfiguration.useEventManager"
					}
				},
				{
					"id": 769,
					"name": "useStorageClient",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 242,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 770,
							"name": "useStorageClient",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 771,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "StorageClient",
										"qualifiedName": "StorageClient",
										"package": "@crawlee/types"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreConfiguration.useStorageClient"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfiguration.useStorageClient"
					}
				},
				{
					"id": 699,
					"name": "getEventManager",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 255,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 700,
							"name": "getEventManager",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets default "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "EventManager"
									},
									{
										"kind": "text",
										"text": " instance."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "EventManager",
								"qualifiedName": "EventManager",
								"package": "@crawlee/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreConfiguration.getEventManager"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfiguration.getEventManager"
					}
				},
				{
					"id": 692,
					"name": "getGlobalConfig",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 171,
							"character": 20,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L171"
						}
					],
					"signatures": [
						{
							"id": 693,
							"name": "getGlobalConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@inheritDoc",
										"content": []
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 643,
								"name": "Configuration"
							},
							"overwrites": {
								"type": "reference",
								"name": "CoreConfiguration.getGlobalConfig"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "CoreConfiguration.getGlobalConfig"
					}
				},
				{
					"id": 697,
					"name": "getStorageClient",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 251,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 698,
							"name": "getStorageClient",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets default "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "StorageClient"
									},
									{
										"kind": "text",
										"text": " instance."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "StorageClient",
								"qualifiedName": "StorageClient",
								"package": "@crawlee/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreConfiguration.getStorageClient"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfiguration.getStorageClient"
					}
				},
				{
					"id": 694,
					"name": "resetGlobalState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 184,
							"character": 20,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L184"
						}
					],
					"signatures": [
						{
							"id": 695,
							"name": "resetGlobalState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resets global configuration instance. The default instance holds configuration based on env vars,\nif we want to change them, we need to first reset the global state. Used mainly for testing purposes."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "CoreConfiguration.resetGlobalState"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "CoreConfiguration.resetGlobalState"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						701
					]
				},
				{
					"title": "Properties",
					"children": [
						644
					]
				},
				{
					"title": "Methods",
					"children": [
						704,
						764,
						731,
						772,
						769,
						699,
						692,
						697,
						694
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/configuration.ts",
					"line": 91,
					"character": 13,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L91"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Configuration",
					"qualifiedName": "Configuration",
					"package": "@crawlee/core"
				}
			]
		},
		{
			"id": 1,
			"name": "Dataset",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExternal": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`Dataset`"
					},
					{
						"kind": "text",
						"text": " class represents a store for structured data where each object stored has the same attributes,\nsuch as online store products or real estate offers. You can imagine it as a table,\nwhere each object is a row and its attributes are columns.\nDataset is an append-only storage - you can only add new records to it but you cannot modify or remove existing records.\nTypically it is used to store crawling results.\n\nDo not instantiate this class directly, use the\n"
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "Dataset.open"
					},
					{
						"kind": "text",
						"text": " function instead.\n\n"
					},
					{
						"kind": "code",
						"text": "`Dataset`"
					},
					{
						"kind": "text",
						"text": " stores its data either on local disk or in the Apify cloud,\ndepending on whether the "
					},
					{
						"kind": "code",
						"text": "`APIFY_LOCAL_STORAGE_DIR`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`APIFY_TOKEN`"
					},
					{
						"kind": "text",
						"text": " environment variables are set.\n\nIf the "
					},
					{
						"kind": "code",
						"text": "`APIFY_LOCAL_STORAGE_DIR`"
					},
					{
						"kind": "text",
						"text": " environment variable is set, the data is stored in\nthe local directory in the following files:\n"
					},
					{
						"kind": "code",
						"text": "```\n{APIFY_LOCAL_STORAGE_DIR}/datasets/{DATASET_ID}/{INDEX}.json\n```"
					},
					{
						"kind": "text",
						"text": "\nNote that "
					},
					{
						"kind": "code",
						"text": "`{DATASET_ID}`"
					},
					{
						"kind": "text",
						"text": " is the name or ID of the dataset. The default dataset has ID: "
					},
					{
						"kind": "code",
						"text": "`default`"
					},
					{
						"kind": "text",
						"text": ",\nunless you override it by setting the "
					},
					{
						"kind": "code",
						"text": "`APIFY_DEFAULT_DATASET_ID`"
					},
					{
						"kind": "text",
						"text": " environment variable.\nEach dataset item is stored as a separate JSON file, where "
					},
					{
						"kind": "code",
						"text": "`{INDEX}`"
					},
					{
						"kind": "text",
						"text": " is a zero-based index of the item in the dataset.\n\nIf the "
					},
					{
						"kind": "code",
						"text": "`APIFY_TOKEN`"
					},
					{
						"kind": "text",
						"text": " environment variable is set but "
					},
					{
						"kind": "code",
						"text": "`APIFY_LOCAL_STORAGE_DIR`"
					},
					{
						"kind": "text",
						"text": " not, the data is stored in the\n[Apify Dataset](https://docs.apify.com/storage/dataset)\ncloud storage. Note that you can force usage of the cloud storage also by passing the "
					},
					{
						"kind": "code",
						"text": "`forceCloud`"
					},
					{
						"kind": "text",
						"text": "\noption to "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "Dataset.open"
					},
					{
						"kind": "text",
						"text": " function,\neven if the "
					},
					{
						"kind": "code",
						"text": "`APIFY_LOCAL_STORAGE_DIR`"
					},
					{
						"kind": "text",
						"text": " variable is set.\n\n**Example usage:**\n\n"
					},
					{
						"kind": "code",
						"text": "```javascript\n// Write a single row to the default dataset\nawait Dataset.pushData({ col1: 123, col2: 'val2' });\n\n// Open a named dataset\nconst dataset = await Dataset.open('some-name');\n\n// Write a single row\nawait dataset.pushData({ foo: 'bar' });\n\n// Write multiple rows\nawait dataset.pushData([\n  { foo: 'bar2', col2: 'val2' },\n  { col3: 123 },\n]);\n```"
					}
				]
			},
			"children": [
				{
					"id": 19,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 137,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Data",
								"qualifiedName": "Dataset.Data",
								"package": "@crawlee/core"
							}
						],
						"name": "DatasetClient",
						"qualifiedName": "DatasetClient",
						"package": "@crawlee/types"
					}
				},
				{
					"id": 16,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 134,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "Configuration",
						"qualifiedName": "Configuration",
						"package": "@crawlee/core"
					}
				},
				{
					"id": 17,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 135,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20,
					"name": "log",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 138,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Log",
						"qualifiedName": "Log",
						"package": "@apify/log"
					}
				},
				{
					"id": 18,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 136,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 45,
					"name": "drop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 246,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 46,
							"name": "drop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the dataset either from the Apify cloud storage or from the local directory,\ndepending on the mode of operation."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 29,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 215,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 30,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Iterates over dataset items, yielding each in turn to an "
									},
									{
										"kind": "code",
										"text": "`iteratee`"
									},
									{
										"kind": "text",
										"text": " function.\nEach invocation of "
									},
									{
										"kind": "code",
										"text": "`iteratee`"
									},
									{
										"kind": "text",
										"text": " is called with two arguments: "
									},
									{
										"kind": "code",
										"text": "`(item, index)`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf the "
									},
									{
										"kind": "code",
										"text": "`iteratee`"
									},
									{
										"kind": "text",
										"text": " function returns a Promise then it is awaited before the next call.\nIf it throws an error, the iteration is aborted and the "
									},
									{
										"kind": "code",
										"text": "`forEach`"
									},
									{
										"kind": "text",
										"text": " function throws the error.\n\n**Example usage**\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst dataset = await Dataset.open('my-results');\nawait dataset.forEach(async (item, index) => {\n  console.log(`Item at ${index}: ${JSON.stringify(item)}`);\n});\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "text",
												"text": "0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 31,
									"name": "iteratee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that is called for every item in the dataset."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 67,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data",
												"qualifiedName": "Dataset.Data",
												"package": "@crawlee/core"
											}
										],
										"name": "DatasetConsumer",
										"qualifiedName": "DatasetConsumer",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 32,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "All "
											},
											{
												"kind": "code",
												"text": "`forEach()`"
											},
											{
												"kind": "text",
												"text": " parameters."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 57,
										"name": "DatasetIteratorOptions",
										"qualifiedName": "DatasetIteratorOptions",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 33,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specifies the initial index number passed to the "
											},
											{
												"kind": "code",
												"text": "`iteratee`"
											},
											{
												"kind": "text",
												"text": " function."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "getData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 171,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "getData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "DatasetContent"
									},
									{
										"kind": "text",
										"text": " object holding the items in the dataset based on the provided parameters."
									}
								]
							},
							"parameters": [
								{
									"id": 26,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 48,
										"name": "DatasetDataOptions",
										"qualifiedName": "DatasetDataOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data",
												"qualifiedName": "Dataset.Data",
												"package": "@crawlee/core"
											}
										],
										"name": "PaginatedList",
										"qualifiedName": "PaginatedList",
										"package": "@crawlee/types"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 27,
					"name": "getInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 194,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "getInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an object containing general information about the dataset.\n\nThe function returns the same object as the Apify API Client's\n[getDataset](https://docs.apify.com/api/apify-client-js/latest#ApifyClient-datasets-getDataset)\nfunction, which in turn calls the\n[Get dataset](https://apify.com/docs/api/v2#/reference/datasets/dataset/get-dataset)\nAPI endpoint.\n\n**Example:**\n"
									},
									{
										"kind": "code",
										"text": "```\n{\n  id: \"WkzbQMuFYuamGv3YF\",\n  name: \"my-dataset\",\n  userId: \"wRsJZtadYvn4mBZmm\",\n  createdAt: new Date(\"2015-12-12T07:34:14.202Z\"),\n  modifiedAt: new Date(\"2015-12-13T08:36:13.202Z\"),\n  accessedAt: new Date(\"2015-12-14T08:36:13.202Z\"),\n  itemCount: 14,\n}\n```"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "DatasetInfo",
												"qualifiedName": "DatasetInfo",
												"package": "@crawlee/types"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 34,
					"name": "map",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 225,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 35,
							"name": "map",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Produces a new array of values by mapping each value in list through a transformation function "
									},
									{
										"kind": "code",
										"text": "`iteratee()`"
									},
									{
										"kind": "text",
										"text": ".\nEach invocation of "
									},
									{
										"kind": "code",
										"text": "`iteratee()`"
									},
									{
										"kind": "text",
										"text": " is called with two arguments: "
									},
									{
										"kind": "code",
										"text": "`(element, index)`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf "
									},
									{
										"kind": "code",
										"text": "`iteratee`"
									},
									{
										"kind": "text",
										"text": " returns a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " then it's awaited before a next call."
									}
								]
							},
							"typeParameter": [
								{
									"id": 36,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 37,
									"name": "iteratee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 72,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Data",
												"qualifiedName": "Dataset.Data",
												"package": "@crawlee/core"
											},
											{
												"type": "reference",
												"id": 36,
												"name": "R",
												"qualifiedName": "R",
												"package": "@crawlee/core"
											}
										],
										"name": "DatasetMapper",
										"qualifiedName": "DatasetMapper",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 38,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "All "
											},
											{
												"kind": "code",
												"text": "`map()`"
											},
											{
												"kind": "text",
												"text": " parameters."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 57,
										"name": "DatasetIteratorOptions",
										"qualifiedName": "DatasetIteratorOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 36,
											"name": "R",
											"qualifiedName": "R",
											"package": "@crawlee/core"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 21,
					"name": "pushData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 167,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 22,
							"name": "pushData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stores an object or an array of objects to the dataset.\nThe function returns a promise that resolves when the operation finishes.\nIt has no result, but throws on invalid args or other errors.\n\n**IMPORTANT**: Make sure to use the "
									},
									{
										"kind": "code",
										"text": "`await`"
									},
									{
										"kind": "text",
										"text": " keyword when calling "
									},
									{
										"kind": "code",
										"text": "`pushData()`"
									},
									{
										"kind": "text",
										"text": ",\notherwise the crawler process might finish before the data is stored!\n\nThe size of the data is limited by the receiving API and therefore "
									},
									{
										"kind": "code",
										"text": "`pushData()`"
									},
									{
										"kind": "text",
										"text": " will only\nallow objects whose JSON representation is smaller than 9MB. When an array is passed,\nnone of the included objects\nmay be larger than 9MB, but the array itself may be of any size.\n\nThe function internally\nchunks the array into separate items and pushes them sequentially.\nThe chunking process is stable (keeps order of data), but it does not provide a transaction\nsafety mechanism. Therefore, in the event of an uploading error (after several automatic retries),\nthe function's Promise will reject and the dataset will be left in a state where some of\nthe items have already been saved to the dataset while other items from the source array were not.\nTo overcome this limitation, the developer may, for example, read the last item saved in the dataset\nand re-attempt the save of the data from this item onwards to prevent duplicates."
									}
								]
							},
							"parameters": [
								{
									"id": 23,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object or array of objects containing data to be stored in the default dataset.\n  The objects must be serializable to JSON and the JSON representation of each object must be smaller than 9MB."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Data",
												"qualifiedName": "Dataset.Data",
												"package": "@crawlee/core"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Data",
													"qualifiedName": "Dataset.Data",
													"package": "@crawlee/core"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 39,
					"name": "reduce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 241,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 40,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reduces a list of values down to a single value.\n\nMemo is the initial state of the reduction, and each successive step of it should be returned by "
									},
									{
										"kind": "code",
										"text": "`iteratee()`"
									},
									{
										"kind": "text",
										"text": ".\nThe "
									},
									{
										"kind": "code",
										"text": "`iteratee()`"
									},
									{
										"kind": "text",
										"text": " is passed three arguments: the "
									},
									{
										"kind": "code",
										"text": "`memo`"
									},
									{
										"kind": "text",
										"text": ", then the "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`index`"
									},
									{
										"kind": "text",
										"text": " of the iteration.\n\nIf no "
									},
									{
										"kind": "code",
										"text": "`memo`"
									},
									{
										"kind": "text",
										"text": " is passed to the initial invocation of reduce, the "
									},
									{
										"kind": "code",
										"text": "`iteratee()`"
									},
									{
										"kind": "text",
										"text": " is not invoked on the first element of the list.\nThe first element is instead passed as the memo in the invocation of the "
									},
									{
										"kind": "code",
										"text": "`iteratee()`"
									},
									{
										"kind": "text",
										"text": " on the next element in the list.\n\nIf "
									},
									{
										"kind": "code",
										"text": "`iteratee()`"
									},
									{
										"kind": "text",
										"text": " returns a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " then it's awaited before a next call."
									}
								]
							},
							"typeParameter": [
								{
									"id": 41,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 42,
									"name": "iteratee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 78,
										"typeArguments": [
											{
												"type": "reference",
												"id": 41,
												"name": "T",
												"qualifiedName": "T",
												"package": "@crawlee/core"
											},
											{
												"type": "reference",
												"name": "Data",
												"qualifiedName": "Dataset.Data",
												"package": "@crawlee/core"
											}
										],
										"name": "DatasetReducer",
										"qualifiedName": "DatasetReducer",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 43,
									"name": "memo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Initial state of the reduction."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 41,
										"name": "T",
										"qualifiedName": "T",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 44,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "All "
											},
											{
												"kind": "code",
												"text": "`reduce()`"
											},
											{
												"kind": "text",
												"text": " parameters."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 57,
										"name": "DatasetIteratorOptions",
										"qualifiedName": "DatasetIteratorOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 41,
										"name": "T",
										"qualifiedName": "T",
										"package": "@crawlee/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2,
					"name": "open",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 261,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "open",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Opens a dataset and returns a promise resolving to an instance of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " class.\n\nDatasets are used to store structured data where each object stored has the same attributes,\nsuch as online store products or real estate offers.\nThe actual data is stored either on the local filesystem or in the cloud.\n\nFor more details and code examples, see the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"typeParameter": [
								{
									"id": 4,
									"name": "Data",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									}
								}
							],
							"parameters": [
								{
									"id": 5,
									"name": "datasetIdOrName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "ID or name of the dataset to be opened. If "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": ",\n  the function returns the default dataset associated with the crawler run."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 6,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Storage manager options."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "StorageManagerOptions",
										"qualifiedName": "StorageManagerOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1,
										"typeArguments": [
											{
												"type": "reference",
												"id": 4,
												"name": "Data",
												"qualifiedName": "Data",
												"package": "@crawlee/core"
											}
										],
										"name": "Dataset",
										"qualifiedName": "Dataset",
										"package": "@crawlee/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						19,
						16,
						17,
						20,
						18
					]
				},
				{
					"title": "Methods",
					"children": [
						45,
						29,
						24,
						27,
						34,
						21,
						39,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
					"line": 133,
					"character": 21
				}
			],
			"typeParameters": [
				{
					"id": 47,
					"name": "Data",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					},
					"type": {
						"type": "reference",
						"name": "Dictionary",
						"qualifiedName": "Dictionary",
						"package": "@crawlee/types"
					},
					"default": {
						"type": "reference",
						"name": "Dictionary",
						"qualifiedName": "Dictionary",
						"package": "@crawlee/types"
					}
				}
			]
		},
		{
			"id": 899,
			"name": "KeyValueStore",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@inheritDoc",
						"content": []
					}
				]
			},
			"children": [
				{
					"id": 930,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 71,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "Configuration",
						"qualifiedName": "Configuration",
						"package": "@crawlee/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreKeyValueStore.config"
					}
				},
				{
					"id": 931,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 72,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreKeyValueStore.id"
					}
				},
				{
					"id": 932,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 73,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreKeyValueStore.name"
					}
				},
				{
					"id": 949,
					"name": "drop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 165,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 950,
							"name": "drop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the key-value store either from the Apify cloud storage or from the local directory,\ndepending on the mode of operation."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreKeyValueStore.drop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreKeyValueStore.drop"
					}
				},
				{
					"id": 953,
					"name": "forEachKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 189,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 954,
							"name": "forEachKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Iterates over key-value store keys, yielding each in turn to an "
									},
									{
										"kind": "code",
										"text": "`iteratee`"
									},
									{
										"kind": "text",
										"text": " function.\nEach invocation of "
									},
									{
										"kind": "code",
										"text": "`iteratee`"
									},
									{
										"kind": "text",
										"text": " is called with three arguments: "
									},
									{
										"kind": "code",
										"text": "`(key, index, info)`"
									},
									{
										"kind": "text",
										"text": ", where "
									},
									{
										"kind": "code",
										"text": "`key`"
									},
									{
										"kind": "text",
										"text": "\nis the record key, "
									},
									{
										"kind": "code",
										"text": "`index`"
									},
									{
										"kind": "text",
										"text": " is a zero-based index of the key in the current iteration\n(regardless of "
									},
									{
										"kind": "code",
										"text": "`options.exclusiveStartKey`"
									},
									{
										"kind": "text",
										"text": ") and "
									},
									{
										"kind": "code",
										"text": "`info`"
									},
									{
										"kind": "text",
										"text": " is an object that contains a single property "
									},
									{
										"kind": "code",
										"text": "`size`"
									},
									{
										"kind": "text",
										"text": "\nindicating size of the record in bytes.\n\nIf the "
									},
									{
										"kind": "code",
										"text": "`iteratee`"
									},
									{
										"kind": "text",
										"text": " function returns a Promise then it is awaited before the next call.\nIf it throws an error, the iteration is aborted and the "
									},
									{
										"kind": "code",
										"text": "`forEachKey`"
									},
									{
										"kind": "text",
										"text": " function throws the error.\n\n**Example usage**\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst keyValueStore = await KeyValueStore.open();\nawait keyValueStore.forEachKey(async (key, index, info) => {\n  console.log(`Key at ${index}: ${key} has size ${info.size}`);\n});\n```"
									}
								]
							},
							"parameters": [
								{
									"id": 955,
									"name": "iteratee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that is called for every key in the key-value store."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 190,
										"name": "KeyConsumer",
										"qualifiedName": "KeyConsumer",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 956,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "All "
											},
											{
												"kind": "code",
												"text": "`forEachKey()`"
											},
											{
												"kind": "text",
												"text": " parameters."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 203,
										"name": "KeyValueStoreIteratorOptions",
										"qualifiedName": "KeyValueStoreIteratorOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreKeyValueStore.forEachKey"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreKeyValueStore.forEachKey"
					}
				},
				{
					"id": 938,
					"name": "getAutoSavedValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 115,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 939,
							"name": "getAutoSavedValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 940,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									}
								}
							],
							"parameters": [
								{
									"id": 941,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 942,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 940,
										"name": "T",
										"qualifiedName": "T",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 940,
										"name": "T",
										"qualifiedName": "T",
										"package": "@crawlee/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreKeyValueStore.getAutoSavedValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreKeyValueStore.getAutoSavedValue"
					}
				},
				{
					"id": 927,
					"name": "getPublicUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/key_value_store.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/key_value_store.ts#L12"
						}
					],
					"signatures": [
						{
							"id": 928,
							"name": "getPublicUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a URL for the given key that may be used to publicly\naccess the value in the remote key-value store."
									}
								]
							},
							"parameters": [
								{
									"id": 929,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 933,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 114,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 934,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets a value from the key-value store.\n\nThe function returns a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that resolves to the record value,\nwhose JavaScript type depends on the MIME content type of the record.\nRecords with the "
									},
									{
										"kind": "code",
										"text": "`application/json`"
									},
									{
										"kind": "text",
										"text": "\ncontent type are automatically parsed and returned as a JavaScript object.\nSimilarly, records with "
									},
									{
										"kind": "code",
										"text": "`text/plain`"
									},
									{
										"kind": "text",
										"text": " content types are returned as a string.\nFor all other content types, the value is returned as a raw\n["
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": "](https://nodejs.org/api/buffer.html) instance.\n\nIf the record does not exist, the function resolves to "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": ".\n\nTo save or delete a value in the key-value store, use the\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore.setValue"
									},
									{
										"kind": "text",
										"text": " function.\n\n**Example usage:**\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst store = await KeyValueStore.open();\nconst buffer = await store.getValue('screenshot1.png');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns a promise that resolves to an object, string\n  or ["
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": "](https://nodejs.org/api/buffer.html), depending\n  on the MIME content type of the record."
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 935,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 936,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unique key of the record. It can be at most 256 characters long and only consist\n  of the following characters: "
											},
											{
												"kind": "code",
												"text": "`a`"
											},
											{
												"kind": "text",
												"text": "-"
											},
											{
												"kind": "code",
												"text": "`z`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`A`"
											},
											{
												"kind": "text",
												"text": "-"
											},
											{
												"kind": "code",
												"text": "`Z`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": "-"
											},
											{
												"kind": "code",
												"text": "`9`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`!-_.'()`"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 937,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fallback that will be returned if no value if present in the storage."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 935,
										"name": "T",
										"qualifiedName": "T",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 935,
												"name": "T",
												"qualifiedName": "T",
												"package": "@crawlee/core"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreKeyValueStore.getValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreKeyValueStore.getValue"
					}
				},
				{
					"id": 943,
					"name": "setValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 160,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 944,
							"name": "setValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Saves or deletes a record in the key-value store.\nThe function returns a promise that resolves once the record has been saved or deleted.\n\n**Example usage:**\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst store = await KeyValueStore.open();\nawait store.setValue('OUTPUT', { foo: 'bar' });\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBeware that the key can be at most 256 characters long and only contain the following characters: "
									},
									{
										"kind": "code",
										"text": "`a-zA-Z0-9!-_.'()`"
									},
									{
										"kind": "text",
										"text": "\n\nBy default, "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " is converted to JSON and stored with the\n"
									},
									{
										"kind": "code",
										"text": "`application/json; charset=utf-8`"
									},
									{
										"kind": "text",
										"text": " MIME content type.\nTo store the value with another content type, pass it in the options as follows:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst store = await KeyValueStore.open('my-text-store');\nawait store.setValue('RESULTS', 'my text data', { contentType: 'text/plain' });\n```"
									},
									{
										"kind": "text",
										"text": "\nIf you set custom content type, "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " must be either a string or\n["
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": "](https://nodejs.org/api/buffer.html), otherwise an error will be thrown.\n\nIf "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " is "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": ", the record is deleted instead. Note that the "
									},
									{
										"kind": "code",
										"text": "`setValue()`"
									},
									{
										"kind": "text",
										"text": " function succeeds\nregardless whether the record existed or not.\n\nTo retrieve a value from the key-value store, use the\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore.getValue"
									},
									{
										"kind": "text",
										"text": " function.\n\n**IMPORTANT:** Always make sure to use the "
									},
									{
										"kind": "code",
										"text": "`await`"
									},
									{
										"kind": "text",
										"text": " keyword when calling "
									},
									{
										"kind": "code",
										"text": "`setValue()`"
									},
									{
										"kind": "text",
										"text": ",\notherwise the crawler process might finish before the value is stored!"
									}
								]
							},
							"typeParameter": [
								{
									"id": 945,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 946,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unique key of the record. It can be at most 256 characters long and only consist\n  of the following characters: "
											},
											{
												"kind": "code",
												"text": "`a`"
											},
											{
												"kind": "text",
												"text": "-"
											},
											{
												"kind": "code",
												"text": "`z`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`A`"
											},
											{
												"kind": "text",
												"text": "-"
											},
											{
												"kind": "code",
												"text": "`Z`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": "-"
											},
											{
												"kind": "code",
												"text": "`9`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`!-_.'()`"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 947,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Record data, which can be one of the following values:\n   - If "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": ", the record in the key-value store is deleted.\n   - If no "
											},
											{
												"kind": "code",
												"text": "`options.contentType`"
											},
											{
												"kind": "text",
												"text": " is specified, "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " can be any JavaScript object and it will be stringified to JSON.\n   - If "
											},
											{
												"kind": "code",
												"text": "`options.contentType`"
											},
											{
												"kind": "text",
												"text": " is set, "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " is taken as is and it must be a "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": " or ["
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": "](https://nodejs.org/api/buffer.html).\n  For any other value an error will be thrown."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 945,
												"name": "T",
												"qualifiedName": "T",
												"package": "@crawlee/core"
											}
										]
									}
								},
								{
									"id": 948,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Record options."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 201,
										"name": "RecordOptions",
										"qualifiedName": "RecordOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreKeyValueStore.setValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreKeyValueStore.setValue"
					}
				},
				{
					"id": 909,
					"name": "getAutoSavedValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 236,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 910,
							"name": "getAutoSavedValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 911,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									}
								}
							],
							"parameters": [
								{
									"id": 912,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 913,
									"name": "defaultValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 911,
										"name": "T",
										"qualifiedName": "T",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 911,
										"name": "T",
										"qualifiedName": "T",
										"package": "@crawlee/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CoreKeyValueStore.getAutoSavedValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreKeyValueStore.getAutoSavedValue"
					}
				},
				{
					"id": 900,
					"name": "open",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/key_value_store.ts",
							"line": 19,
							"character": 26,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/key_value_store.ts#L19"
						}
					],
					"signatures": [
						{
							"id": 901,
							"name": "open",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@inheritDoc",
										"content": []
									}
								]
							},
							"parameters": [
								{
									"id": 902,
									"name": "storeIdOrName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 903,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "StorageManagerOptions",
										"qualifiedName": "StorageManagerOptions",
										"package": "@crawlee/core"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 899,
										"name": "KeyValueStore"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "CoreKeyValueStore.open"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "CoreKeyValueStore.open"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						930,
						931,
						932
					]
				},
				{
					"title": "Methods",
					"children": [
						949,
						953,
						938,
						927,
						933,
						943,
						909,
						900
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/key_value_store.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/key_value_store.ts#L7"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "KeyValueStore",
					"qualifiedName": "KeyValueStore",
					"package": "@crawlee/core"
				}
			]
		},
		{
			"id": 852,
			"name": "PlatformEventManager",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Gets an instance of a Node.js'\n[EventEmitter](https://nodejs.org/api/events.html#events_class_eventemitter)\nclass that emits various events from the SDK or the Apify platform.\nThe event emitter is initialized by calling the "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "Actor.main"
					},
					{
						"kind": "text",
						"text": " function.\n\n**Example usage:**\n\n"
					},
					{
						"kind": "code",
						"text": "```javascript\nActor.on('cpuInfo', (data) => {\n  if (data.isCpuOverloaded) console.log('Oh no, the CPU is overloaded!');\n});\n```"
					},
					{
						"kind": "text",
						"text": "\n\nThe following events are emitted:\n\n- "
					},
					{
						"kind": "code",
						"text": "`cpuInfo`"
					},
					{
						"kind": "text",
						"text": ": "
					},
					{
						"kind": "code",
						"text": "`{ \"isCpuOverloaded\": Boolean }`"
					},
					{
						"kind": "text",
						"text": "\n  The event is emitted approximately every second\n  and it indicates whether the actor is using the maximum of available CPU resources.\n  If that's the case, the actor should not add more workload.\n  For example, this event is used by the "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "AutoscaledPool"
					},
					{
						"kind": "text",
						"text": " class.\n- "
					},
					{
						"kind": "code",
						"text": "`migrating`"
					},
					{
						"kind": "text",
						"text": ": "
					},
					{
						"kind": "code",
						"text": "`void`"
					},
					{
						"kind": "text",
						"text": "\n  Emitted when the actor running on the Apify platform is going to be migrated to another worker server soon.\n  You can use it to persist the state of the actor and gracefully stop your in-progress tasks, so that they are not interrupted by the migration.\n  For example, this is used by the "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "RequestList"
					},
					{
						"kind": "text",
						"text": " class.\n- "
					},
					{
						"kind": "code",
						"text": "`aborting`"
					},
					{
						"kind": "text",
						"text": ": "
					},
					{
						"kind": "code",
						"text": "`void`"
					},
					{
						"kind": "text",
						"text": "\n  When a user aborts an actor run on the Apify platform, they can choose to abort gracefully to allow\n  the actor some time before getting killed. This graceful abort emits the "
					},
					{
						"kind": "code",
						"text": "`aborting`"
					},
					{
						"kind": "text",
						"text": " event which the SDK\n  uses to gracefully stop running crawls and you can use it to do your own cleanup as well.\n- "
					},
					{
						"kind": "code",
						"text": "`persistState`"
					},
					{
						"kind": "text",
						"text": ": "
					},
					{
						"kind": "code",
						"text": "`{ \"isMigrating\": Boolean }`"
					},
					{
						"kind": "text",
						"text": "\n  Emitted in regular intervals (by default 60 seconds) to notify all components of Apify SDK that it is time to persist\n  their state, in order to avoid repeating all work when the actor restarts.\n  This event is automatically emitted together with the "
					},
					{
						"kind": "code",
						"text": "`migrating`"
					},
					{
						"kind": "text",
						"text": " event,\n  in which case the "
					},
					{
						"kind": "code",
						"text": "`isMigrating`"
					},
					{
						"kind": "text",
						"text": " flag is set to "
					},
					{
						"kind": "code",
						"text": "`true`"
					},
					{
						"kind": "text",
						"text": ". Otherwise the flag is "
					},
					{
						"kind": "code",
						"text": "`false`"
					},
					{
						"kind": "text",
						"text": ".\n  Note that the "
					},
					{
						"kind": "code",
						"text": "`persistState`"
					},
					{
						"kind": "text",
						"text": " event is provided merely for user convenience,\n  you can achieve the same effect using "
					},
					{
						"kind": "code",
						"text": "`setInterval()`"
					},
					{
						"kind": "text",
						"text": " and listening for the "
					},
					{
						"kind": "code",
						"text": "`migrating`"
					},
					{
						"kind": "text",
						"text": " event."
					}
				]
			},
			"children": [
				{
					"id": 853,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/platform_event_manager.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/platform_event_manager.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 854,
							"name": "new PlatformEventManager",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 855,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 643,
										"name": "Configuration"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 852,
								"name": "PlatformEventManager"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventManager.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventManager.constructor"
					}
				},
				{
					"id": 857,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/platform_event_manager.ts",
							"line": 48,
							"character": 34,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/platform_event_manager.ts#L48"
						}
					],
					"type": {
						"type": "reference",
						"id": 643,
						"name": "Configuration"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"name": "EventManager.config"
					}
				},
				{
					"id": 863,
					"name": "close",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/platform_event_manager.ts",
							"line": 110,
							"character": 19,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/platform_event_manager.ts#L110"
						}
					],
					"signatures": [
						{
							"id": 864,
							"name": "close",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Closes websocket providing events from Actor infrastructure and also stops sending internal events\nof Apify package such as "
									},
									{
										"kind": "code",
										"text": "`persistState`"
									},
									{
										"kind": "text",
										"text": ".\nThis is automatically called at the end of "
									},
									{
										"kind": "code",
										"text": "`Actor.main()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventManager.close"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventManager.close"
					}
				},
				{
					"id": 883,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 884,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 885,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "EventTypeName",
										"qualifiedName": "EventTypeName",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 886,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventManager.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventManager.emit"
					}
				},
				{
					"id": 858,
					"name": "init",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/platform_event_manager.ts",
							"line": 56,
							"character": 19,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/platform_event_manager.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 859,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes "
									},
									{
										"kind": "code",
										"text": "`Actor.events`"
									},
									{
										"kind": "text",
										"text": " event emitter by creating a connection to a websocket that provides them.\nThis is an internal function that is automatically called by "
									},
									{
										"kind": "code",
										"text": "`Actor.main()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventManager.init"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventManager.init"
					}
				},
				{
					"id": 887,
					"name": "isInitialized",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 888,
							"name": "isInitialized",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventManager.isInitialized"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventManager.isInitialized"
					}
				},
				{
					"id": 876,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 877,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 878,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "EventTypeName",
										"qualifiedName": "EventTypeName",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 879,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 880,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
													"line": 34,
													"character": 41
												}
											],
											"signatures": [
												{
													"id": 881,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 882,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventManager.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventManager.off"
					}
				},
				{
					"id": 869,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 870,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 871,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "EventTypeName",
										"qualifiedName": "EventTypeName",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 872,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 873,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
													"line": 33,
													"character": 39
												}
											],
											"signatures": [
												{
													"id": 874,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 875,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventManager.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventManager.on"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						853
					]
				},
				{
					"title": "Properties",
					"children": [
						857
					]
				},
				{
					"title": "Methods",
					"children": [
						863,
						883,
						858,
						887,
						876,
						869
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/platform_event_manager.ts",
					"line": 44,
					"character": 13,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/platform_event_manager.ts#L44"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "EventManager",
					"qualifiedName": "EventManager",
					"package": "@crawlee/core"
				}
			]
		},
		{
			"id": 795,
			"name": "ProxyConfiguration",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Configures connection to a proxy server with the provided options. Proxy servers are used to prevent target websites from blocking\nyour crawlers based on IP address rate limits or blacklists. Setting proxy configuration in your crawlers automatically configures\nthem to use the selected proxies for all connections. You can get information about the currently used proxy by inspecting\nthe "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "ProxyInfo"
					},
					{
						"kind": "text",
						"text": " property in your crawler's page function. There, you can inspect the proxy's URL and other attributes.\n\nThe proxy servers are managed by [Apify Proxy](https://docs.apify.com/proxy). To be able to use Apify Proxy,\nyou need an Apify account and access to the selected proxies. If you provide no configuration option,\nthe proxies will be managed automatically using a smart algorithm.\n\nIf you want to use your own proxies, use the "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "ProxyConfigurationOptions.proxyUrls"
					},
					{
						"kind": "text",
						"text": " option. Your list of proxy URLs will\nbe rotated by the configuration if this option is provided.\n\n**Example usage:**\n\n"
					},
					{
						"kind": "code",
						"text": "```javascript\n\nconst proxyConfiguration = await Actor.createProxyConfiguration({\n  groups: ['GROUP1', 'GROUP2'] // List of Apify Proxy groups\n  countryCode: 'US',\n});\n\nconst crawler = new CheerioCrawler({\n  // ...\n  proxyConfiguration,\n  requestHandler({ proxyInfo }) {\n     const usedProxyUrl = proxyInfo.url; // Getting the proxy URL\n  }\n})\n\n```"
					}
				]
			},
			"children": [
				{
					"id": 806,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 162,
							"character": 66,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L162"
						}
					],
					"type": {
						"type": "reference",
						"id": 643,
						"name": "Configuration"
					},
					"defaultValue": "..."
				},
				{
					"id": 833,
					"name": "isManInTheMiddle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
							"line": 103,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreProxyConfiguration.isManInTheMiddle"
					}
				},
				{
					"id": 807,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 215,
							"character": 10,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L215"
						}
					],
					"signatures": [
						{
							"id": 808,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Loads proxy password if token is provided and checks access to Apify Proxy and provided proxy groups\nif Apify Proxy configuration is used.\nAlso checks if country has access to Apify Proxy groups if the country code is provided.\n\nYou should use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "createProxyConfiguration"
									},
									{
										"kind": "text",
										"text": " function to create a pre-initialized\n"
									},
									{
										"kind": "code",
										"text": "`ProxyConfiguration`"
									},
									{
										"kind": "text",
										"text": " instance instead of calling this manually."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 809,
					"name": "newProxyInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 239,
							"character": 19,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L239"
						}
					],
					"signatures": [
						{
							"id": 810,
							"name": "newProxyInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function creates a new "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "ProxyInfo"
									},
									{
										"kind": "text",
										"text": " info object.\nIt is used by CheerioCrawler and PuppeteerCrawler to generate proxy URLs and also to allow the user to inspect\nthe currently used proxy via the requestHandler parameter "
									},
									{
										"kind": "code",
										"text": "`proxyInfo`"
									},
									{
										"kind": "text",
										"text": ".\nUse it if you want to work with a rich representation of a proxy URL.\nIf you need the URL string only, use "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "ProxyConfiguration.newUrl"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Represents information about used proxy and its configuration."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 811,
									"name": "sessionId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Represents the identifier of user "
											},
											{
												"kind": "inline-tag",
												"tag": "@apilink",
												"text": "Session"
											},
											{
												"kind": "text",
												"text": " that can be managed by the "
											},
											{
												"kind": "inline-tag",
												"tag": "@apilink",
												"text": "SessionPool"
											},
											{
												"kind": "text",
												"text": " or\n you can use the Apify Proxy [Session](https://docs.apify.com/proxy#sessions) identifier.\n When the provided sessionId is a number, it's converted to a string. Property sessionId of\n "
											},
											{
												"kind": "inline-tag",
												"tag": "@apilink",
												"text": "ProxyInfo"
											},
											{
												"kind": "text",
												"text": " is always returned as a type string.\n\n All the HTTP requests going through the proxy with the same session identifier\n will use the same target proxy server (i.e. the same IP address).\n The identifier must not be longer than 50 characters and include only the following: "
											},
											{
												"kind": "code",
												"text": "`0-9`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`a-z`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`A-Z`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\".\"`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\"_\"`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`\"~\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 786,
										"name": "ProxyInfo"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "CoreProxyConfiguration.newProxyInfo"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "CoreProxyConfiguration.newProxyInfo"
					}
				},
				{
					"id": 812,
					"name": "newUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 270,
							"character": 19,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L270"
						}
					],
					"signatures": [
						{
							"id": 813,
							"name": "newUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new proxy URL based on provided configuration options and the "
									},
									{
										"kind": "code",
										"text": "`sessionId`"
									},
									{
										"kind": "text",
										"text": " parameter."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A string with a proxy URL, including authentication credentials and port number.\n For example, "
											},
											{
												"kind": "code",
												"text": "`http://bob:password123@proxy.example.com:8000`"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 814,
									"name": "sessionId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Represents the identifier of user "
											},
											{
												"kind": "inline-tag",
												"tag": "@apilink",
												"text": "Session"
											},
											{
												"kind": "text",
												"text": " that can be managed by the "
											},
											{
												"kind": "inline-tag",
												"tag": "@apilink",
												"text": "SessionPool"
											},
											{
												"kind": "text",
												"text": " or\n you can use the Apify Proxy [Session](https://docs.apify.com/proxy#sessions) identifier.\n When the provided sessionId is a number, it's converted to a string.\n\n All the HTTP requests going through the proxy with the same session identifier\n will use the same target proxy server (i.e. the same IP address).\n The identifier must not be longer than 50 characters and include only the following: "
											},
											{
												"kind": "code",
												"text": "`0-9`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`a-z`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`A-Z`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\".\"`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\"_\"`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`\"~\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"name": "CoreProxyConfiguration.newUrl"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "CoreProxyConfiguration.newUrl"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						806,
						833
					]
				},
				{
					"title": "Methods",
					"children": [
						807,
						809,
						812
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/proxy_configuration.ts",
					"line": 151,
					"character": 13,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L151"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ProxyConfiguration",
					"qualifiedName": "ProxyConfiguration",
					"package": "@crawlee/core"
				}
			]
		},
		{
			"id": 97,
			"name": "RequestQueue",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExternal": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a queue of URLs to crawl, which is used for deep crawling of websites\nwhere you start with several URLs and then recursively\nfollow links to other pages. The data structure supports both breadth-first and depth-first crawling orders.\n\nEach URL is represented using an instance of the "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "Request"
					},
					{
						"kind": "text",
						"text": " class.\nThe queue can only contain unique URLs. More precisely, it can only contain "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "Request"
					},
					{
						"kind": "text",
						"text": " instances\nwith distinct "
					},
					{
						"kind": "code",
						"text": "`uniqueKey`"
					},
					{
						"kind": "text",
						"text": " properties. By default, "
					},
					{
						"kind": "code",
						"text": "`uniqueKey`"
					},
					{
						"kind": "text",
						"text": " is generated from the URL, but it can also be overridden.\nTo add a single URL multiple times to the queue,\ncorresponding "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "Request"
					},
					{
						"kind": "text",
						"text": " objects will need to have different "
					},
					{
						"kind": "code",
						"text": "`uniqueKey`"
					},
					{
						"kind": "text",
						"text": " properties.\n\nDo not instantiate this class directly, use the "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "RequestQueue.open"
					},
					{
						"kind": "text",
						"text": " function instead.\n\n"
					},
					{
						"kind": "code",
						"text": "`RequestQueue`"
					},
					{
						"kind": "text",
						"text": " is used by "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "BasicCrawler"
					},
					{
						"kind": "text",
						"text": ", "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "CheerioCrawler"
					},
					{
						"kind": "text",
						"text": ", "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "PuppeteerCrawler"
					},
					{
						"kind": "text",
						"text": "\nand "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "PlaywrightCrawler"
					},
					{
						"kind": "text",
						"text": " as a source of URLs to crawl.\nUnlike "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "RequestList"
					},
					{
						"kind": "text",
						"text": ", "
					},
					{
						"kind": "code",
						"text": "`RequestQueue`"
					},
					{
						"kind": "text",
						"text": " supports dynamic adding and removing of requests.\nOn the other hand, the queue is not optimized for operations that add or remove a large number of URLs in a batch.\n\n"
					},
					{
						"kind": "code",
						"text": "`RequestQueue`"
					},
					{
						"kind": "text",
						"text": " stores its data either on local disk or in the Apify Cloud,\ndepending on whether the "
					},
					{
						"kind": "code",
						"text": "`APIFY_LOCAL_STORAGE_DIR`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`APIFY_TOKEN`"
					},
					{
						"kind": "text",
						"text": " environment variable is set.\n\nIf the "
					},
					{
						"kind": "code",
						"text": "`APIFY_LOCAL_STORAGE_DIR`"
					},
					{
						"kind": "text",
						"text": " environment variable is set, the queue data is stored in\nthat directory in an SQLite database file.\n\nIf the "
					},
					{
						"kind": "code",
						"text": "`APIFY_TOKEN`"
					},
					{
						"kind": "text",
						"text": " environment variable is set but "
					},
					{
						"kind": "code",
						"text": "`APIFY_LOCAL_STORAGE_DIR`"
					},
					{
						"kind": "text",
						"text": " is not, the data is stored in the\n[Apify Request Queue](https://docs.apify.com/storage/request-queue)\ncloud storage. Note that you can force usage of the cloud storage also by passing the "
					},
					{
						"kind": "code",
						"text": "`forceCloud`"
					},
					{
						"kind": "text",
						"text": "\noption to "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "RequestQueue.open"
					},
					{
						"kind": "text",
						"text": " function,\neven if the "
					},
					{
						"kind": "code",
						"text": "`APIFY_LOCAL_STORAGE_DIR`"
					},
					{
						"kind": "text",
						"text": " variable is set.\n\n**Example usage:**\n\n"
					},
					{
						"kind": "code",
						"text": "```javascript\n// Open the default request queue associated with the crawler run\nconst queue = await RequestQueue.open();\n\n// Open a named request queue\nconst queueWithName = await RequestQueue.open('some-name');\n\n// Enqueue few requests\nawait queue.addRequest({ url: 'http://example.com/aaa' });\nawait queue.addRequest({ url: 'http://example.com/bbb' });\nawait queue.addRequest({ url: 'http://example.com/foo/bar' }, { forefront: true });\n```"
					}
				]
			},
			"children": [
				{
					"id": 126,
					"name": "assumedHandledCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 137,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 125,
					"name": "assumedTotalCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 136,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 112,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 118,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "RequestQueueClient",
						"qualifiedName": "RequestQueueClient",
						"package": "@crawlee/types"
					}
				},
				{
					"id": 111,
					"name": "clientKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 117,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 106,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 112,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "Configuration",
						"qualifiedName": "Configuration",
						"package": "@crawlee/core"
					}
				},
				{
					"id": 108,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 114,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 121,
					"name": "inProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 132,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Set",
						"qualifiedName": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 123,
					"name": "internalTimeoutMillis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 134,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 122,
					"name": "lastActivity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 133,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Date",
						"qualifiedName": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 107,
					"name": "log",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 113,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Log",
						"qualifiedName": "Log",
						"package": "@apify/log"
					}
				},
				{
					"id": 109,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 115,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 114,
					"name": "queryQueueHeadPromise",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 125,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 115,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 120,
													"name": "hadMultipleClients",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
															"line": 130,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 117,
													"name": "prevLimit",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
															"line": 127,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 119,
													"name": "queryStartedAt",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
															"line": 129,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "Date",
														"qualifiedName": "Date",
														"package": "typescript"
													}
												},
												{
													"id": 118,
													"name": "queueModifiedAt",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
															"line": 128,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "Date",
														"qualifiedName": "Date",
														"package": "typescript"
													}
												},
												{
													"id": 116,
													"name": "wasLimitReached",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
															"line": 126,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														120,
														117,
														119,
														118,
														116
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
													"line": 125,
													"character": 36
												}
											]
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 124,
					"name": "recentlyHandled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 135,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "LruCache",
						"qualifiedName": "LruCache",
						"package": "@apify/datastructures"
					}
				},
				{
					"id": 127,
					"name": "requestsCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 138,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 176,
												"name": "QueueOperationInfo",
												"qualifiedName": "QueueOperationInfo",
												"package": "@crawlee/core"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "uniqueKey"
													},
													{
														"type": "literal",
														"value": "wasAlreadyHandled"
													}
												]
											}
										],
										"name": "Pick",
										"qualifiedName": "Pick",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 128,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 130,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
															"line": 140,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 129,
													"name": "isHandled",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
															"line": 139,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														130,
														129
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
													"line": 138,
													"character": 90
												}
											]
										}
									}
								]
							}
						],
						"name": "LruCache",
						"qualifiedName": "LruCache",
						"package": "@apify/datastructures"
					}
				},
				{
					"id": 110,
					"name": "timeoutSecs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 116,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 133,
					"name": "addRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 164,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 134,
							"name": "addRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a request to the queue.\n\nIf a request with the same "
									},
									{
										"kind": "code",
										"text": "`uniqueKey`"
									},
									{
										"kind": "text",
										"text": " property is already present in the queue,\nit will not be updated. You can find out whether this happened from the resulting\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "QueueOperationInfo"
									},
									{
										"kind": "text",
										"text": " object.\n\nTo add multiple requests to the queue by extracting links from a webpage,\nsee the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "enqueueLinks"
									},
									{
										"kind": "text",
										"text": " helper function."
									}
								]
							},
							"parameters": [
								{
									"id": 135,
									"name": "requestLike",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "inline-tag",
												"tag": "@apilink",
												"text": "Request"
											},
											{
												"kind": "text",
												"text": " object or vanilla object with request data.\nNote that the function sets the "
											},
											{
												"kind": "code",
												"text": "`uniqueKey`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " fields to the passed Request."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Dictionary",
														"qualifiedName": "Dictionary",
														"package": "@crawlee/types"
													}
												],
												"name": "Request",
												"qualifiedName": "Request",
												"package": "@crawlee/core"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Dictionary",
														"qualifiedName": "Dictionary",
														"package": "@crawlee/types"
													}
												],
												"name": "RequestOptions",
												"qualifiedName": "RequestOptions",
												"package": "@crawlee/core"
											}
										]
									}
								},
								{
									"id": 136,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Request queue operation options."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 181,
										"name": "RequestQueueOperationOptions",
										"qualifiedName": "RequestQueueOperationOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 176,
										"name": "QueueOperationInfo",
										"qualifiedName": "QueueOperationInfo",
										"package": "@crawlee/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 137,
					"name": "addRequests",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 176,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 138,
							"name": "addRequests",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds requests to the queue in batches of 25.\n\nIf a request that is passed in is already present due to its "
									},
									{
										"kind": "code",
										"text": "`uniqueKey`"
									},
									{
										"kind": "text",
										"text": " property being the same,\nit will not be updated. You can find out whether this happened by finding the request in the resulting\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "BatchAddRequestsResult"
									},
									{
										"kind": "text",
										"text": " object."
									}
								]
							},
							"parameters": [
								{
									"id": 139,
									"name": "requestsLike",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "inline-tag",
												"tag": "@apilink",
												"text": "Request"
											},
											{
												"kind": "text",
												"text": " objects or vanilla objects with request data.\nNote that the function sets the "
											},
											{
												"kind": "code",
												"text": "`uniqueKey`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " fields to the passed requests if missing."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Dictionary",
															"qualifiedName": "Dictionary",
															"package": "@crawlee/types"
														}
													],
													"name": "Request",
													"qualifiedName": "Request",
													"package": "@crawlee/core"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Dictionary",
															"qualifiedName": "Dictionary",
															"package": "@crawlee/types"
														}
													],
													"name": "RequestOptions",
													"qualifiedName": "RequestOptions",
													"package": "@crawlee/core"
												}
											]
										}
									}
								},
								{
									"id": 140,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Request queue operation options."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 181,
										"name": "RequestQueueOperationOptions",
										"qualifiedName": "RequestQueueOperationOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BatchAddRequestsResult",
										"qualifiedName": "BatchAddRequestsResult",
										"package": "@crawlee/types"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 170,
					"name": "drop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 255,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 171,
							"name": "drop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the queue either from the Apify Cloud storage or from the local database,\ndepending on the mode of operation."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 145,
					"name": "fetchNextRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 201,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 146,
							"name": "fetchNextRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a next request in the queue to be processed, or "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " if there are no more pending requests.\n\nOnce you successfully finish processing of the request, you need to call\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue.markRequestHandled"
									},
									{
										"kind": "text",
										"text": "\nto mark the request as handled in the queue. If there was some error in processing the request,\ncall "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue.reclaimRequest"
									},
									{
										"kind": "text",
										"text": " instead,\nso that the queue will give the request to some other consumer in another call to the "
									},
									{
										"kind": "code",
										"text": "`fetchNextRequest`"
									},
									{
										"kind": "text",
										"text": " function.\n\nNote that the "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " return value doesn't mean the queue processing finished,\nit means there are currently no pending requests.\nTo check whether all requests in queue were finished,\nuse "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue.isFinished"
									},
									{
										"kind": "text",
										"text": " instead."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns the request object or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if there are no more pending requests."
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 147,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 147,
														"name": "T",
														"qualifiedName": "T",
														"package": "@crawlee/core"
													}
												],
												"name": "Request",
												"qualifiedName": "Request",
												"package": "@crawlee/core"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 174,
					"name": "getInfo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 290,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 175,
							"name": "getInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an object containing general information about the request queue.\n\nThe function returns the same object as the Apify API Client's\n[getQueue](https://docs.apify.com/api/apify-client-js/latest#ApifyClient-requestQueues)\nfunction, which in turn calls the\n[Get request queue](https://apify.com/docs/api/v2#/reference/request-queues/queue/get-request-queue)\nAPI endpoint.\n\n**Example:**\n"
									},
									{
										"kind": "code",
										"text": "```\n{\n  id: \"WkzbQMuFYuamGv3YF\",\n  name: \"my-queue\",\n  userId: \"wRsJZtadYvn4mBZmm\",\n  createdAt: new Date(\"2015-12-12T07:34:14.202Z\"),\n  modifiedAt: new Date(\"2015-12-13T08:36:13.202Z\"),\n  accessedAt: new Date(\"2015-12-14T08:36:13.202Z\"),\n  totalRequestCount: 25,\n  handledRequestCount: 5,\n  pendingRequestCount: 20,\n}\n```"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "RequestQueueInfo",
												"qualifiedName": "RequestQueueInfo",
												"package": "@crawlee/types"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 141,
					"name": "getRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 183,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 142,
							"name": "getRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets the request from the queue specified by ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Returns the request object, or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if it was not found."
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 143,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									},
									"default": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Dictionary",
										"qualifiedName": "Dictionary",
										"package": "@crawlee/types"
									}
								}
							],
							"parameters": [
								{
									"id": 144,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "ID of the request."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 143,
														"name": "T",
														"qualifiedName": "T",
														"package": "@crawlee/core"
													}
												],
												"name": "Request",
												"qualifiedName": "Request",
												"package": "@crawlee/core"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 172,
					"name": "handledCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 265,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 173,
							"name": "handledCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of handled requests.\n\nThis function is just a convenient shortcut for:\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nconst { handledRequestCount } = await queue.getInfo();\n```"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 155,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 222,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 156,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resolves to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the next call to "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue.fetchNextRequest"
									},
									{
										"kind": "text",
										"text": "\nwould return "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": ", otherwise it resolves to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nNote that even if the queue is empty, there might be some pending requests currently being processed.\nIf you need to ensure that there is no activity in the queue, use "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue.isFinished"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 157,
					"name": "isFinished",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 229,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 158,
							"name": "isFinished",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resolves to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if all requests were already handled and there are no more left.\nDue to the nature of distributed storage used by the queue,\nthe function might occasionally return a false negative,\nbut it will never return a false positive."
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 148,
					"name": "markRequestHandled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 208,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 149,
							"name": "markRequestHandled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Marks a request that was previously returned by the\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue.fetchNextRequest"
									},
									{
										"kind": "text",
										"text": "\nfunction as handled after successful processing.\nHandled requests will never again be returned by the "
									},
									{
										"kind": "code",
										"text": "`fetchNextRequest`"
									},
									{
										"kind": "text",
										"text": " function."
									}
								]
							},
							"parameters": [
								{
									"id": 150,
									"name": "request",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Dictionary",
												"qualifiedName": "Dictionary",
												"package": "@crawlee/types"
											}
										],
										"name": "Request",
										"qualifiedName": "Request",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 176,
												"name": "QueueOperationInfo",
												"qualifiedName": "QueueOperationInfo",
												"package": "@crawlee/core"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 151,
					"name": "reclaimRequest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 215,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 152,
							"name": "reclaimRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reclaims a failed request back to the queue, so that it can be returned for processing later again\nby another call to "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue.fetchNextRequest"
									},
									{
										"kind": "text",
										"text": ".\nThe request record in the queue is updated using the provided "
									},
									{
										"kind": "code",
										"text": "`request`"
									},
									{
										"kind": "text",
										"text": " parameter.\nFor example, this lets you store the number of retries or error messages for the request."
									}
								]
							},
							"parameters": [
								{
									"id": 153,
									"name": "request",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Dictionary",
												"qualifiedName": "Dictionary",
												"package": "@crawlee/types"
											}
										],
										"name": "Request",
										"qualifiedName": "Request",
										"package": "@crawlee/core"
									}
								},
								{
									"id": 154,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 181,
										"name": "RequestQueueOperationOptions",
										"qualifiedName": "RequestQueueOperationOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 176,
												"name": "QueueOperationInfo",
												"qualifiedName": "QueueOperationInfo",
												"package": "@crawlee/core"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 98,
					"name": "open",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 307,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 99,
							"name": "open",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Opens a request queue and returns a promise resolving to an instance\nof the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue"
									},
									{
										"kind": "text",
										"text": " class.\n\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue"
									},
									{
										"kind": "text",
										"text": " represents a queue of URLs to crawl, which is stored either on local filesystem or in the cloud.\nThe queue is used for deep crawling of websites, where you start with several URLs and then\nrecursively follow links to other pages. The data structure supports both breadth-first\nand depth-first crawling orders.\n\nFor more details and code examples, see the "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "RequestQueue"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"parameters": [
								{
									"id": 100,
									"name": "queueIdOrName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "ID or name of the request queue to be opened. If "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": ",\n  the function returns the default request queue associated with the crawler run."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 101,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Open Request Queue options."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "StorageManagerOptions",
										"qualifiedName": "StorageManagerOptions",
										"package": "@crawlee/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 97,
										"name": "RequestQueue",
										"qualifiedName": "RequestQueue",
										"package": "@crawlee/core"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						126,
						125,
						112,
						111,
						106,
						108,
						121,
						123,
						122,
						107,
						109,
						114,
						124,
						127,
						110
					]
				},
				{
					"title": "Methods",
					"children": [
						133,
						137,
						170,
						145,
						174,
						141,
						172,
						155,
						157,
						148,
						151,
						98
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
					"line": 111,
					"character": 21
				}
			]
		},
		{
			"id": 545,
			"name": "AbortOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 547,
					"name": "gracefully",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/run.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "RunAbortOptions.gracefully"
					}
				},
				{
					"id": 546,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "User API token that is used to run the actor. By default, it is taken from the "
							},
							{
								"kind": "code",
								"text": "`APIFY_TOKEN`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1457,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1457"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						547,
						546
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1453,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1453"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "RunAbortOptions",
					"qualifiedName": "RunAbortOptions",
					"package": "apify-client"
				}
			]
		},
		{
			"id": 564,
			"name": "ActorRun",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 566,
					"name": "actId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 159,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 568,
					"name": "actorTaskId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 161,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 576,
					"name": "buildId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 169,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 580,
					"name": "buildNumber",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 173,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 581,
					"name": "containerUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 174,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 579,
					"name": "defaultDatasetId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 172,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 578,
					"name": "defaultKeyValueStoreId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 171,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 577,
					"name": "exitCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 170,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 570,
					"name": "finishedAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 163,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Date",
						"qualifiedName": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 565,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 158,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 573,
					"name": "meta",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 166,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "ActorRunMeta",
						"qualifiedName": "ActorRunMeta",
						"package": "apify-client"
					}
				},
				{
					"id": 575,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 168,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "ActorRunOptions",
						"qualifiedName": "ActorRunOptions",
						"package": "apify-client"
					}
				},
				{
					"id": 569,
					"name": "startedAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 162,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Date",
						"qualifiedName": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 574,
					"name": "stats",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 167,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "ActorRunStats",
						"qualifiedName": "ActorRunStats",
						"package": "apify-client"
					}
				},
				{
					"id": 571,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 164,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "READY"
							},
							{
								"type": "literal",
								"value": "RUNNING"
							},
							{
								"type": "literal",
								"value": "SUCCEEDED"
							},
							{
								"type": "literal",
								"value": "FAILED"
							},
							{
								"type": "literal",
								"value": "ABORTING"
							},
							{
								"type": "literal",
								"value": "ABORTED"
							},
							{
								"type": "literal",
								"value": "TIMING-OUT"
							},
							{
								"type": "literal",
								"value": "TIMED-OUT"
							}
						]
					}
				},
				{
					"id": 572,
					"name": "statusMessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 165,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 567,
					"name": "userId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 160,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						566,
						568,
						576,
						580,
						581,
						579,
						578,
						577,
						570,
						565,
						573,
						575,
						569,
						574,
						571,
						572,
						567
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
					"line": 157,
					"character": 17
				}
			]
		},
		{
			"id": 269,
			"name": "ApifyClientOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 270,
					"name": "baseUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "https://api.apify.com"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 120,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 271,
					"name": "maxRetries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "8"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 122,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 272,
					"name": "minDelayBetweenRetriesMillis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "500"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 124,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 273,
					"name": "requestInterceptors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "[]"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 126,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "undefined"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 274,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {
											"isExternal": true
										},
										"sources": [
											{
												"fileName": "node_modules/axios/index.d.ts",
												"line": 133,
												"character": 27
											}
										],
										"signatures": [
											{
												"id": 275,
												"name": "__type",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {
													"isExternal": true
												},
												"parameters": [
													{
														"id": 276,
														"name": "value",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {
															"isExternal": true
														},
														"type": {
															"type": "reference",
															"name": "ApifyRequestConfig",
															"qualifiedName": "ApifyRequestConfig",
															"package": "apify-client"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 277,
					"name": "timeoutSecs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "360"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 128,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 278,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
							"line": 129,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						270,
						271,
						272,
						273,
						277,
						278
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/apify-client/dist/apify_client.d.ts",
					"line": 118,
					"character": 17
				}
			]
		},
		{
			"id": 515,
			"name": "ApifyEnv",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parsed representation of the "
					},
					{
						"kind": "code",
						"text": "`APIFY_XXX`"
					},
					{
						"kind": "text",
						"text": " environmental variables.\nThis object is returned by the "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "Actor.getEnv"
					},
					{
						"kind": "text",
						"text": " function."
					}
				]
			},
			"children": [
				{
					"id": 516,
					"name": "actorId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the actor (APIFY_ACTOR_ID)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1384,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1384"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 517,
					"name": "actorRunId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the actor run (APIFY_ACTOR_RUN_ID)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1389,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1389"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 518,
					"name": "actorTaskId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the actor task (APIFY_ACTOR_TASK_ID)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1394,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1394"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 524,
					"name": "defaultDatasetId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the dataset where input and output data of this\nactor is stored (APIFY_DEFAULT_DATASET_ID)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1428,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1428"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 523,
					"name": "defaultKeyValueStoreId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the key-value store where input and output data of this\nactor is stored (APIFY_DEFAULT_KEY_VALUE_STORE_ID)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1422,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1422"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 525,
					"name": "memoryMbytes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Amount of memory allocated for the actor,\nin megabytes (APIFY_MEMORY_MBYTES)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1434,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1434"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 521,
					"name": "startedAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date when the actor was started (APIFY_STARTED_AT)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1411,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1411"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 522,
					"name": "timeoutAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date when the actor will time out (APIFY_TIMEOUT_AT)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1416,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1416"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Date",
								"qualifiedName": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 520,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Authentication token representing privileges given to the actor run,\nit can be passed to various Apify APIs (APIFY_TOKEN)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1406,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1406"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 519,
					"name": "userId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the user who started the actor - note that it might be\ndifferent than the owner ofthe actor (APIFY_USER_ID)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1400,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1400"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						516,
						517,
						518,
						524,
						523,
						525,
						521,
						522,
						520,
						519
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1380,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1380"
				}
			]
		},
		{
			"id": 530,
			"name": "CallOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 532,
					"name": "build",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tag or number of the actor build to run (e.g. "
							},
							{
								"kind": "code",
								"text": "`beta`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`1.2.345`"
							},
							{
								"kind": "text",
								"text": ").\nIf not provided, the run uses build tag or number from the default actor run configuration (typically "
							},
							{
								"kind": "code",
								"text": "`latest`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 125,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ActorStartOptions.build"
					}
				},
				{
					"id": 533,
					"name": "contentType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Content type for the "
							},
							{
								"kind": "code",
								"text": "`input`"
							},
							{
								"kind": "text",
								"text": ". If not specified,\n"
							},
							{
								"kind": "code",
								"text": "`input`"
							},
							{
								"kind": "text",
								"text": " is expected to be an object that will be stringified to JSON and content type set to\n"
							},
							{
								"kind": "code",
								"text": "`application/json; charset=utf-8`"
							},
							{
								"kind": "text",
								"text": ". If "
							},
							{
								"kind": "code",
								"text": "`options.contentType`"
							},
							{
								"kind": "text",
								"text": " is specified, then "
							},
							{
								"kind": "code",
								"text": "`input`"
							},
							{
								"kind": "text",
								"text": " must be a\n"
							},
							{
								"kind": "code",
								"text": "`String`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`Buffer`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 132,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ActorStartOptions.contentType"
					}
				},
				{
					"id": 534,
					"name": "memory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Memory in megabytes which will be allocated for the new actor run.\nIf not provided, the run uses memory of the default actor run configuration."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 137,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ActorStartOptions.memory"
					}
				},
				{
					"id": 535,
					"name": "timeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Timeout for the actor run in seconds. Zero value means there is no timeout.\nIf not provided, the run uses timeout of the default actor run configuration."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 142,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ActorStartOptions.timeout"
					}
				},
				{
					"id": 531,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "User API token that is used to run the actor. By default, it is taken from the "
							},
							{
								"kind": "code",
								"text": "`APIFY_TOKEN`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1443,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1443"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 536,
					"name": "waitForFinish",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum time to wait for the actor run to finish, in seconds.\nIf the limit is reached, the returned promise is resolved to a run object that will have\nstatus "
							},
							{
								"kind": "code",
								"text": "`READY`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`RUNNING`"
							},
							{
								"kind": "text",
								"text": " and it will not contain the actor run output.\nIf "
							},
							{
								"kind": "code",
								"text": "`waitSecs`"
							},
							{
								"kind": "text",
								"text": " is null or undefined, the function waits for the actor to finish (default behavior)."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 149,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ActorStartOptions.waitForFinish"
					}
				},
				{
					"id": 537,
					"name": "webhooks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies optional webhooks associated with the actor run, which can be used\nto receive a notification e.g. when the actor finished or failed, see\n[ad hook webhooks documentation](https://docs.apify.com/webhooks/ad-hoc-webhooks) for detailed description."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 155,
							"character": 4
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "WebhookUpdateData",
								"qualifiedName": "WebhookUpdateData",
								"package": "apify-client"
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ActorStartOptions.webhooks"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						532,
						533,
						534,
						535,
						531,
						536,
						537
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1439,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1439"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ActorStartOptions",
					"qualifiedName": "ActorStartOptions",
					"package": "apify-client"
				}
			]
		},
		{
			"id": 538,
			"name": "CallTaskOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 541,
					"name": "build",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tag or number of the actor build to run (e.g. "
							},
							{
								"kind": "code",
								"text": "`beta`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`1.2.345`"
							},
							{
								"kind": "text",
								"text": ").\nIf not provided, the run uses build tag or number from the default actor run configuration (typically "
							},
							{
								"kind": "code",
								"text": "`latest`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 125,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TaskStartOptions.build"
					}
				},
				{
					"id": 542,
					"name": "memory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Memory in megabytes which will be allocated for the new actor run.\nIf not provided, the run uses memory of the default actor run configuration."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 137,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TaskStartOptions.memory"
					}
				},
				{
					"id": 540,
					"name": "timeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Timeout for the actor run in seconds. Zero value means there is no timeout.\nIf not provided, the run uses timeout of the default actor run configuration."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 142,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TaskStartOptions.timeout"
					}
				},
				{
					"id": 539,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "User API token that is used to run the actor. By default, it is taken from the "
							},
							{
								"kind": "code",
								"text": "`APIFY_TOKEN`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1450,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1450"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 543,
					"name": "waitForFinish",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum time to wait for the actor run to finish, in seconds.\nIf the limit is reached, the returned promise is resolved to a run object that will have\nstatus "
							},
							{
								"kind": "code",
								"text": "`READY`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`RUNNING`"
							},
							{
								"kind": "text",
								"text": " and it will not contain the actor run output.\nIf "
							},
							{
								"kind": "code",
								"text": "`waitSecs`"
							},
							{
								"kind": "text",
								"text": " is null or undefined, the function waits for the actor to finish (default behavior)."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 149,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TaskStartOptions.waitForFinish"
					}
				},
				{
					"id": 544,
					"name": "webhooks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies optional webhooks associated with the actor run, which can be used\nto receive a notification e.g. when the actor finished or failed, see\n[ad hook webhooks documentation](https://docs.apify.com/webhooks/ad-hoc-webhooks) for detailed description."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
							"line": 155,
							"character": 4
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "WebhookUpdateData",
								"qualifiedName": "WebhookUpdateData",
								"package": "apify-client"
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "TaskStartOptions.webhooks"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						541,
						542,
						540,
						539,
						543,
						544
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1446,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1446"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "TaskStartOptions",
					"qualifiedName": "TaskStartOptions",
					"package": "apify-client"
				}
			]
		},
		{
			"id": 587,
			"name": "ConfigurationOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 589,
					"name": "actorEventsWsUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 591,
					"name": "actorId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 9,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 592,
					"name": "actorRunId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 593,
					"name": "actorTaskId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 11,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 594,
					"name": "apiBaseUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 611,
					"name": "availableMemoryRatio",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the ratio, defining the amount of system memory that could be used by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@apilink",
								"text": "AutoscaledPool"
							},
							{
								"kind": "text",
								"text": ".\nWhen the memory usage is more than the provided ratio, the memory is considered overloaded.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_AVAILABLE_MEMORY_RATIO`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "0.25"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.availableMemoryRatio"
					}
				},
				{
					"id": 618,
					"name": "chromeExecutablePath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a path to Chrome executable.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_CHROME_EXECUTABLE_PATH`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 112,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.chromeExecutablePath"
					}
				},
				{
					"id": 595,
					"name": "containerPort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 596,
					"name": "containerUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 619,
					"name": "defaultBrowserPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a path to default browser executable.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_DEFAULT_BROWSER_PATH`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 118,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.defaultBrowserPath"
					}
				},
				{
					"id": 606,
					"name": "defaultDatasetId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default dataset id.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_DEFAULT_DATASET_ID`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "'default'"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.defaultDatasetId"
					}
				},
				{
					"id": 608,
					"name": "defaultKeyValueStoreId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default key-value store id.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_DEFAULT_KEY_VALUE_STORE_ID`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "'default'"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.defaultKeyValueStoreId"
					}
				},
				{
					"id": 609,
					"name": "defaultRequestQueueId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default request queue id.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_DEFAULT_REQUEST_QUEUE_ID`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "'default'"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.defaultRequestQueueId"
					}
				},
				{
					"id": 620,
					"name": "disableBrowserSandbox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines whether to disable browser sandbox by adding "
							},
							{
								"kind": "code",
								"text": "`--no-sandbox`"
							},
							{
								"kind": "text",
								"text": " flag to "
							},
							{
								"kind": "code",
								"text": "`launchOptions`"
							},
							{
								"kind": "text",
								"text": ".\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_DISABLE_BROWSER_SANDBOX`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 124,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.disableBrowserSandbox"
					}
				},
				{
					"id": 604,
					"name": "eventManager",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the Event Manager to be used."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "EventManager"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "EventManager",
						"qualifiedName": "EventManager",
						"package": "@crawlee/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.eventManager"
					}
				},
				{
					"id": 616,
					"name": "headless",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines whether web browsers launched by Crawlee will run in the headless mode.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_HEADLESS`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "true"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 99,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.headless"
					}
				},
				{
					"id": 615,
					"name": "inputKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the default input key, i.e. the key that is used to get the crawler input value\nfrom the default "
							},
							{
								"kind": "inline-tag",
								"tag": "@apilink",
								"text": "KeyValueStore"
							},
							{
								"kind": "text",
								"text": " associated with the current crawler run.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_INPUT_KEY`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "'INPUT'"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 92,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.inputKey"
					}
				},
				{
					"id": 601,
					"name": "isAtHome",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 621,
					"name": "logLevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the log level to the given value.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_LOG_LEVEL`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "'INFO'"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 131,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "LogLevel",
								"qualifiedName": "LogLevel",
								"package": "@apify/log"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 622,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
											"line": 556,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 623,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns a string representation of an object."
													}
												]
											},
											"parameters": [
												{
													"id": 624,
													"name": "radix",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Specifies a radix for converting numeric values to strings. This value is only used for numbers."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 625,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
											"line": 562,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 626,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns a string representing a number in fixed-point notation."
													}
												]
											},
											"parameters": [
												{
													"id": 627,
													"name": "fractionDigits",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 628,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
											"line": 568,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 629,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns a string containing a number represented in exponential notation."
													}
												]
											},
											"parameters": [
												{
													"id": 630,
													"name": "fractionDigits",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 631,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
											"line": 574,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 632,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits."
													}
												]
											},
											"parameters": [
												{
													"id": 633,
													"name": "precision",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Number of significant digits. Must be in the range 1 - 21, inclusive."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 634,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
											"line": 577,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 635,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns the primitive value of the specified object."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 636,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
											"line": 4478,
											"character": 4
										},
										{
											"fileName": "website/node_modules/typescript/lib/lib.es2020.number.d.ts",
											"line": 29,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 637,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Converts a number to a string by using the current or specified locale."
													}
												]
											},
											"parameters": [
												{
													"id": 638,
													"name": "locales",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used."
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												},
												{
													"id": 639,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An object that contains one or more properties that specify comparison options."
															}
														]
													},
													"type": {
														"type": "reference",
														"name": "NumberFormatOptions",
														"qualifiedName": "Intl.NumberFormatOptions",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 640,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Converts a number to a string by using the current or specified locale."
													}
												]
											},
											"parameters": [
												{
													"id": 641,
													"name": "locales",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used."
															}
														]
													},
													"type": {
														"type": "reference",
														"name": "LocalesArgument",
														"qualifiedName": "Intl.LocalesArgument",
														"package": "typescript"
													}
												},
												{
													"id": 642,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An object that contains one or more properties that specify comparison options."
															}
														]
													},
													"type": {
														"type": "reference",
														"name": "NumberFormatOptions",
														"qualifiedName": "Intl.NumberFormatOptions",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.logLevel"
					}
				},
				{
					"id": 610,
					"name": "maxUsedCpuRatio",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the ratio, defining the maximum CPU usage.\nWhen the CPU usage is higher than the provided ratio, the CPU is considered overloaded."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "0.95"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.maxUsedCpuRatio"
					}
				},
				{
					"id": 612,
					"name": "memoryMbytes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the amount of system memory in megabytes to be used by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@apilink",
								"text": "AutoscaledPool"
							},
							{
								"kind": "text",
								"text": ".\nBy default, the maximum memory is set to one quarter of total system memory.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_MEMORY_MBYTES`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.memoryMbytes"
					}
				},
				{
					"id": 588,
					"name": "metamorphAfterSleepMillis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 6,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L6"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 613,
					"name": "persistStateIntervalMillis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the interval of emitting the "
							},
							{
								"kind": "code",
								"text": "`persistState`"
							},
							{
								"kind": "text",
								"text": " event.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_PERSIST_STATE_INTERVAL_MILLIS`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "60_000"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.persistStateIntervalMillis"
					}
				},
				{
					"id": 597,
					"name": "proxyHostname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 598,
					"name": "proxyPassword",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 599,
					"name": "proxyPort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 600,
					"name": "proxyStatusUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 607,
					"name": "purgeOnStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines whether to purge the default storage folders before starting the crawler run.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_PURGE_ON_START`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "true"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.purgeOnStart"
					}
				},
				{
					"id": 603,
					"name": "storageClient",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines storage client to be used."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "MemoryStorage"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "StorageClient",
						"qualifiedName": "StorageClient",
						"package": "@crawlee/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.storageClient"
					}
				},
				{
					"id": 605,
					"name": "storageClientOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Could be used to adjust the storage client behavior\ne.g. "
							},
							{
								"kind": "inline-tag",
								"tag": "@apilink",
								"text": "MemoryStorageOptions"
							},
							{
								"kind": "text",
								"text": " could be used to adjust the "
							},
							{
								"kind": "inline-tag",
								"tag": "@apilink",
								"text": "MemoryStorage"
							},
							{
								"kind": "text",
								"text": " behavior."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Dictionary",
						"qualifiedName": "Dictionary",
						"package": "@crawlee/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.storageClientOptions"
					}
				},
				{
					"id": 614,
					"name": "systemInfoIntervalMillis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the interval of emitting the "
							},
							{
								"kind": "code",
								"text": "`systemInfo`"
							},
							{
								"kind": "text",
								"text": " event."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "60_000"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 84,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.systemInfoIntervalMillis"
					}
				},
				{
					"id": 590,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 602,
					"name": "userId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/configuration.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 617,
					"name": "xvfb",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines whether to run X virtual framebuffer on the web browsers launched by Crawlee.\n\nAlternative to "
							},
							{
								"kind": "code",
								"text": "`CRAWLEE_XVFB`"
							},
							{
								"kind": "text",
								"text": " environment variable."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/configuration.d.ts",
							"line": 106,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreConfigurationOptions.xvfb"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						589,
						591,
						592,
						593,
						594,
						611,
						618,
						595,
						596,
						619,
						606,
						608,
						609,
						620,
						604,
						616,
						615,
						601,
						621,
						610,
						612,
						588,
						613,
						597,
						598,
						599,
						600,
						607,
						603,
						605,
						614,
						590,
						602,
						617
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/configuration.ts",
					"line": 5,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/configuration.ts#L5"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ConfigurationOptions",
					"qualifiedName": "ConfigurationOptions",
					"package": "@crawlee/core"
				}
			]
		},
		{
			"id": 67,
			"name": "DatasetConsumer",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
					"line": 291,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 68,
					"name": "Data",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					}
				}
			],
			"signatures": [
				{
					"id": 69,
					"name": "DatasetConsumer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"parameters": [
						{
							"id": 70,
							"name": "item",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Current "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " entry being processed."
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 68,
								"name": "Data",
								"qualifiedName": "DatasetConsumer.Data",
								"package": "@crawlee/core"
							}
						},
						{
							"id": 71,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Position of current "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " entry."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Awaitable",
						"qualifiedName": "Awaitable",
						"package": "@crawlee/core"
					}
				}
			]
		},
		{
			"id": 89,
			"name": "DatasetContent",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 91,
					"name": "count",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Count of dataset entries returned in this set."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 329,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 94,
					"name": "desc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Should the results be in descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 335,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 95,
					"name": "items",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Dataset entries based on chosen format parameter."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 337,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 96,
							"name": "Data",
							"qualifiedName": "DatasetContent.Data",
							"package": "@crawlee/core"
						}
					}
				},
				{
					"id": 93,
					"name": "limit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of dataset entries requested."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 333,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 92,
					"name": "offset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Position of the first returned entry in the dataset."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 331,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 90,
					"name": "total",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Total count of entries in the dataset."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 327,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						91,
						94,
						95,
						93,
						92,
						90
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
					"line": 325,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 96,
					"name": "Data",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					}
				}
			]
		},
		{
			"id": 48,
			"name": "DatasetDataOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 54,
					"name": "clean",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " then the function returns only non-empty items and skips hidden fields (i.e. fields starting with "
							},
							{
								"kind": "code",
								"text": "`#`"
							},
							{
								"kind": "text",
								"text": " character).\nNote that the "
							},
							{
								"kind": "code",
								"text": "`clean`"
							},
							{
								"kind": "text",
								"text": " parameter is a shortcut for "
							},
							{
								"kind": "code",
								"text": "`skipHidden: true`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`skipEmpty: true`"
							},
							{
								"kind": "text",
								"text": " options."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 51,
					"name": "desc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " then the objects are sorted by "
							},
							{
								"kind": "code",
								"text": "`createdAt`"
							},
							{
								"kind": "text",
								"text": " in descending order.\nOtherwise they are sorted in ascending order."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 52,
					"name": "fields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of field names that will be included in the result. If omitted, all fields are included in the results."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 50,
					"name": "limit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of array elements to return."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "250000"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 49,
					"name": "offset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of array elements that should be skipped at the start."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 56,
					"name": "skipEmpty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " then the function doesn't return empty items.\nNote that in this case the returned number of items might be lower than limit parameter and pagination must be done using the "
							},
							{
								"kind": "code",
								"text": "`limit`"
							},
							{
								"kind": "text",
								"text": " value."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 55,
					"name": "skipHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " then the function doesn't return hidden fields (fields starting with \"#\" character)."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 60,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 53,
					"name": "unwind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies a name of the field in the result objects that will be used to unwind the resulting objects.\nBy default, the results are returned as they are."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						54,
						51,
						52,
						50,
						49,
						56,
						55,
						53
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
					"line": 24,
					"character": 17
				}
			]
		},
		{
			"id": 57,
			"name": "DatasetIteratorOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 64,
					"name": "desc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " then the objects are sorted by "
							},
							{
								"kind": "code",
								"text": "`createdAt`"
							},
							{
								"kind": "text",
								"text": " in descending order.\nOtherwise they are sorted in ascending order."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.desc"
					}
				},
				{
					"id": 65,
					"name": "fields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of field names that will be included in the result. If omitted, all fields are included in the results."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.fields"
					}
				},
				{
					"id": 66,
					"name": "unwind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies a name of the field in the result objects that will be used to unwind the resulting objects.\nBy default, the results are returned as they are."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.unwind"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						64,
						65,
						66
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
					"line": 68,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 48,
							"name": "DatasetDataOptions",
							"qualifiedName": "DatasetDataOptions",
							"package": "@crawlee/core"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "offset"
								},
								{
									"type": "literal",
									"value": "limit"
								},
								{
									"type": "literal",
									"value": "clean"
								},
								{
									"type": "literal",
									"value": "skipHidden"
								},
								{
									"type": "literal",
									"value": "skipEmpty"
								}
							]
						}
					],
					"name": "Omit",
					"qualifiedName": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 72,
			"name": "DatasetMapper",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
					"line": 301,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 73,
					"name": "Data",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					}
				},
				{
					"id": 74,
					"name": "R",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					}
				}
			],
			"signatures": [
				{
					"id": 75,
					"name": "DatasetMapper",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "User-function used in the "
							},
							{
								"kind": "code",
								"text": "`Dataset.map()`"
							},
							{
								"kind": "text",
								"text": " API."
							}
						]
					},
					"parameters": [
						{
							"id": 76,
							"name": "item",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Current "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " entry being processed."
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 73,
								"name": "Data",
								"qualifiedName": "DatasetMapper.Data",
								"package": "@crawlee/core"
							}
						},
						{
							"id": 77,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Position of current "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " entry."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 74,
								"name": "R",
								"qualifiedName": "DatasetMapper.R",
								"package": "@crawlee/core"
							}
						],
						"name": "Awaitable",
						"qualifiedName": "Awaitable",
						"package": "@crawlee/core"
					}
				}
			]
		},
		{
			"id": 85,
			"name": "DatasetOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 88,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 323,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "StorageClient",
						"qualifiedName": "StorageClient",
						"package": "@crawlee/types"
					}
				},
				{
					"id": 86,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 321,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 87,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
							"line": 322,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						88,
						86,
						87
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
					"line": 320,
					"character": 17
				}
			]
		},
		{
			"id": 78,
			"name": "DatasetReducer",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
					"line": 312,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 79,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					}
				},
				{
					"id": 80,
					"name": "Data",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					}
				}
			],
			"signatures": [
				{
					"id": 81,
					"name": "DatasetReducer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"parameters": [
						{
							"id": 82,
							"name": "memo",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Previous state of the reduction."
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 79,
								"name": "T",
								"qualifiedName": "DatasetReducer.T",
								"package": "@crawlee/core"
							}
						},
						{
							"id": 83,
							"name": "item",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Current "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " entry being processed."
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 80,
								"name": "Data",
								"qualifiedName": "DatasetReducer.Data",
								"package": "@crawlee/core"
							}
						},
						{
							"id": 84,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Position of current "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "Dataset"
									},
									{
										"kind": "text",
										"text": " entry."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 79,
								"name": "T",
								"qualifiedName": "DatasetReducer.T",
								"package": "@crawlee/core"
							}
						],
						"name": "Awaitable",
						"qualifiedName": "Awaitable",
						"package": "@crawlee/core"
					}
				}
			]
		},
		{
			"id": 557,
			"name": "ExitOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 561,
					"name": "exit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Call "
							},
							{
								"kind": "code",
								"text": "`process.exit()`"
							},
							{
								"kind": "text",
								"text": "? Defaults to true"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1521,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1521"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 560,
					"name": "exitCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Exit code, defaults to 0"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1519,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1519"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 558,
					"name": "statusMessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Exit with given status message"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1512,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1512"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 559,
					"name": "timeoutSecs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Amount of time, in seconds, to wait for all event handlers to finish before exiting the process."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "30"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1517,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1517"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						561,
						560,
						558,
						559
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1510,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1510"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 509,
					"name": "MainOptions"
				}
			]
		},
		{
			"id": 507,
			"name": "InitOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 508,
					"name": "storage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1371,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1371"
						}
					],
					"type": {
						"type": "reference",
						"name": "StorageClient",
						"qualifiedName": "StorageClient",
						"package": "@crawlee/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						508
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1370,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1370"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 509,
					"name": "MainOptions"
				}
			]
		},
		{
			"id": 190,
			"name": "KeyConsumer",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
					"line": 293,
					"character": 17
				}
			],
			"signatures": [
				{
					"id": 191,
					"name": "KeyConsumer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExternal": true
					},
					"parameters": [
						{
							"id": 192,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Current "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore"
									},
									{
										"kind": "text",
										"text": " key being processed."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 193,
							"name": "index",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Position of the current key in "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 194,
							"name": "info",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Information about the current "
									},
									{
										"kind": "inline-tag",
										"tag": "@apilink",
										"text": "KeyValueStore"
									},
									{
										"kind": "text",
										"text": " entry."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 195,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 196,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Size of the value associated with the current key in bytes."
													}
												]
											},
											"sources": [
												{
													"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
													"line": 301,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												196
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
											"line": 300,
											"character": 39
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Awaitable",
						"qualifiedName": "Awaitable",
						"package": "@crawlee/core"
					}
				}
			]
		},
		{
			"id": 203,
			"name": "KeyValueStoreIteratorOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 204,
					"name": "exclusiveStartKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "All keys up to this one (including) are skipped from the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 319,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						204
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
					"line": 315,
					"character": 17
				}
			]
		},
		{
			"id": 197,
			"name": "KeyValueStoreOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 200,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 307,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "StorageClient",
						"qualifiedName": "StorageClient",
						"package": "@crawlee/types"
					}
				},
				{
					"id": 198,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 305,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 199,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 306,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						200,
						198,
						199
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
					"line": 304,
					"character": 17
				}
			]
		},
		{
			"id": 509,
			"name": "MainOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 513,
					"name": "exit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Call "
							},
							{
								"kind": "code",
								"text": "`process.exit()`"
							},
							{
								"kind": "text",
								"text": "? Defaults to true"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1521,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1521"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 561,
						"name": "ExitOptions.exit"
					}
				},
				{
					"id": 512,
					"name": "exitCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Exit code, defaults to 0"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1519,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1519"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 560,
						"name": "ExitOptions.exitCode"
					}
				},
				{
					"id": 510,
					"name": "statusMessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Exit with given status message"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1512,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1512"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 558,
						"name": "ExitOptions.statusMessage"
					}
				},
				{
					"id": 514,
					"name": "storage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1371,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1371"
						}
					],
					"type": {
						"type": "reference",
						"name": "StorageClient",
						"qualifiedName": "StorageClient",
						"package": "@crawlee/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 508,
						"name": "InitOptions.storage"
					}
				},
				{
					"id": 511,
					"name": "timeoutSecs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Amount of time, in seconds, to wait for all event handlers to finish before exiting the process."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "30"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1517,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1517"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 559,
						"name": "ExitOptions.timeoutSecs"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						513,
						512,
						510,
						514,
						511
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1374,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1374"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 557,
					"name": "ExitOptions"
				},
				{
					"type": "reference",
					"id": 507,
					"name": "InitOptions"
				}
			]
		},
		{
			"id": 553,
			"name": "MetamorphOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 555,
					"name": "build",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tag or number of the target actor build to metamorph into (e.g. "
							},
							{
								"kind": "code",
								"text": "`beta`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`1.2.345`"
							},
							{
								"kind": "text",
								"text": ").\nIf not provided, the run uses build tag or number from the default actor run configuration (typically "
							},
							{
								"kind": "code",
								"text": "`latest`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1504,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1504"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 554,
					"name": "contentType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Content type for the "
							},
							{
								"kind": "code",
								"text": "`input`"
							},
							{
								"kind": "text",
								"text": ". If not specified,\n"
							},
							{
								"kind": "code",
								"text": "`input`"
							},
							{
								"kind": "text",
								"text": " is expected to be an object that will be stringified to JSON and content type set to\n"
							},
							{
								"kind": "code",
								"text": "`application/json; charset=utf-8`"
							},
							{
								"kind": "text",
								"text": ". If "
							},
							{
								"kind": "code",
								"text": "`options.contentType`"
							},
							{
								"kind": "text",
								"text": " is specified, then "
							},
							{
								"kind": "code",
								"text": "`input`"
							},
							{
								"kind": "text",
								"text": " must be a\n"
							},
							{
								"kind": "code",
								"text": "`String`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`Buffer`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1498,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1498"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						555,
						554
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1491,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1491"
				}
			]
		},
		{
			"id": 562,
			"name": "OpenStorageOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 563,
					"name": "forceCloud",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " then the cloud storage is used even if the "
							},
							{
								"kind": "code",
								"text": "`APIFY_LOCAL_STORAGE_DIR`"
							},
							{
								"kind": "text",
								"text": "\nenvironment variable is set. This way it is possible to combine local and cloud storage."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1530,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1530"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						563
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1524,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1524"
				}
			]
		},
		{
			"id": 778,
			"name": "ProxyConfigurationOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 783,
					"name": "apifyProxyCountry",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Same option as "
							},
							{
								"kind": "code",
								"text": "`countryCode`"
							},
							{
								"kind": "text",
								"text": " which can be used to\nconfigurate the proxy by UI input schema. You should use the "
							},
							{
								"kind": "code",
								"text": "`countryCode`"
							},
							{
								"kind": "text",
								"text": " option in your crawler code."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 56,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L56"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 782,
					"name": "apifyProxyGroups",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Same option as "
							},
							{
								"kind": "code",
								"text": "`groups`"
							},
							{
								"kind": "text",
								"text": " which can be used to\nconfigurate the proxy by UI input schema. You should use the "
							},
							{
								"kind": "code",
								"text": "`groups`"
							},
							{
								"kind": "text",
								"text": " option in your crawler code."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L50"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 781,
					"name": "countryCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set and relevant proxies are available in your Apify account, all proxied requests will\nuse IP addresses that are geolocated to the specified country. For example "
							},
							{
								"kind": "code",
								"text": "`GB`"
							},
							{
								"kind": "text",
								"text": " for IPs\nfrom Great Britain. Note that online services often have their own rules for handling\ngeolocation and thus the country selection is a best attempt at geolocation, rather than\na guaranteed hit. This parameter is optional, by default, each proxied request is assigned\nan IP address from a random country. The country code needs to be a two letter ISO country code. See the\n[full list of available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements).\nThis parameter is optional, by default, the proxy uses all available proxy servers from all countries.\non the Apify cloud, or when using the [Apify CLI](https://github.com/apify/apify-cli)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L44"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 780,
					"name": "groups",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of proxy groups to be used by the [Apify Proxy](https://docs.apify.com/proxy).\nIf not provided, the proxy will select the groups automatically."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L31"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 785,
					"name": "newUrlFunction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom function that allows you to generate the new proxy URL dynamically. It gets the "
							},
							{
								"kind": "code",
								"text": "`sessionId`"
							},
							{
								"kind": "text",
								"text": " as a parameter\nand should always return stringified proxy URL. Can be asynchronous.\nThis function is used to generate the URL when "
							},
							{
								"kind": "inline-tag",
								"tag": "@apilink",
								"text": "ProxyConfiguration.newUrl"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "inline-tag",
								"tag": "@apilink",
								"text": "ProxyConfiguration.newProxyInfo"
							},
							{
								"kind": "text",
								"text": " is called."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "ProxyConfigurationFunction",
						"qualifiedName": "ProxyConfigurationFunction",
						"package": "@crawlee/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreProxyConfigurationOptions.newUrlFunction"
					}
				},
				{
					"id": 779,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "User's password for the proxy. By default, it is taken from the "
							},
							{
								"kind": "code",
								"text": "`APIFY_PROXY_PASSWORD`"
							},
							{
								"kind": "text",
								"text": "\nenvironment variable, which is automatically set by the system when running the actors."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 784,
					"name": "proxyUrls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of custom proxy URLs to be rotated.\nCustom proxies are not compatible with Apify Proxy and an attempt to use both\nconfiguration options will cause an error to be thrown on initialize."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreProxyConfigurationOptions.proxyUrls"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						783,
						782,
						781,
						780,
						785,
						779,
						784
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/proxy_configuration.ts",
					"line": 20,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L20"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ProxyConfigurationOptions",
					"qualifiedName": "ProxyConfigurationOptions",
					"package": "@crawlee/core"
				}
			]
		},
		{
			"id": 786,
			"name": "ProxyInfo",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main purpose of the ProxyInfo object is to provide information\nabout the current proxy connection used by the crawler for the request.\nOutside of crawlers, you can get this object by calling "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "ProxyConfiguration.newProxyInfo"
					},
					{
						"kind": "text",
						"text": ".\n\n**Example usage:**\n\n"
					},
					{
						"kind": "code",
						"text": "```javascript\n\nconst proxyConfiguration = await Actor.createProxyConfiguration({\n  groups: ['GROUP1', 'GROUP2'] // List of Apify Proxy groups\n  countryCode: 'US',\n});\n\n// Getting proxyInfo object by calling class method directly\nconst proxyInfo = proxyConfiguration.newProxyInfo();\n\n// In crawler\nconst crawler = new CheerioCrawler({\n  // ...\n  proxyConfiguration,\n  requestHandler({ proxyInfo }) {\n      // Getting used proxy URL\n      const proxyUrl = proxyInfo.url;\n\n      // Getting ID of used Session\n      const sessionIdentifier = proxyInfo.sessionId;\n  }\n})\n\n```"
					}
				]
			},
			"children": [
				{
					"id": 788,
					"name": "countryCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set and relevant proxies are available in your Apify account, all proxied requests will\nuse IP addresses that are geolocated to the specified country. For example "
							},
							{
								"kind": "code",
								"text": "`GB`"
							},
							{
								"kind": "text",
								"text": " for IPs\nfrom Great Britain. Note that online services often have their own rules for handling\ngeolocation and thus the country selection is a best attempt at geolocation, rather than\na guaranteed hit. This parameter is optional, by default, each proxied request is assigned\nan IP address from a random country. The country code needs to be a two letter ISO country code. See the\n[full list of available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements).\nThis parameter is optional, by default, the proxy uses all available proxy servers from all countries."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 108,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L108"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 787,
					"name": "groups",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of proxy groups to be used by the [Apify Proxy](https://docs.apify.com/proxy).\nIf not provided, the proxy will select the groups automatically."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 96,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L96"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 793,
					"name": "hostname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hostname of your proxy."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreProxyInfo.hostname"
					}
				},
				{
					"id": 789,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "User's password for the proxy. By default, it is taken from the "
							},
							{
								"kind": "code",
								"text": "`APIFY_PROXY_PASSWORD`"
							},
							{
								"kind": "text",
								"text": "\nenvironment variable, which is automatically set by the system when running the actors\non the Apify cloud, or when using the [Apify CLI](https://github.com/apify/apify-cli)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/proxy_configuration.ts",
							"line": 115,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L115"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "CoreProxyInfo.password"
					}
				},
				{
					"id": 794,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Proxy port."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreProxyInfo.port"
					}
				},
				{
					"id": 790,
					"name": "sessionId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The identifier of used "
							},
							{
								"kind": "inline-tag",
								"tag": "@apilink",
								"text": "Session"
							},
							{
								"kind": "text",
								"text": ", if used."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreProxyInfo.sessionId"
					}
				},
				{
					"id": 791,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the proxy."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreProxyInfo.url"
					}
				},
				{
					"id": 792,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Username for the proxy."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
							"line": 60,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "CoreProxyInfo.username"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						788,
						787,
						793,
						789,
						794,
						790,
						791,
						792
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/proxy_configuration.ts",
					"line": 91,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/proxy_configuration.ts#L91"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ProxyInfo",
					"qualifiedName": "ProxyInfo",
					"package": "@crawlee/core"
				}
			]
		},
		{
			"id": 176,
			"name": "QueueOperationInfo",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A helper class that is used to report results from various\n"
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "RequestQueue"
					},
					{
						"kind": "text",
						"text": " functions as well as "
					},
					{
						"kind": "inline-tag",
						"tag": "@apilink",
						"text": "enqueueLinks"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 179,
					"name": "requestId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the added request"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 180,
					"name": "uniqueKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 178,
					"name": "wasAlreadyHandled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if request was already marked as handled."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 177,
					"name": "wasAlreadyPresent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if request was already present in the queue."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						179,
						180,
						178,
						177
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
					"line": 45,
					"character": 17
				}
			]
		},
		{
			"id": 187,
			"name": "QueueOperationInfoOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 188,
					"name": "requestId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 315,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 189,
					"name": "wasAlreadyHandled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 316,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						188,
						189
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
					"line": 314,
					"character": 17
				}
			]
		},
		{
			"id": 201,
			"name": "RecordOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 202,
					"name": "contentType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies a custom MIME content type of the record."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
							"line": 313,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						202
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
					"line": 309,
					"character": 17
				}
			]
		},
		{
			"id": 181,
			"name": "RequestQueueOperationOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 182,
					"name": "forefront",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ":\n  - while adding the request to the queue: the request will be added to the foremost position in the queue.\n  - while reclaiming the request: the request will be placed to the beginning of the queue, so that it's returned\n  in the next call to "
							},
							{
								"kind": "inline-tag",
								"tag": "@apilink",
								"text": "RequestQueue.fetchNextRequest"
							},
							{
								"kind": "text",
								"text": ".\nBy default, it's put to the end of the queue."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "false"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						182
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
					"line": 54,
					"character": 17
				}
			]
		},
		{
			"id": 183,
			"name": "RequestQueueOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 186,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 312,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "StorageClient",
						"qualifiedName": "StorageClient",
						"package": "@crawlee/types"
					}
				},
				{
					"id": 184,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 310,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 185,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
							"line": 311,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						186,
						184,
						185
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
					"line": 309,
					"character": 17
				}
			]
		},
		{
			"id": 548,
			"name": "WebhookOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 549,
					"name": "eventTypes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Array of event types, which you can set for actor run, see\nthe [actor run events](https://docs.apify.com/webhooks/events#actor-run) in the Apify doc."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1465,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1465"
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "WebhookEventType",
								"qualifiedName": "WebhookEventType",
								"package": "apify-client"
							}
						}
					}
				},
				{
					"id": 552,
					"name": "idempotencyKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Idempotency key enables you to ensure that a webhook will not be added multiple times in case of\nan actor restart or other situation that would cause the "
							},
							{
								"kind": "code",
								"text": "`addWebhook()`"
							},
							{
								"kind": "text",
								"text": " function to be called again.\nWe suggest using the actor run ID as the idempotency key. You can get the run ID by calling\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@apilink",
								"text": "Actor.getEnv"
							},
							{
								"kind": "text",
								"text": " function."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1488,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1488"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 551,
					"name": "payloadTemplate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payload template is a JSON-like string that describes the structure of the webhook POST request payload.\nIt uses JSON syntax, extended with a double curly braces syntax for injecting variables "
							},
							{
								"kind": "code",
								"text": "`{{variable}}`"
							},
							{
								"kind": "text",
								"text": ".\nThose variables are resolved at the time of the webhook's dispatch, and a list of available variables with their descriptions\nis available in the [Apify webhook documentation](https://docs.apify.com/webhooks).\nIf "
							},
							{
								"kind": "code",
								"text": "`payloadTemplate`"
							},
							{
								"kind": "text",
								"text": " is omitted, the default payload template is used\n([view docs](https://docs.apify.com/webhooks/actions#payload-template))."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1480,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1480"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 550,
					"name": "requestUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "URL which will be requested using HTTP POST request, when actor run will reach the set event type."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1470,
							"character": 4,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1470"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						549,
						552,
						551,
						550
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1460,
					"character": 17,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1460"
				}
			]
		},
		{
			"id": 526,
			"name": "UserFunc",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/apify/src/actor.ts",
					"line": 1437,
					"character": 12,
					"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1437"
				}
			],
			"typeParameters": [
				{
					"id": 529,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 527,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/apify/src/actor.ts",
							"line": 1437,
							"character": 36,
							"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/actor.ts#L1437"
						}
					],
					"signatures": [
						{
							"id": 528,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 529,
										"name": "T"
									}
								],
								"name": "Awaitable",
								"qualifiedName": "Awaitable",
								"package": "@crawlee/types"
							}
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				279,
				205,
				643,
				1,
				899,
				852,
				795,
				97
			],
			"categories": [
				{
					"title": "CATEGORY",
					"children": [
						279,
						205,
						643,
						899,
						852
					]
				},
				{
					"title": "Result Stores",
					"children": [
						1
					]
				},
				{
					"title": "Scaling",
					"children": [
						795
					]
				},
				{
					"title": "Sources",
					"children": [
						97
					]
				}
			]
		},
		{
			"title": "Interfaces",
			"children": [
				545,
				564,
				269,
				515,
				530,
				538,
				587,
				67,
				89,
				48,
				57,
				72,
				85,
				78,
				557,
				507,
				190,
				203,
				197,
				509,
				553,
				562,
				778,
				786,
				176,
				187,
				201,
				181,
				183,
				548
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				526
			]
		}
	],
	"sources": [
		{
			"fileName": "packages/apify/src/index.ts",
			"line": 1,
			"character": 0,
			"url": "https://github.com/apify/apify-sdk-js/blob/6c0563ac/packages/apify/src/index.ts#L1"
		}
	]
}