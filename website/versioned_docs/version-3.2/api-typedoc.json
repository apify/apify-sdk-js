{
    "id": 0,
    "name": "apify",
    "kind": 1,
    "kindString": "Project",
    "flags": {},
    "originalName": "",
    "children": [
        {
            "id": 310,
            "name": "LogLevel",
            "kind": 8,
            "kindString": "Enumeration",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 316,
                    "name": "DEBUG",
                    "kind": 16,
                    "kindString": "Enumeration Member",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 9,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "literal",
                        "value": 5
                    }
                },
                {
                    "id": 312,
                    "name": "ERROR",
                    "kind": 16,
                    "kindString": "Enumeration Member",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 5,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "literal",
                        "value": 1
                    }
                },
                {
                    "id": 315,
                    "name": "INFO",
                    "kind": 16,
                    "kindString": "Enumeration Member",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 8,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "literal",
                        "value": 4
                    }
                },
                {
                    "id": 311,
                    "name": "OFF",
                    "kind": 16,
                    "kindString": "Enumeration Member",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 4,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "literal",
                        "value": 0
                    }
                },
                {
                    "id": 317,
                    "name": "PERF",
                    "kind": 16,
                    "kindString": "Enumeration Member",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 10,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "literal",
                        "value": 6
                    }
                },
                {
                    "id": 313,
                    "name": "SOFT_FAIL",
                    "kind": 16,
                    "kindString": "Enumeration Member",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 6,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "literal",
                        "value": 2
                    }
                },
                {
                    "id": 314,
                    "name": "WARNING",
                    "kind": 16,
                    "kindString": "Enumeration Member",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 7,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "literal",
                        "value": 3
                    }
                }
            ],
            "groups": [
                {
                    "title": "Enumeration Members",
                    "children": [316, 312, 315, 311, 317, 313, 314]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                    "line": 3,
                    "character": 13
                }
            ]
        },
        {
            "id": 841,
            "name": "Actor",
            "kind": 128,
            "kindString": "Class",
            "flags": {},
            "comment": {
                "summary": [
                    {
                        "kind": "code",
                        "text": "`Actor`"
                    },
                    {
                        "kind": "text",
                        "text": " class serves as an alternative approach to the static helpers exported from the package. It allows to pass configuration\nthat will be used on the instance methods. Environment variables will have precedence over this configuration.\nSee "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "Configuration"
                    },
                    {
                        "kind": "text",
                        "text": " for details about what can be configured and what are the default values."
                    }
                ]
            },
            "children": [
                {
                    "id": 964,
                    "name": "constructor",
                    "kind": 512,
                    "kindString": "Constructor",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 84,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L84"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 965,
                            "name": "new Actor",
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "flags": {},
                            "typeParameter": [
                                {
                                    "id": 966,
                                    "name": "Data",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 967,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "name": "ConfigurationOptions",
                                        "qualifiedName": "ConfigurationOptions",
                                        "package": "@crawlee/core"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 841,
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 966,
                                        "name": "Data"
                                    }
                                ],
                                "name": "Actor"
                            }
                        }
                    ]
                },
                {
                    "id": 971,
                    "name": "initialized",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Whether the Actor instance was initialized. This is set by calling "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "Actor.init"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 76,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L76"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "defaultValue": "false"
                },
                {
                    "id": 958,
                    "name": "apifyClient",
                    "kind": 262144,
                    "kindString": "Accessor",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1526,
                            "character": 15,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1526"
                        }
                    ],
                    "getSignature": {
                        "id": 959,
                        "name": "apifyClient",
                        "kind": 524288,
                        "kindString": "Get signature",
                        "flags": {},
                        "comment": {
                            "summary": [
                                {
                                    "kind": "text",
                                    "text": "Default "
                                },
                                {
                                    "kind": "inline-tag",
                                    "tag": "@apilink",
                                    "text": "ApifyClient"
                                },
                                {
                                    "kind": "text",
                                    "text": " instance."
                                }
                            ]
                        },
                        "type": {
                            "type": "reference",
                            "id": 757,
                            "name": "ApifyClient",
                            "qualifiedName": "ApifyClient",
                            "package": "apify-client"
                        }
                    }
                },
                {
                    "id": 960,
                    "name": "config",
                    "kind": 262144,
                    "kindString": "Accessor",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1531,
                            "character": 15,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1531"
                        }
                    ],
                    "getSignature": {
                        "id": 961,
                        "name": "config",
                        "kind": 524288,
                        "kindString": "Get signature",
                        "flags": {},
                        "comment": {
                            "summary": [
                                {
                                    "kind": "text",
                                    "text": "Default "
                                },
                                {
                                    "kind": "inline-tag",
                                    "tag": "@apilink",
                                    "text": "Configuration"
                                },
                                {
                                    "kind": "text",
                                    "text": " instance."
                                }
                            ]
                        },
                        "type": {
                            "type": "reference",
                            "id": 1277,
                            "name": "Configuration"
                        }
                    }
                },
                {
                    "id": 1057,
                    "name": "getInputOrThrow",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 760,
                            "character": 10,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L760"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1058,
                            "name": "getInputOrThrow",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Gets the Actor input value just like the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.getInput"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method,\nbut throws if it is not found."
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 1059,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "default": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "Dictionary",
                                                "qualifiedName": "Dictionary",
                                                "package": "@crawlee/types"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "Buffer",
                                                "qualifiedName": "global.Buffer",
                                                "package": "@types/node"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1059,
                                        "name": "T"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 1082,
                    "name": "useState",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 966,
                            "character": 10,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L966"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1083,
                            "name": "useState",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Easily create and manage state values. All state values are automatically persisted.\n\nValues can be modified by simply using the assignment operator."
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 1084,
                                    "name": "State",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 1085,
                                    "name": "name",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the store to use."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1086,
                                    "name": "defaultValue",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "If the store does not yet have a value in it, the value will be initialized with the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`defaultValue`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " you provide."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1084,
                                        "name": "State"
                                    },
                                    "defaultValue": "..."
                                },
                                {
                                    "id": 1087,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "An optional object parameter where a custom "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`keyValueStoreName`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " and "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`config`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " can be passed in."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "UseStateOptions",
                                        "qualifiedName": "UseStateOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1084,
                                        "name": "State"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 894,
                    "name": "abort",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1207,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1207"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 895,
                            "name": "abort",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Aborts given Actor run on the Apify platform using the current user account (determined by the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`APIFY_TOKEN`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " environment variable).\n\nThe result of the function is an "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "ActorRun"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " object that contains details about the Actor run.\n\nFor more information about Actors, read the\n[documentation](https://docs.apify.com/actor).\n\n**Example usage:**\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst run = await Actor.abort(runId);\n```"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 896,
                                    "name": "runId",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 897,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "id": 1167,
                                        "name": "AbortOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1189,
                                        "name": "ActorRun",
                                        "qualifiedName": "ActorRun",
                                        "package": "apify-client"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 906,
                    "name": "addWebhook",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1248,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1248"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 907,
                            "name": "addWebhook",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Creates an ad-hoc webhook for the current Actor run, which lets you receive a notification when the Actor run finished or failed.\nFor more information about Apify Actor webhooks, please see the [documentation](https://docs.apify.com/webhooks).\n\nNote that webhooks are only supported for Actors running on the Apify platform.\nIn local environment, the function will print a warning and have no effect."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "The return value is the Webhook object.\nFor more information, see the [Get webhook](https://apify.com/docs/api/v2#/reference/webhooks/webhook-object/get-webhook) API endpoint."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 908,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "id": 1171,
                                        "name": "WebhookOptions"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "Webhook",
                                                "qualifiedName": "Webhook",
                                                "package": "apify-client"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 879,
                    "name": "call",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1133,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1133"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 880,
                            "name": "call",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Runs an Actor on the Apify platform using the current user account (determined by the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`APIFY_TOKEN`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " environment variable).\n\nThe result of the function is an "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "ActorRun"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " object that contains details about the Actor run.\n\nIf you want to run an Actor task rather than an Actor, please use the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.callTask"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function instead.\n\nFor more information about Actors, read the [documentation](https://docs.apify.com/actor).\n\n**Example usage:**\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst run = await Actor.call('apify/hello-world', { myInput: 123 });\n```"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 881,
                                    "name": "actorId",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Allowed formats are "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`username/actor-name`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`userId/actor-name`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or Actor ID."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 882,
                                    "name": "input",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Input for the Actor. If it is an object, it will be stringified to\n JSON and its content type set to "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`application/json; charset=utf-8`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ".\n Otherwise the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`options.contentType`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " parameter must be provided."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "unknown"
                                    }
                                },
                                {
                                    "id": 883,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1150,
                                        "name": "CallOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1189,
                                        "name": "ActorRun",
                                        "qualifiedName": "ActorRun",
                                        "package": "apify-client"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 884,
                    "name": "callTask",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1162,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1162"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 885,
                            "name": "callTask",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Runs an Actor task on the Apify platform using the current user account (determined by the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`APIFY_TOKEN`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " environment variable).\n\nThe result of the function is an "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "ActorRun"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " object that contains details about the Actor run.\n\nNote that an Actor task is a saved input configuration and options for an Actor.\nIf you want to run an Actor directly rather than an Actor task, please use the\n"
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.call"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function instead.\n\nFor more information about Actor tasks, read the [documentation](https://docs.apify.com/tasks).\n\n**Example usage:**\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst run = await Actor.callTask('bob/some-task');\n```"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 886,
                                    "name": "taskId",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Allowed formats are "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`username/task-name`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`userId/task-name`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or task ID."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 887,
                                    "name": "input",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Input overrides for the Actor task. If it is an object, it will be stringified to\n JSON and its content type set to "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`application/json; charset=utf-8`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ".\n Provided input will be merged with Actor task input."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                },
                                {
                                    "id": 888,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1159,
                                        "name": "CallTaskOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1189,
                                        "name": "ActorRun",
                                        "qualifiedName": "ActorRun",
                                        "package": "apify-client"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 946,
                    "name": "createProxyConfiguration",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1490,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1490"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 947,
                            "name": "createProxyConfiguration",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Creates a proxy configuration and returns a promise resolving to an instance\nof the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "ProxyConfiguration"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class that is already initialized.\n\nConfigures connection to a proxy server with the provided options. Proxy servers are used to prevent target websites from blocking\nyour crawlers based on IP address rate limits or blacklists. Setting proxy configuration in your crawlers automatically configures\nthem to use the selected proxies for all connections.\n\nFor more details and code examples, see the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "ProxyConfiguration"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\n\n// Returns initialized proxy configuration class\nconst proxyConfiguration = await Actor.createProxyConfiguration({\n    groups: ['GROUP1', 'GROUP2'] // List of Apify proxy groups\n    countryCode: 'US'\n});\n\nconst crawler = new CheerioCrawler({\n  // ...\n  proxyConfiguration,\n  requestHandler({ proxyInfo }) {\n      const usedProxyUrl = proxyInfo.url; // Getting the proxy URL\n  }\n})\n\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nFor compatibility with existing Actor Input UI (Input Schema), this function\nreturns "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`undefined`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " when the following object is passed as "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`proxyConfigurationOptions`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```\n{ useApifyProxy: false }\n```"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 948,
                                    "name": "proxyConfigurationOptions",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "intersection",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "id": 1433,
                                                "name": "ProxyConfigurationOptions"
                                            },
                                            {
                                                "type": "reflection",
                                                "declaration": {
                                                    "id": 949,
                                                    "name": "__type",
                                                    "kind": 65536,
                                                    "kindString": "Type literal",
                                                    "flags": {},
                                                    "children": [
                                                        {
                                                            "id": 950,
                                                            "name": "useApifyProxy",
                                                            "kind": 1024,
                                                            "kindString": "Property",
                                                            "flags": {
                                                                "isOptional": true
                                                            },
                                                            "sources": [
                                                                {
                                                                    "fileName": "packages/apify/src/actor.ts",
                                                                    "line": 1491,
                                                                    "character": 65,
                                                                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1491"
                                                                }
                                                            ],
                                                            "type": {
                                                                "type": "intrinsic",
                                                                "name": "boolean"
                                                            }
                                                        }
                                                    ],
                                                    "groups": [
                                                        {
                                                            "title": "Properties",
                                                            "children": [950]
                                                        }
                                                    ],
                                                    "sources": [
                                                        {
                                                            "fileName": "packages/apify/src/actor.ts",
                                                            "line": 1491,
                                                            "character": 63,
                                                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1491"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "reference",
                                                "id": 1453,
                                                "name": "ProxyConfiguration"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 857,
                    "name": "exit",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1089,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1089"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 858,
                            "name": "exit",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Gracefully exits the Actor run with the provided status message and exit code."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 859,
                                    "name": "messageOrOptions",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "First parameter accepts either a string (a terminal status message) or an "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`ExitOptions`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " object."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "id": 1182,
                                                "name": "ExitOptions"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 860,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Second parameter accepts an "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`ExitOptions`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " object."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1182,
                                        "name": "ExitOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 861,
                    "name": "fail",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1098,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1098"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 862,
                            "name": "fail",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Calls "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Actor.exit()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " with "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`options.exitCode`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " set to "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`1`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 863,
                                    "name": "messageOrOptions",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "First parameter accepts either a string (a terminal status message) or an "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`ExitOptions`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " object."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "id": 1182,
                                                "name": "ExitOptions"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 864,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Second parameter accepts an "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`ExitOptions`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " object."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1182,
                                        "name": "ExitOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 951,
                    "name": "getEnv",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1503,
                            "character": 11,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1503"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 952,
                            "name": "getEnv",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a new "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "ApifyEnv"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " object which contains information parsed from all the Apify environment variables.\n\nFor the list of the Apify environment variables, see\n[Actor documentation](https://docs.apify.com/actor/run#environment-variables).\nIf some of the variables are not defined or are invalid, the corresponding value in the resulting object will be null."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "id": 1106,
                                "name": "ApifyEnv"
                            }
                        }
                    ]
                },
                {
                    "id": 932,
                    "name": "getInput",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1405,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1405"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 933,
                            "name": "getInput",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Gets the Actor input value from the default "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " associated with the current Actor run.\n\nThis is just a convenient shortcut for "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore.getValue | `keyValueStore.getValue('INPUT')`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nFor example, calling the following code:\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst input = await Actor.getInput();\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nis equivalent to:\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst store = await Actor.openKeyValueStore();\nawait store.getValue('INPUT');\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nNote that the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`getInput()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function does not cache the value read from the key-value store.\nIf you need to use the input multiple times in your Actor,\nit is far more efficient to read it once and store it locally.\n\nFor more information, see "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.openKeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " and "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore.getValue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Returns a promise that resolves to an object, string\n  or ["
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`Buffer`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "](https://nodejs.org/api/buffer.html), depending\n  on the MIME content type of the record, or "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`null`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "\n  if the record is missing."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 934,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "default": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "Dictionary",
                                                "qualifiedName": "Dictionary",
                                                "package": "@crawlee/types"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "Buffer",
                                                "qualifiedName": "global.Buffer",
                                                "package": "@types/node"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "reference",
                                                "id": 934,
                                                "name": "T"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 935,
                    "name": "getInputOrThrow",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1413,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1413"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 936,
                            "name": "getInputOrThrow",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Gets the Actor input value just like the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.getInput"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method,\nbut throws if it is not found."
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 937,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "default": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "Dictionary",
                                                "qualifiedName": "Dictionary",
                                                "package": "@crawlee/types"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "Buffer",
                                                "qualifiedName": "global.Buffer",
                                                "package": "@types/node"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 937,
                                        "name": "T"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 922,
                    "name": "getValue",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1340,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1340"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 923,
                            "name": "getValue",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Gets a value from the default "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " associated with the current Actor run.\n\nThis is just a convenient shortcut for "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore.getValue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nFor example, calling the following code:\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst value = await Actor.getValue('my-key');\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nis equivalent to:\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst store = await Actor.openKeyValueStore();\nconst value = await store.getValue('my-key');\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nTo store the value to the default key-value store, you can use the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.setValue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function.\n\nFor more information, see  "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.openKeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\nand  "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore.getValue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Returns a promise that resolves to an object, string\n  or ["
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`Buffer`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "](https://nodejs.org/api/buffer.html), depending\n  on the MIME content type of the record, or "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`null`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "\n  if the record is missing."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 924,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "default": {
                                        "type": "intrinsic",
                                        "name": "unknown"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 925,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Unique record key."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "reference",
                                                "id": 924,
                                                "name": "T"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 854,
                    "name": "init",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1080,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1080"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 855,
                            "name": "init",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Initializes the Actor, enabling support for the [Apify platform](https://apify.com/actors) dynamically\nbased on "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`APIFY_IS_AT_HOME`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " env var. If you are not running the code on Apify, you don't need to use it.\nThe method will switch storage client implementation automatically, so when you run on the Apify platform,\nit will use its API instead of the default memory storage. It also increases the available memory ratio\nfrom 25% to 100% on the platform.\n\nCalling "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Actor.exit()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is required if you use the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Actor.init()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method, since it opens websocket connection\n(see "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.events"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " for details), which needs to be terminated for the code to finish.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { gotScraping } from 'got-scraping';\n\nawait Actor.init();\n\nconst html = await gotScraping('http://www.example.com');\nconsole.log(html);\n\nawait Actor.exit();\n```"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 856,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "id": 1098,
                                        "name": "InitOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 956,
                    "name": "isAtHome",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1521,
                            "character": 11,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1521"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 957,
                            "name": "isAtHome",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`true`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " when code is running on Apify platform and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`false`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " otherwise (for example locally)."
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                            }
                        }
                    ]
                },
                {
                    "id": 849,
                    "name": "main",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1053,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1053"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 850,
                            "name": "main",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Runs the main user function that performs the job of the Actor\nand terminates the process when the user function finishes.\n\n**The "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Actor.main()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function is optional** and is provided merely for your convenience.\nIt is mainly useful when you're running your code as an Actor on the [Apify platform](https://apify.com/actors).\nHowever, if you want to use Apify SDK tools directly inside your existing projects, e.g.\nrunning in an [Express](https://expressjs.com/) server, on\n[Google Cloud functions](https://cloud.google.com/functions)\nor [AWS Lambda](https://aws.amazon.com/lambda/), it's better to avoid\nit since the function terminates the main process when it finishes!\n\nThe "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Actor.main()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function performs the following actions:\n\n- When running on the Apify platform (i.e. "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`APIFY_IS_AT_HOME`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " environment variable is set),\n  it sets up a connection to listen for platform events.\n  For example, to get a notification about an imminent migration to another server.\n  See "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.events"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " for details.\n- It invokes the user function passed as the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`userFunc`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " parameter.\n- If the user function returned a promise, waits for it to resolve.\n- If the user function throws an exception or some other error is encountered,\n  prints error details to console so that they are stored to the log.\n- Exits the Node.js process, with zero exit code on success and non-zero on errors.\n\nThe user function can be synchronous:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nawait Actor.main(() => {\n  // My synchronous function that returns immediately\n  console.log('Hello world from Actor!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nIf the user function returns a promise, it is considered asynchronous:\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { gotScraping } from 'got-scraping';\n\nawait Actor.main(() => {\n  // My asynchronous function that returns a promise\n  return gotScraping('http://www.example.com').then((html) => {\n    console.log(html);\n  });\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nTo simplify your code, you can take advantage of the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`async`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "/"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`await`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " keywords:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { gotScraping } from 'got-scraping';\n\nawait Actor.main(async () => {\n  // My asynchronous function\n  const html = await gotScraping('http://www.example.com');\n  console.log(html);\n});\n```"
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 851,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {}
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 852,
                                    "name": "userFunc",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "User function to be executed. If it returns a promise,\nthe promise will be awaited. The user function is called with no arguments."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1146,
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "id": 851,
                                                "name": "T"
                                            }
                                        ],
                                        "name": "UserFunc"
                                    }
                                },
                                {
                                    "id": 853,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1100,
                                        "name": "MainOptions"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 851,
                                        "name": "T"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 898,
                    "name": "metamorph",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1224,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1224"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 899,
                            "name": "metamorph",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Transforms this Actor run to an Actor run of a given Actor. The system stops the current container and starts\nthe new container instead. All the default storages are preserved and the new input is stored under the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`INPUT-METAMORPH-1`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " key\nin the same default key-value store."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 900,
                                    "name": "targetActorId",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Either "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`username/actor-name`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or Actor ID of an Actor to which we want to metamorph."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 901,
                                    "name": "input",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Input for the Actor. If it is an object, it will be stringified to\n JSON and its content type set to "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`application/json; charset=utf-8`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ".\n Otherwise, the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`options.contentType`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " parameter must be provided."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "unknown"
                                    }
                                },
                                {
                                    "id": 902,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1176,
                                        "name": "MetamorphOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 953,
                    "name": "newClient",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1514,
                            "character": 11,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1514"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 954,
                            "name": "newClient",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a new instance of the Apify API client. The "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`ApifyClient`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class is provided\nby the [apify-client](https://www.npmjs.com/package/apify-client)\nNPM package, and it is automatically configured using the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`APIFY_API_BASE_URL`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`APIFY_TOKEN`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\nenvironment variables. You can override the token via the available options. That's useful\nif you want to use the client as a different Apify user than the SDK internals are using."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 955,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "id": 831,
                                        "name": "ApifyClientOptions",
                                        "qualifiedName": "ApifyClientOptions",
                                        "package": "apify-client"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 757,
                                "name": "ApifyClient",
                                "qualifiedName": "ApifyClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 872,
                    "name": "off",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1106,
                            "character": 11,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1106"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 873,
                            "name": "off",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                                {
                                    "id": 874,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "name": "EventTypeName",
                                        "qualifiedName": "EventTypeName",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 875,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 876,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {},
                                            "sources": [
                                                {
                                                    "fileName": "packages/apify/src/actor.ts",
                                                    "line": 1106,
                                                    "character": 48,
                                                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1106"
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 877,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {},
                                                    "parameters": [
                                                        {
                                                            "id": 878,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 865,
                    "name": "on",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1102,
                            "character": 11,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1102"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 866,
                            "name": "on",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                                {
                                    "id": 867,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "name": "EventTypeName",
                                        "qualifiedName": "EventTypeName",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 868,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 869,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {},
                                            "sources": [
                                                {
                                                    "fileName": "packages/apify/src/actor.ts",
                                                    "line": 1102,
                                                    "character": 46,
                                                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1102"
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 870,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {},
                                                    "parameters": [
                                                        {
                                                            "id": 871,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 917,
                    "name": "openDataset",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1307,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1307"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 918,
                            "name": "openDataset",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Opens a dataset and returns a promise resolving to an instance of the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class.\n\nDatasets are used to store structured data where each object stored has the same attributes,\nsuch as online store products or real estate offers.\nThe actual data is stored either on the local filesystem or in the cloud.\n\nFor more details and code examples, see the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class."
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 919,
                                    "name": "Data",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 920,
                                    "name": "datasetIdOrName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "ID or name of the dataset to be opened. If "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`null`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`undefined`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ",\n  the function returns the default dataset associated with the Actor run."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 921,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1187,
                                        "name": "OpenStorageOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1,
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "id": 919,
                                                "name": "Data"
                                            }
                                        ],
                                        "name": "Dataset",
                                        "qualifiedName": "Dataset",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 938,
                    "name": "openKeyValueStore",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1431,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1431"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 939,
                            "name": "openKeyValueStore",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Opens a key-value store and returns a promise resolving to an instance of the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class.\n\nKey-value stores are used to store records or files, along with their MIME content type.\nThe records are stored and retrieved using a unique key.\nThe actual data is stored either on a local filesystem or in the Apify cloud.\n\nFor more details and code examples, see the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 940,
                                    "name": "storeIdOrName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "ID or name of the key-value store to be opened. If "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`null`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`undefined`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ",\n  the function returns the default key-value store associated with the Actor run."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 941,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1187,
                                        "name": "OpenStorageOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1575,
                                        "name": "KeyValueStore"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 942,
                    "name": "openRequestQueue",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1451,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1451"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 943,
                            "name": "openRequestQueue",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Opens a request queue and returns a promise resolving to an instance\nof the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "RequestQueue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class.\n\n"
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "RequestQueue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " represents a queue of URLs to crawl, which is stored either on local filesystem or in the cloud.\nThe queue is used for deep crawling of websites, where you start with several URLs and then\nrecursively follow links to other pages. The data structure supports both breadth-first\nand depth-first crawling orders.\n\nFor more details and code examples, see the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "RequestQueue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 944,
                                    "name": "queueIdOrName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "ID or name of the request queue to be opened. If "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`null`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`undefined`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ",\n  the function returns the default request queue associated with the Actor run."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 945,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1187,
                                        "name": "OpenStorageOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 125,
                                        "name": "RequestQueue",
                                        "qualifiedName": "RequestQueue",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 913,
                    "name": "pushData",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1289,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1289"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 914,
                            "name": "pushData",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Stores an object or an array of objects to the default "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " of the current Actor run.\n\nThis is just a convenient shortcut for "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset.pushData"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nFor example, calling the following code:\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nawait Actor.pushData({ myValue: 123 });\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nis equivalent to:\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst dataset = await Actor.openDataset();\nawait dataset.pushData({ myValue: 123 });\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nFor more information, see "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.openDataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " and "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset.pushData"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\n**IMPORTANT**: Make sure to use the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`await`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " keyword when calling "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`pushData()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ",\notherwise the Actor process might finish before the data are stored!"
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 915,
                                    "name": "Data",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 916,
                                    "name": "item",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Object or array of objects containing data to be stored in the default dataset.\nThe objects must be serializable to JSON and the JSON representation of each object must be smaller than 9MB."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "id": 915,
                                                "name": "Data"
                                            },
                                            {
                                                "type": "array",
                                                "elementType": {
                                                    "type": "reference",
                                                    "id": 915,
                                                    "name": "Data"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 903,
                    "name": "reboot",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1233,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1233"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 904,
                            "name": "reboot",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Internally reboots this Actor run. The system stops the current container and starts\na new container with the same run id.\nThis can be used to get the Actor out of irrecoverable error state and continue where it left off."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 905,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "id": 1180,
                                        "name": "RebootOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 909,
                    "name": "setStatusMessage",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1262,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1262"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 910,
                            "name": "setStatusMessage",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Sets the status message for the current Actor run."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "The return value is the Run object. When run locally, this method returns empty object ("
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`{}`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ").\nFor more information, see the [Actor Runs](https://docs.apify.com/api/v2#/reference/actor-runs/) API endpoints."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 911,
                                    "name": "statusMessage",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The status message to set."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 912,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "SetStatusMessageOptions",
                                        "qualifiedName": "SetStatusMessageOptions",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1189,
                                        "name": "ActorRun",
                                        "qualifiedName": "ActorRun",
                                        "package": "apify-client"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 926,
                    "name": "setValue",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1374,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1374"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 927,
                            "name": "setValue",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Stores or deletes a value in the default "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " associated with the current Actor run.\n\nThis is just a convenient shortcut for  "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore.setValue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nFor example, calling the following code:\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nawait Actor.setValue('OUTPUT', { foo: \"bar\" });\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nis equivalent to:\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst store = await Actor.openKeyValueStore();\nawait store.setValue('OUTPUT', { foo: \"bar\" });\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nTo get a value from the default key-value store, you can use the  "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.getValue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function.\n\nFor more information, see  "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Actor.openKeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\nand  "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore.getValue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 928,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {}
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 929,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Unique record key."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 930,
                                    "name": "value",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Record data, which can be one of the following values:\n   - If "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`null`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", the record in the key-value store is deleted.\n   - If no "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`options.contentType`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " is specified, "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`value`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " can be any JavaScript object, and it will be stringified to JSON.\n   - If "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`options.contentType`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " is set, "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`value`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " is taken as is, and it must be a "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`String`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or ["
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`Buffer`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "](https://nodejs.org/api/buffer.html).\n  For any other value an error will be thrown."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "reference",
                                                "id": 928,
                                                "name": "T"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 931,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 235,
                                        "name": "RecordOptions",
                                        "qualifiedName": "RecordOptions",
                                        "package": "@crawlee/core"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 889,
                    "name": "start",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1189,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1189"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 890,
                            "name": "start",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Runs an Actor on the Apify platform using the current user account (determined by the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`APIFY_TOKEN`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " environment variable),\nunlike "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Actor.call`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", this method just starts the run without waiting for finish.\n\nThe result of the function is an "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "ActorRun"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " object that contains details about the Actor run.\n\nFor more information about Actors, read the\n[documentation](https://docs.apify.com/actor).\n\n**Example usage:**\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst run = await Actor.start('apify/hello-world', { myInput: 123 });\n```"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 891,
                                    "name": "actorId",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Allowed formats are "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`username/actor-name`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`userId/actor-name`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or Actor ID."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 892,
                                    "name": "input",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Input for the Actor. If it is an object, it will be stringified to\n JSON and its content type set to "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`application/json; charset=utf-8`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ".\n Otherwise the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`options.contentType`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " parameter must be provided."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                },
                                {
                                    "id": 893,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1150,
                                        "name": "CallOptions"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1189,
                                        "name": "ActorRun",
                                        "qualifiedName": "ActorRun",
                                        "package": "apify-client"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 843,
                    "name": "useState",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 984,
                            "character": 17,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L984"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 844,
                            "name": "useState",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Easily create and manage state values. All state values are automatically persisted.\n\nValues can be modified by simply using the assignment operator."
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 845,
                                    "name": "State",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 846,
                                    "name": "name",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the store to use."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 847,
                                    "name": "defaultValue",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "If the store does not yet have a value in it, the value will be initialized with the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`defaultValue`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " you provide."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 845,
                                        "name": "State"
                                    },
                                    "defaultValue": "..."
                                },
                                {
                                    "id": 848,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "An optional object parameter where a custom "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`keyValueStoreName`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " and "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`config`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " can be passed in."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "UseStateOptions",
                                        "qualifiedName": "UseStateOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 845,
                                        "name": "State"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                }
            ],
            "groups": [
                {
                    "title": "Constructors",
                    "children": [964]
                },
                {
                    "title": "Properties",
                    "children": [971]
                },
                {
                    "title": "Accessors",
                    "children": [958, 960]
                },
                {
                    "title": "Methods",
                    "children": [
                        1057, 1082, 894, 906, 879, 884, 946, 857, 861, 951, 932,
                        935, 922, 854, 956, 849, 898, 953, 872, 865, 917, 938,
                        942, 913, 903, 909, 926, 889, 843
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 51,
                    "character": 13,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L51"
                }
            ],
            "typeParameters": [
                {
                    "id": 1097,
                    "name": "Data",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {},
                    "type": {
                        "type": "reference",
                        "name": "Dictionary",
                        "qualifiedName": "Dictionary",
                        "package": "@crawlee/types"
                    },
                    "default": {
                        "type": "reference",
                        "name": "Dictionary",
                        "qualifiedName": "Dictionary",
                        "package": "@crawlee/types"
                    }
                }
            ]
        },
        {
            "id": 757,
            "name": "ApifyClient",
            "kind": 128,
            "kindString": "Class",
            "flags": {
                "isExternal": true
            },
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "ApifyClient is the official library to access [Apify API](https://docs.apify.com/api/v2) from your\nJavaScript applications. It runs both in Node.js and browser."
                    }
                ]
            },
            "children": [
                {
                    "id": 758,
                    "name": "constructor",
                    "kind": 512,
                    "kindString": "Constructor",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 39,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 759,
                            "name": "new ApifyClient",
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 760,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 831,
                                        "name": "ApifyClientOptions",
                                        "qualifiedName": "ApifyClientOptions",
                                        "package": "apify-client"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 757,
                                "name": "ApifyClient",
                                "qualifiedName": "ApifyClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 761,
                    "name": "baseUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 34,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 765,
                    "name": "httpClient",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 38,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "HttpClient",
                        "qualifiedName": "HttpClient",
                        "package": "apify-client"
                    }
                },
                {
                    "id": 764,
                    "name": "logger",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 37,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "id": 240,
                        "name": "Log",
                        "qualifiedName": "Log",
                        "package": "@apify/log"
                    }
                },
                {
                    "id": 763,
                    "name": "stats",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 36,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "Statistics",
                        "qualifiedName": "Statistics",
                        "package": "apify-client"
                    }
                },
                {
                    "id": 762,
                    "name": "token",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 35,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 769,
                    "name": "actor",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 48,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 770,
                            "name": "actor",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/actors/actor-object"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 771,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "ActorClient",
                                "qualifiedName": "ActorClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 767,
                    "name": "actors",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 44,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 768,
                            "name": "actors",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/actors/actor-collection"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "ActorCollectionClient",
                                "qualifiedName": "ActorCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 774,
                    "name": "build",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 56,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 775,
                            "name": "build",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/actor-builds/build-object"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 776,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "BuildClient",
                                "qualifiedName": "BuildClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 772,
                    "name": "builds",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 52,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 773,
                            "name": "builds",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/actor-builds/build-collection"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "BuildCollectionClient",
                                "qualifiedName": "BuildCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 779,
                    "name": "dataset",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 64,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 780,
                            "name": "dataset",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/datasets/dataset"
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 781,
                                    "name": "Data",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "string"
                                                    },
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "number"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        ],
                                        "name": "Record",
                                        "qualifiedName": "Record",
                                        "package": "typescript"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "union",
                                                "types": [
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "string"
                                                    },
                                                    {
                                                        "type": "intrinsic",
                                                        "name": "number"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "unknown"
                                            }
                                        ],
                                        "name": "Record",
                                        "qualifiedName": "Record",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 782,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 781,
                                        "name": "Data",
                                        "qualifiedName": "Data",
                                        "package": "apify-client"
                                    }
                                ],
                                "name": "DatasetClient",
                                "qualifiedName": "DatasetClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 777,
                    "name": "datasets",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 60,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 778,
                            "name": "datasets",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/datasets/dataset-collection"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "DatasetCollectionClient",
                                "qualifiedName": "DatasetCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 785,
                    "name": "keyValueStore",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 72,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 786,
                            "name": "keyValueStore",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/key-value-stores/store-object"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 787,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "KeyValueStoreClient",
                                "qualifiedName": "KeyValueStoreClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 783,
                    "name": "keyValueStores",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 68,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 784,
                            "name": "keyValueStores",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/key-value-stores/store-collection"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "KeyValueStoreCollectionClient",
                                "qualifiedName": "KeyValueStoreCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 788,
                    "name": "log",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 76,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 789,
                            "name": "log",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/logs"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 790,
                                    "name": "buildOrRunId",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "LogClient",
                                "qualifiedName": "LogClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 793,
                    "name": "requestQueue",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 84,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 794,
                            "name": "requestQueue",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/request-queues/queue"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 795,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 796,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "RequestQueueUserOptions",
                                        "qualifiedName": "RequestQueueUserOptions",
                                        "package": "apify-client"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "RequestQueueClient",
                                "qualifiedName": "RequestQueueClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 791,
                    "name": "requestQueues",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 80,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 792,
                            "name": "requestQueues",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/request-queues/queue-collection"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "RequestQueueCollectionClient",
                                "qualifiedName": "RequestQueueCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 799,
                    "name": "run",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 92,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 800,
                            "name": "run",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/actor-runs/run-object-and-its-storages"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 801,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "RunClient",
                                "qualifiedName": "RunClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 797,
                    "name": "runs",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 88,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 798,
                            "name": "runs",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/actor-runs/run-collection"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "RunCollectionClient",
                                "qualifiedName": "RunCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 809,
                    "name": "schedule",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 108,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 810,
                            "name": "schedule",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/schedules/schedule-object"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 811,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "ScheduleClient",
                                "qualifiedName": "ScheduleClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 807,
                    "name": "schedules",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 104,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 808,
                            "name": "schedules",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/schedules/schedules-collection"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "ScheduleCollectionClient",
                                "qualifiedName": "ScheduleCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 827,
                    "name": "setStatusMessage",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 133,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 828,
                            "name": "setStatusMessage",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 829,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 830,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "SetStatusMessageOptions",
                                        "qualifiedName": "SetStatusMessageOptions",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 825,
                    "name": "store",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 132,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 826,
                            "name": "store",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2/#/reference/store"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "StoreCollectionClient",
                                "qualifiedName": "StoreCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 804,
                    "name": "task",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 100,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 805,
                            "name": "task",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/actor-tasks/task-object"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 806,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "TaskClient",
                                "qualifiedName": "TaskClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 802,
                    "name": "tasks",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 96,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 803,
                            "name": "tasks",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/actor-tasks/task-collection"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "TaskCollectionClient",
                                "qualifiedName": "TaskCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 812,
                    "name": "user",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 112,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 813,
                            "name": "user",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/users"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 814,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "UserClient",
                                "qualifiedName": "UserClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 817,
                    "name": "webhook",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 120,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 818,
                            "name": "webhook",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/webhooks/webhook-object"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 819,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "WebhookClient",
                                "qualifiedName": "WebhookClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 822,
                    "name": "webhookDispatch",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 128,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 823,
                            "name": "webhookDispatch",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/webhook-dispatches/webhook-dispatch-object"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 824,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "WebhookDispatchClient",
                                "qualifiedName": "WebhookDispatchClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 820,
                    "name": "webhookDispatches",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 124,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 821,
                            "name": "webhookDispatches",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/webhook-dispatches"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "WebhookDispatchCollectionClient",
                                "qualifiedName": "WebhookDispatchCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                },
                {
                    "id": 815,
                    "name": "webhooks",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 116,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 816,
                            "name": "webhooks",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "https://docs.apify.com/api/v2#/reference/webhooks/webhook-collection"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "WebhookCollectionClient",
                                "qualifiedName": "WebhookCollectionClient",
                                "package": "apify-client"
                            }
                        }
                    ]
                }
            ],
            "groups": [
                {
                    "title": "Constructors",
                    "children": [758]
                },
                {
                    "title": "Properties",
                    "children": [761, 765, 764, 763, 762]
                },
                {
                    "title": "Methods",
                    "children": [
                        769, 767, 774, 772, 779, 777, 785, 783, 788, 793, 791,
                        799, 797, 809, 807, 827, 825, 804, 802, 812, 817, 822,
                        820, 815
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                    "line": 33,
                    "character": 21
                }
            ]
        },
        {
            "id": 1277,
            "name": "Configuration",
            "kind": 128,
            "kindString": "Class",
            "flags": {},
            "comment": {
                "summary": [
                    {
                        "kind": "code",
                        "text": "`Configuration`"
                    },
                    {
                        "kind": "text",
                        "text": " is a value object holding the SDK configuration. We can use it in two ways:\n\n1. When using "
                    },
                    {
                        "kind": "code",
                        "text": "`Actor`"
                    },
                    {
                        "kind": "text",
                        "text": " class, we can get the instance configuration via "
                    },
                    {
                        "kind": "code",
                        "text": "`sdk.config`"
                    },
                    {
                        "kind": "text",
                        "text": "\n\n   "
                    },
                    {
                        "kind": "code",
                        "text": "```javascript\n   import { Actor } from 'apify';\n   import { BasicCrawler } from 'crawlee';\n\n   const sdk = new Actor({ token: '123' });\n   console.log(sdk.config.get('token')); // '123'\n\n   const crawler = new BasicCrawler({\n       // ... crawler options\n   }, sdk.config);\n   ```"
                    },
                    {
                        "kind": "text",
                        "text": "\n\n2. To get the global configuration (singleton instance). It will respect the environment variables.\n\n   "
                    },
                    {
                        "kind": "code",
                        "text": "```javascript\n   import { BasicCrawler, Configuration } from 'crawlee';\n\n   // Get the global configuration\n   const config = Configuration.getGlobalConfig();\n   // Set the 'persistStateIntervalMillis' option\n   // of global configuration to 30 seconds\n   config.set('persistStateIntervalMillis', 30_000);\n\n   // No need to pass the configuration to the crawler,\n   // as it's using the global configuration by default\n   const crawler = new BasicCrawler();\n   ```"
                    },
                    {
                        "kind": "text",
                        "text": "\n\n## Supported Configuration Options\n\nKey | Environment Variable | Default Value\n---|---|---\n"
                    },
                    {
                        "kind": "code",
                        "text": "`memoryMbytes`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_MEMORY_MBYTES`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`headless`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_HEADLESS`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`persistStateIntervalMillis`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_PERSIST_STATE_INTERVAL_MILLIS`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`60e3`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`token`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_TOKEN`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`isAtHome`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_IS_AT_HOME`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`defaultDatasetId`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_DEFAULT_DATASET_ID`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`'default'`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`defaultKeyValueStoreId`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_DEFAULT_KEY_VALUE_STORE_ID`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`'default'`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`defaultRequestQueueId`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_DEFAULT_REQUEST_QUEUE_ID`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`'default'`"
                    },
                    {
                        "kind": "text",
                        "text": "\n\n## Advanced Configuration Options\n\nKey | Environment Variable | Default Value\n---|---|---\n"
                    },
                    {
                        "kind": "code",
                        "text": "`actorEventsWsUrl`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_EVENTS_WEBSOCKET_URL`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`actorId`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_ID`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`actorRunId`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_RUN_ID`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`actorTaskId`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_TASK_ID`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`apiBaseUrl`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_API_BASE_URL`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`'https://api.apify.com'`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`containerPort`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_WEB_SERVER_PORT`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`4321`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`containerUrl`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_WEB_SERVER_URL`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`'http://localhost:4321'`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`inputKey`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`ACTOR_INPUT_KEY`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`'INPUT'`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`metamorphAfterSleepMillis`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_METAMORPH_AFTER_SLEEP_MILLIS`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`300e3`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`proxyHostname`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_PROXY_HOSTNAME`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`'proxy.apify.com'`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`proxyPassword`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_PROXY_PASSWORD`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`proxyPort`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_PROXY_PORT`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`8000`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`proxyStatusUrl`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_PROXY_STATUS_URL`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`'http://proxy.apify.com'`"
                    },
                    {
                        "kind": "text",
                        "text": "\n"
                    },
                    {
                        "kind": "code",
                        "text": "`userId`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_USER_ID`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`xvfb`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_XVFB`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`chromeExecutablePath`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_CHROME_EXECUTABLE_PATH`"
                    },
                    {
                        "kind": "text",
                        "text": " | -\n"
                    },
                    {
                        "kind": "code",
                        "text": "`defaultBrowserPath`"
                    },
                    {
                        "kind": "text",
                        "text": " | "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_DEFAULT_BROWSER_PATH`"
                    },
                    {
                        "kind": "text",
                        "text": " | -"
                    }
                ]
            },
            "children": [
                {
                    "id": 1355,
                    "name": "constructor",
                    "kind": 512,
                    "kindString": "Constructor",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 228,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1356,
                            "name": "new Configuration",
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Creates new "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Configuration`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance with provided options. Env vars will have precedence over those."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 1357,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "ConfigurationOptions",
                                        "qualifiedName": "ConfigurationOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 1277,
                                "name": "Configuration"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreConfiguration.constructor"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfiguration.constructor"
                    }
                },
                {
                    "id": 1412,
                    "name": "storageManagers",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 224,
                            "character": 13
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "typeArguments": [
                            {
                                "type": "reference",
                                "name": "Constructor",
                                "qualifiedName": "Constructor",
                                "package": "@crawlee/core"
                            },
                            {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "name": "IStorage",
                                        "qualifiedName": "IStorage",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "StorageManager",
                                "qualifiedName": "StorageManager",
                                "package": "@crawlee/core"
                            }
                        ],
                        "name": "Map",
                        "qualifiedName": "Map",
                        "package": "typescript"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfiguration.storageManagers"
                    }
                },
                {
                    "id": 1278,
                    "name": "globalConfig",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@inheritDoc",
                                "content": []
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 100,
                            "character": 20,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L100"
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "id": 1277,
                        "name": "Configuration"
                    },
                    "overwrites": {
                        "type": "reference",
                        "name": "CoreConfiguration.globalConfig"
                    }
                },
                {
                    "id": 1358,
                    "name": "get",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 179,
                            "character": 13,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L179"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1359,
                            "name": "get",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [],
                                "blockTags": [
                                    {
                                        "tag": "@inheritDoc",
                                        "content": []
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 1360,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "typeOperator",
                                        "operator": "keyof",
                                        "target": {
                                            "type": "reference",
                                            "id": 1218,
                                            "name": "ConfigurationOptions"
                                        }
                                    }
                                },
                                {
                                    "id": 1382,
                                    "name": "U",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "number"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "Dictionary",
                                                "qualifiedName": "Dictionary",
                                                "package": "@crawlee/types"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "StorageClient",
                                                "qualifiedName": "StorageClient",
                                                "package": "@crawlee/types"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "EventManager",
                                                "qualifiedName": "EventManager",
                                                "package": "@crawlee/core"
                                            },
                                            {
                                                "type": "reflection",
                                                "declaration": {
                                                    "id": 1361,
                                                    "name": "__type",
                                                    "kind": 65536,
                                                    "kindString": "Type literal",
                                                    "flags": {},
                                                    "sources": [
                                                        {
                                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                                            "line": 551,
                                                            "character": 4
                                                        }
                                                    ],
                                                    "signatures": [
                                                        {
                                                            "id": 1362,
                                                            "name": "__type",
                                                            "kind": 4096,
                                                            "kindString": "Call signature",
                                                            "flags": {},
                                                            "comment": {
                                                                "summary": [
                                                                    {
                                                                        "kind": "text",
                                                                        "text": "Returns a string representation of an object."
                                                                    }
                                                                ]
                                                            },
                                                            "parameters": [
                                                                {
                                                                    "id": 1363,
                                                                    "name": "radix",
                                                                    "kind": 32768,
                                                                    "kindString": "Parameter",
                                                                    "flags": {
                                                                        "isOptional": true
                                                                    },
                                                                    "comment": {
                                                                        "summary": [
                                                                            {
                                                                                "kind": "text",
                                                                                "text": "Specifies a radix for converting numeric values to strings. This value is only used for numbers."
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": {
                                                                        "type": "intrinsic",
                                                                        "name": "number"
                                                                    }
                                                                }
                                                            ],
                                                            "type": {
                                                                "type": "intrinsic",
                                                                "name": "string"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reflection",
                                                "declaration": {
                                                    "id": 1364,
                                                    "name": "__type",
                                                    "kind": 65536,
                                                    "kindString": "Type literal",
                                                    "flags": {},
                                                    "sources": [
                                                        {
                                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                                            "line": 557,
                                                            "character": 4
                                                        }
                                                    ],
                                                    "signatures": [
                                                        {
                                                            "id": 1365,
                                                            "name": "__type",
                                                            "kind": 4096,
                                                            "kindString": "Call signature",
                                                            "flags": {},
                                                            "comment": {
                                                                "summary": [
                                                                    {
                                                                        "kind": "text",
                                                                        "text": "Returns a string representing a number in fixed-point notation."
                                                                    }
                                                                ]
                                                            },
                                                            "parameters": [
                                                                {
                                                                    "id": 1366,
                                                                    "name": "fractionDigits",
                                                                    "kind": 32768,
                                                                    "kindString": "Parameter",
                                                                    "flags": {
                                                                        "isOptional": true
                                                                    },
                                                                    "comment": {
                                                                        "summary": [
                                                                            {
                                                                                "kind": "text",
                                                                                "text": "Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": {
                                                                        "type": "intrinsic",
                                                                        "name": "number"
                                                                    }
                                                                }
                                                            ],
                                                            "type": {
                                                                "type": "intrinsic",
                                                                "name": "string"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reflection",
                                                "declaration": {
                                                    "id": 1367,
                                                    "name": "__type",
                                                    "kind": 65536,
                                                    "kindString": "Type literal",
                                                    "flags": {},
                                                    "sources": [
                                                        {
                                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                                            "line": 563,
                                                            "character": 4
                                                        }
                                                    ],
                                                    "signatures": [
                                                        {
                                                            "id": 1368,
                                                            "name": "__type",
                                                            "kind": 4096,
                                                            "kindString": "Call signature",
                                                            "flags": {},
                                                            "comment": {
                                                                "summary": [
                                                                    {
                                                                        "kind": "text",
                                                                        "text": "Returns a string containing a number represented in exponential notation."
                                                                    }
                                                                ]
                                                            },
                                                            "parameters": [
                                                                {
                                                                    "id": 1369,
                                                                    "name": "fractionDigits",
                                                                    "kind": 32768,
                                                                    "kindString": "Parameter",
                                                                    "flags": {
                                                                        "isOptional": true
                                                                    },
                                                                    "comment": {
                                                                        "summary": [
                                                                            {
                                                                                "kind": "text",
                                                                                "text": "Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": {
                                                                        "type": "intrinsic",
                                                                        "name": "number"
                                                                    }
                                                                }
                                                            ],
                                                            "type": {
                                                                "type": "intrinsic",
                                                                "name": "string"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reflection",
                                                "declaration": {
                                                    "id": 1370,
                                                    "name": "__type",
                                                    "kind": 65536,
                                                    "kindString": "Type literal",
                                                    "flags": {},
                                                    "sources": [
                                                        {
                                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                                            "line": 569,
                                                            "character": 4
                                                        }
                                                    ],
                                                    "signatures": [
                                                        {
                                                            "id": 1371,
                                                            "name": "__type",
                                                            "kind": 4096,
                                                            "kindString": "Call signature",
                                                            "flags": {},
                                                            "comment": {
                                                                "summary": [
                                                                    {
                                                                        "kind": "text",
                                                                        "text": "Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits."
                                                                    }
                                                                ]
                                                            },
                                                            "parameters": [
                                                                {
                                                                    "id": 1372,
                                                                    "name": "precision",
                                                                    "kind": 32768,
                                                                    "kindString": "Parameter",
                                                                    "flags": {
                                                                        "isOptional": true
                                                                    },
                                                                    "comment": {
                                                                        "summary": [
                                                                            {
                                                                                "kind": "text",
                                                                                "text": "Number of significant digits. Must be in the range 1 - 21, inclusive."
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": {
                                                                        "type": "intrinsic",
                                                                        "name": "number"
                                                                    }
                                                                }
                                                            ],
                                                            "type": {
                                                                "type": "intrinsic",
                                                                "name": "string"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reflection",
                                                "declaration": {
                                                    "id": 1373,
                                                    "name": "__type",
                                                    "kind": 65536,
                                                    "kindString": "Type literal",
                                                    "flags": {},
                                                    "sources": [
                                                        {
                                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                                            "line": 572,
                                                            "character": 4
                                                        }
                                                    ],
                                                    "signatures": [
                                                        {
                                                            "id": 1374,
                                                            "name": "__type",
                                                            "kind": 4096,
                                                            "kindString": "Call signature",
                                                            "flags": {},
                                                            "comment": {
                                                                "summary": [
                                                                    {
                                                                        "kind": "text",
                                                                        "text": "Returns the primitive value of the specified object."
                                                                    }
                                                                ]
                                                            },
                                                            "type": {
                                                                "type": "intrinsic",
                                                                "name": "number"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "reflection",
                                                "declaration": {
                                                    "id": 1375,
                                                    "name": "__type",
                                                    "kind": 65536,
                                                    "kindString": "Type literal",
                                                    "flags": {},
                                                    "sources": [
                                                        {
                                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                                            "line": 4499,
                                                            "character": 4
                                                        },
                                                        {
                                                            "fileName": "website/node_modules/typescript/lib/lib.es2020.number.d.ts",
                                                            "line": 27,
                                                            "character": 4
                                                        }
                                                    ],
                                                    "signatures": [
                                                        {
                                                            "id": 1376,
                                                            "name": "__type",
                                                            "kind": 4096,
                                                            "kindString": "Call signature",
                                                            "flags": {},
                                                            "comment": {
                                                                "summary": [
                                                                    {
                                                                        "kind": "text",
                                                                        "text": "Converts a number to a string by using the current or specified locale."
                                                                    }
                                                                ]
                                                            },
                                                            "parameters": [
                                                                {
                                                                    "id": 1377,
                                                                    "name": "locales",
                                                                    "kind": 32768,
                                                                    "kindString": "Parameter",
                                                                    "flags": {
                                                                        "isOptional": true
                                                                    },
                                                                    "comment": {
                                                                        "summary": [
                                                                            {
                                                                                "kind": "text",
                                                                                "text": "A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used."
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": {
                                                                        "type": "union",
                                                                        "types": [
                                                                            {
                                                                                "type": "intrinsic",
                                                                                "name": "string"
                                                                            },
                                                                            {
                                                                                "type": "array",
                                                                                "elementType": {
                                                                                    "type": "intrinsic",
                                                                                    "name": "string"
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "id": 1378,
                                                                    "name": "options",
                                                                    "kind": 32768,
                                                                    "kindString": "Parameter",
                                                                    "flags": {
                                                                        "isOptional": true
                                                                    },
                                                                    "comment": {
                                                                        "summary": [
                                                                            {
                                                                                "kind": "text",
                                                                                "text": "An object that contains one or more properties that specify comparison options."
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": {
                                                                        "type": "reference",
                                                                        "name": "NumberFormatOptions",
                                                                        "qualifiedName": "Intl.NumberFormatOptions",
                                                                        "package": "typescript"
                                                                    }
                                                                }
                                                            ],
                                                            "type": {
                                                                "type": "intrinsic",
                                                                "name": "string"
                                                            }
                                                        },
                                                        {
                                                            "id": 1379,
                                                            "name": "__type",
                                                            "kind": 4096,
                                                            "kindString": "Call signature",
                                                            "flags": {},
                                                            "comment": {
                                                                "summary": [
                                                                    {
                                                                        "kind": "text",
                                                                        "text": "Converts a number to a string by using the current or specified locale."
                                                                    }
                                                                ]
                                                            },
                                                            "parameters": [
                                                                {
                                                                    "id": 1380,
                                                                    "name": "locales",
                                                                    "kind": 32768,
                                                                    "kindString": "Parameter",
                                                                    "flags": {
                                                                        "isOptional": true
                                                                    },
                                                                    "comment": {
                                                                        "summary": [
                                                                            {
                                                                                "kind": "text",
                                                                                "text": "A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used."
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": {
                                                                        "type": "reference",
                                                                        "name": "LocalesArgument",
                                                                        "qualifiedName": "Intl.LocalesArgument",
                                                                        "package": "typescript"
                                                                    }
                                                                },
                                                                {
                                                                    "id": 1381,
                                                                    "name": "options",
                                                                    "kind": 32768,
                                                                    "kindString": "Parameter",
                                                                    "flags": {
                                                                        "isOptional": true
                                                                    },
                                                                    "comment": {
                                                                        "summary": [
                                                                            {
                                                                                "kind": "text",
                                                                                "text": "An object that contains one or more properties that specify comparison options."
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": {
                                                                        "type": "reference",
                                                                        "name": "NumberFormatOptions",
                                                                        "qualifiedName": "Intl.NumberFormatOptions",
                                                                        "package": "typescript"
                                                                    }
                                                                }
                                                            ],
                                                            "type": {
                                                                "type": "intrinsic",
                                                                "name": "string"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 1383,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "id": 1360,
                                        "name": "T"
                                    }
                                },
                                {
                                    "id": 1384,
                                    "name": "defaultValue",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1382,
                                        "name": "U"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 1382,
                                "name": "U"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "CoreConfiguration.get"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "CoreConfiguration.get"
                    }
                },
                {
                    "id": 1419,
                    "name": "getEventManager",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 256,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1420,
                            "name": "getEventManager",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "type": {
                                "type": "reference",
                                "name": "EventManager",
                                "qualifiedName": "EventManager",
                                "package": "@crawlee/core"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreConfiguration.getEventManager"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfiguration.getEventManager"
                    }
                },
                {
                    "id": 1385,
                    "name": "set",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 186,
                            "character": 13,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L186"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1386,
                            "name": "set",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [],
                                "blockTags": [
                                    {
                                        "tag": "@inheritDoc",
                                        "content": []
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 1387,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "typeOperator",
                                        "operator": "keyof",
                                        "target": {
                                            "type": "reference",
                                            "id": 1218,
                                            "name": "ConfigurationOptions"
                                        }
                                    }
                                },
                                {
                                    "id": 1388,
                                    "name": "value",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "CoreConfiguration.set"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "CoreConfiguration.set"
                    }
                },
                {
                    "id": 1427,
                    "name": "useEventManager",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 264,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1428,
                            "name": "useEventManager",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 1429,
                                    "name": "events",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "EventManager",
                                        "qualifiedName": "EventManager",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreConfiguration.useEventManager"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfiguration.useEventManager"
                    }
                },
                {
                    "id": 1424,
                    "name": "useStorageClient",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 262,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1425,
                            "name": "useStorageClient",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 1426,
                                    "name": "client",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StorageClient",
                                        "qualifiedName": "StorageClient",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreConfiguration.useStorageClient"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfiguration.useStorageClient"
                    }
                },
                {
                    "id": 1353,
                    "name": "getEventManager",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 276,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1354,
                            "name": "getEventManager",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Gets default "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "EventManager"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "EventManager",
                                "qualifiedName": "EventManager",
                                "package": "@crawlee/core"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreConfiguration.getEventManager"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfiguration.getEventManager"
                    }
                },
                {
                    "id": 1339,
                    "name": "getGlobalConfig",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 193,
                            "character": 20,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L193"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1340,
                            "name": "getGlobalConfig",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [],
                                "blockTags": [
                                    {
                                        "tag": "@inheritDoc",
                                        "content": []
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "id": 1277,
                                "name": "Configuration"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "CoreConfiguration.getGlobalConfig"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "CoreConfiguration.getGlobalConfig"
                    }
                },
                {
                    "id": 1351,
                    "name": "getStorageClient",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 272,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1352,
                            "name": "getStorageClient",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Gets default "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "StorageClient"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "name": "StorageClient",
                                "qualifiedName": "StorageClient",
                                "package": "@crawlee/types"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreConfiguration.getStorageClient"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfiguration.getStorageClient"
                    }
                },
                {
                    "id": 1341,
                    "name": "resetGlobalState",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 206,
                            "character": 20,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L206"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1342,
                            "name": "resetGlobalState",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Resets global configuration instance. The default instance holds configuration based on env vars,\nif we want to change them, we need to first reset the global state. Used mainly for testing purposes."
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "CoreConfiguration.resetGlobalState"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "CoreConfiguration.resetGlobalState"
                    }
                },
                {
                    "id": 1344,
                    "name": "set",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 245,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1345,
                            "name": "set",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Sets value for given option. Only affects the global "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Configuration`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance, the value will not be propagated down to the env var.\nTo reset a value, we can omit the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`value`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " argument or pass "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`undefined`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " there."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 1346,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "typeOperator",
                                        "operator": "keyof",
                                        "target": {
                                            "type": "reference",
                                            "name": "ConfigurationOptions",
                                            "qualifiedName": "ConfigurationOptions",
                                            "package": "@crawlee/core"
                                        }
                                    }
                                },
                                {
                                    "id": 1347,
                                    "name": "value",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreConfiguration.set"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfiguration.set"
                    }
                },
                {
                    "id": 1348,
                    "name": "useStorageClient",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 263,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1349,
                            "name": "useStorageClient",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 1350,
                                    "name": "client",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StorageClient",
                                        "qualifiedName": "StorageClient",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreConfiguration.useStorageClient"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfiguration.useStorageClient"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Constructors",
                    "children": [1355]
                },
                {
                    "title": "Properties",
                    "children": [1412, 1278]
                },
                {
                    "title": "Methods",
                    "children": [
                        1358, 1419, 1385, 1427, 1424, 1353, 1339, 1351, 1341,
                        1344, 1348
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/configuration.ts",
                    "line": 98,
                    "character": 13,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L98"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "Configuration",
                    "qualifiedName": "Configuration",
                    "package": "@crawlee/core"
                }
            ]
        },
        {
            "id": 1,
            "name": "Dataset",
            "kind": 128,
            "kindString": "Class",
            "flags": {
                "isExternal": true
            },
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "The "
                    },
                    {
                        "kind": "code",
                        "text": "`Dataset`"
                    },
                    {
                        "kind": "text",
                        "text": " class represents a store for structured data where each object stored has the same attributes,\nsuch as online store products or real estate offers. You can imagine it as a table,\nwhere each object is a row and its attributes are columns.\nDataset is an append-only storage - you can only add new records to it but you cannot modify or remove existing records.\nTypically it is used to store crawling results.\n\nDo not instantiate this class directly, use the\n"
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "Dataset.open"
                    },
                    {
                        "kind": "text",
                        "text": " function instead.\n\n"
                    },
                    {
                        "kind": "code",
                        "text": "`Dataset`"
                    },
                    {
                        "kind": "text",
                        "text": " stores its data either on local disk or in the Apify cloud,\ndepending on whether the "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_LOCAL_STORAGE_DIR`"
                    },
                    {
                        "kind": "text",
                        "text": " or "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_TOKEN`"
                    },
                    {
                        "kind": "text",
                        "text": " environment variables are set.\n\nIf the "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_LOCAL_STORAGE_DIR`"
                    },
                    {
                        "kind": "text",
                        "text": " environment variable is set, the data is stored in\nthe local directory in the following files:\n"
                    },
                    {
                        "kind": "code",
                        "text": "```\n{APIFY_LOCAL_STORAGE_DIR}/datasets/{DATASET_ID}/{INDEX}.json\n```"
                    },
                    {
                        "kind": "text",
                        "text": "\nNote that "
                    },
                    {
                        "kind": "code",
                        "text": "`{DATASET_ID}`"
                    },
                    {
                        "kind": "text",
                        "text": " is the name or ID of the dataset. The default dataset has ID: "
                    },
                    {
                        "kind": "code",
                        "text": "`default`"
                    },
                    {
                        "kind": "text",
                        "text": ",\nunless you override it by setting the "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_DEFAULT_DATASET_ID`"
                    },
                    {
                        "kind": "text",
                        "text": " environment variable.\nEach dataset item is stored as a separate JSON file, where "
                    },
                    {
                        "kind": "code",
                        "text": "`{INDEX}`"
                    },
                    {
                        "kind": "text",
                        "text": " is a zero-based index of the item in the dataset.\n\nIf the "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_TOKEN`"
                    },
                    {
                        "kind": "text",
                        "text": " environment variable is set but "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_LOCAL_STORAGE_DIR`"
                    },
                    {
                        "kind": "text",
                        "text": " not, the data is stored in the\n[Apify Dataset](https://docs.apify.com/storage/dataset)\ncloud storage. Note that you can force usage of the cloud storage also by passing the "
                    },
                    {
                        "kind": "code",
                        "text": "`forceCloud`"
                    },
                    {
                        "kind": "text",
                        "text": "\noption to "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "Dataset.open"
                    },
                    {
                        "kind": "text",
                        "text": " function,\neven if the "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_LOCAL_STORAGE_DIR`"
                    },
                    {
                        "kind": "text",
                        "text": " variable is set.\n\n**Example usage:**\n\n"
                    },
                    {
                        "kind": "code",
                        "text": "```javascript\n// Write a single row to the default dataset\nawait Dataset.pushData({ col1: 123, col2: 'val2' });\n\n// Open a named dataset\nconst dataset = await Dataset.open('some-name');\n\n// Write a single row\nawait dataset.pushData({ foo: 'bar' });\n\n// Write multiple rows\nawait dataset.pushData([\n  { foo: 'bar2', col2: 'val2' },\n  { col3: 123 },\n]);\n\n// Export the entirety of the dataset to one file in the key-value store\nawait dataset.exportToCSV('MY-DATA');\n```"
                    }
                ]
            },
            "children": [
                {
                    "id": 31,
                    "name": "client",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 147,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "typeArguments": [
                            {
                                "type": "reference",
                                "name": "Data",
                                "qualifiedName": "Dataset.Data",
                                "package": "@crawlee/core"
                            }
                        ],
                        "name": "DatasetClient",
                        "qualifiedName": "DatasetClient",
                        "package": "@crawlee/types"
                    }
                },
                {
                    "id": 28,
                    "name": "config",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 144,
                            "character": 13
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "Configuration",
                        "qualifiedName": "Configuration",
                        "package": "@crawlee/core"
                    }
                },
                {
                    "id": 29,
                    "name": "id",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 145,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 32,
                    "name": "log",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 148,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "id": 240,
                        "name": "Log",
                        "qualifiedName": "Log",
                        "package": "@apify/log"
                    }
                },
                {
                    "id": 30,
                    "name": "name",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 146,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 73,
                    "name": "drop",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 297,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 74,
                            "name": "drop",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Removes the dataset either from the Apify cloud storage or from the local directory,\ndepending on the mode of operation."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 39,
                    "name": "export",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 186,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 40,
                            "name": "export",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns all the data from the dataset. This will iterate through the whole dataset\nvia the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listItems()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " client method, which gives you only paginated results."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 41,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "DatasetExportOptions",
                                        "qualifiedName": "DatasetExportOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "array",
                                        "elementType": {
                                            "type": "reference",
                                            "name": "Data",
                                            "qualifiedName": "Dataset.Data",
                                            "package": "@crawlee/core"
                                        }
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 42,
                    "name": "exportTo",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 194,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 43,
                            "name": "exportTo",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Save the entirety of the dataset's contents into one file within a key-value store."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 44,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the value to save the data in."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 45,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "An optional options object where you can provide the dataset and target KVS name."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "DatasetExportToOptions",
                                        "qualifiedName": "DatasetExportToOptions",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 46,
                                    "name": "contentType",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Only JSON and CSV are supported currently, defaults to JSON."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "array",
                                        "elementType": {
                                            "type": "reference",
                                            "name": "Data",
                                            "qualifiedName": "Dataset.Data",
                                            "package": "@crawlee/core"
                                        }
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 51,
                    "name": "exportToCSV",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 208,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 52,
                            "name": "exportToCSV",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Save entire default dataset's contents into one CSV file within a key-value store."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 53,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the value to save the data in."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 54,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "An optional options object where you can provide the target KVS name."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "name": "DatasetExportToOptions",
                                                "qualifiedName": "DatasetExportToOptions",
                                                "package": "@crawlee/core"
                                            },
                                            {
                                                "type": "literal",
                                                "value": "fromDataset"
                                            }
                                        ],
                                        "name": "Omit",
                                        "qualifiedName": "Omit",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 47,
                    "name": "exportToJSON",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 201,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 48,
                            "name": "exportToJSON",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Save entire default dataset's contents into one JSON file within a key-value store."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 49,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the value to save the data in."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 50,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "An optional options object where you can provide the target KVS name."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "name": "DatasetExportToOptions",
                                                "qualifiedName": "DatasetExportToOptions",
                                                "package": "@crawlee/core"
                                            },
                                            {
                                                "type": "literal",
                                                "value": "fromDataset"
                                            }
                                        ],
                                        "name": "Omit",
                                        "qualifiedName": "Omit",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 57,
                    "name": "forEach",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 266,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 58,
                            "name": "forEach",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Iterates over dataset items, yielding each in turn to an "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function.\nEach invocation of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is called with two arguments: "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`(item, index)`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nIf the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function returns a Promise then it is awaited before the next call.\nIf it throws an error, the iteration is aborted and the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`forEach`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function throws the error.\n\n**Example usage**\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```javascript\nconst dataset = await Dataset.open('my-results');\nawait dataset.forEach(async (item, index) => {\n  console.log(`Item at ${index}: ${JSON.stringify(item)}`);\n});\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@default",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 59,
                                    "name": "iteratee",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "A function that is called for every item in the dataset."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 95,
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "name": "Data",
                                                "qualifiedName": "Dataset.Data",
                                                "package": "@crawlee/core"
                                            }
                                        ],
                                        "name": "DatasetConsumer",
                                        "qualifiedName": "DatasetConsumer",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 60,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "All "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`forEach()`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " parameters."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 85,
                                        "name": "DatasetIteratorOptions",
                                        "qualifiedName": "DatasetIteratorOptions",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 61,
                                    "name": "index",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Specifies the initial index number passed to the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`iteratee`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " function."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 36,
                    "name": "getData",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 181,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 37,
                            "name": "getData",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "DatasetContent"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " object holding the items in the dataset based on the provided parameters."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 38,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 76,
                                        "name": "DatasetDataOptions",
                                        "qualifiedName": "DatasetDataOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 117,
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "name": "Data",
                                                "qualifiedName": "Dataset.Data",
                                                "package": "@crawlee/core"
                                            }
                                        ],
                                        "name": "DatasetContent",
                                        "qualifiedName": "DatasetContent",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 55,
                    "name": "getInfo",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 245,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 56,
                            "name": "getInfo",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns an object containing general information about the dataset.\n\nThe function returns the same object as the Apify API Client's\n[getDataset](https://docs.apify.com/api/apify-client-js/latest#ApifyClient-datasets-getDataset)\nfunction, which in turn calls the\n[Get dataset](https://apify.com/docs/api/v2#/reference/datasets/dataset/get-dataset)\nAPI endpoint.\n\n**Example:**\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```\n{\n  id: \"WkzbQMuFYuamGv3YF\",\n  name: \"my-dataset\",\n  userId: \"wRsJZtadYvn4mBZmm\",\n  createdAt: new Date(\"2015-12-12T07:34:14.202Z\"),\n  modifiedAt: new Date(\"2015-12-13T08:36:13.202Z\"),\n  accessedAt: new Date(\"2015-12-14T08:36:13.202Z\"),\n  itemCount: 14,\n}\n```"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "DatasetInfo",
                                                "qualifiedName": "DatasetInfo",
                                                "package": "@crawlee/types"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 62,
                    "name": "map",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 276,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 63,
                            "name": "map",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Produces a new array of values by mapping each value in list through a transformation function "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nEach invocation of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is called with two arguments: "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`(element, index)`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nIf "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " returns a "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Promise`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " then it's awaited before a next call."
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 64,
                                    "name": "R",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 65,
                                    "name": "iteratee",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 100,
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "name": "Data",
                                                "qualifiedName": "Dataset.Data",
                                                "package": "@crawlee/core"
                                            },
                                            {
                                                "type": "reference",
                                                "id": 64,
                                                "name": "R",
                                                "qualifiedName": "R",
                                                "package": "@crawlee/core"
                                            }
                                        ],
                                        "name": "DatasetMapper",
                                        "qualifiedName": "DatasetMapper",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 66,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "All "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`map()`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " parameters."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 85,
                                        "name": "DatasetIteratorOptions",
                                        "qualifiedName": "DatasetIteratorOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "array",
                                        "elementType": {
                                            "type": "reference",
                                            "id": 64,
                                            "name": "R",
                                            "qualifiedName": "R",
                                            "package": "@crawlee/core"
                                        }
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 33,
                    "name": "pushData",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 177,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 34,
                            "name": "pushData",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Stores an object or an array of objects to the dataset.\nThe function returns a promise that resolves when the operation finishes.\nIt has no result, but throws on invalid args or other errors.\n\n**IMPORTANT**: Make sure to use the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`await`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " keyword when calling "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`pushData()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ",\notherwise the crawler process might finish before the data is stored!\n\nThe size of the data is limited by the receiving API and therefore "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`pushData()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will only\nallow objects whose JSON representation is smaller than 9MB. When an array is passed,\nnone of the included objects\nmay be larger than 9MB, but the array itself may be of any size.\n\nThe function internally\nchunks the array into separate items and pushes them sequentially.\nThe chunking process is stable (keeps order of data), but it does not provide a transaction\nsafety mechanism. Therefore, in the event of an uploading error (after several automatic retries),\nthe function's Promise will reject and the dataset will be left in a state where some of\nthe items have already been saved to the dataset while other items from the source array were not.\nTo overcome this limitation, the developer may, for example, read the last item saved in the dataset\nand re-attempt the save of the data from this item onwards to prevent duplicates."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 35,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Object or array of objects containing data to be stored in the default dataset.\n  The objects must be serializable to JSON and the JSON representation of each object must be smaller than 9MB."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "name": "Data",
                                                "qualifiedName": "Dataset.Data",
                                                "package": "@crawlee/core"
                                            },
                                            {
                                                "type": "array",
                                                "elementType": {
                                                    "type": "reference",
                                                    "name": "Data",
                                                    "qualifiedName": "Dataset.Data",
                                                    "package": "@crawlee/core"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 67,
                    "name": "reduce",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 292,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 68,
                            "name": "reduce",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Reduces a list of values down to a single value.\n\nMemo is the initial state of the reduction, and each successive step of it should be returned by "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nThe "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is passed three arguments: the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`memo`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", then the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`value`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`index`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " of the iteration.\n\nIf no "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`memo`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is passed to the initial invocation of reduce, the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is not invoked on the first element of the list.\nThe first element is instead passed as the memo in the invocation of the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " on the next element in the list.\n\nIf "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " returns a "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Promise`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " then it's awaited before a next call."
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 69,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 70,
                                    "name": "iteratee",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 106,
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "id": 69,
                                                "name": "T",
                                                "qualifiedName": "T",
                                                "package": "@crawlee/core"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "Data",
                                                "qualifiedName": "Dataset.Data",
                                                "package": "@crawlee/core"
                                            }
                                        ],
                                        "name": "DatasetReducer",
                                        "qualifiedName": "DatasetReducer",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 71,
                                    "name": "memo",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Initial state of the reduction."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 69,
                                        "name": "T",
                                        "qualifiedName": "T",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 72,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "All "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`reduce()`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " parameters."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 85,
                                        "name": "DatasetIteratorOptions",
                                        "qualifiedName": "DatasetIteratorOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 69,
                                        "name": "T",
                                        "qualifiedName": "T",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 6,
                    "name": "exportToCSV",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 222,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 7,
                            "name": "exportToCSV",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Save entire default dataset's contents into one CSV file within a key-value store."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 8,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the value to save the data in."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 9,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "An optional options object where you can provide the dataset and target KVS name."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "DatasetExportToOptions",
                                        "qualifiedName": "DatasetExportToOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 2,
                    "name": "exportToJSON",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 215,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 3,
                            "name": "exportToJSON",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Save entire default dataset's contents into one JSON file within a key-value store."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 4,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the value to save the data in."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 5,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "An optional options object where you can provide the dataset and target KVS name."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "DatasetExportToOptions",
                                        "qualifiedName": "DatasetExportToOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 19,
                    "name": "getData",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 341,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 20,
                            "name": "getData",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "DatasetContent"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " object holding the items in the dataset based on the provided parameters."
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 21,
                                    "name": "Data",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 22,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 76,
                                        "name": "DatasetDataOptions",
                                        "qualifiedName": "DatasetDataOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 117,
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "id": 21,
                                                "name": "Data",
                                                "qualifiedName": "Data",
                                                "package": "@crawlee/core"
                                            }
                                        ],
                                        "name": "DatasetContent",
                                        "qualifiedName": "DatasetContent",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 10,
                    "name": "open",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 312,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 11,
                            "name": "open",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Opens a dataset and returns a promise resolving to an instance of the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class.\n\nDatasets are used to store structured data where each object stored has the same attributes,\nsuch as online store products or real estate offers.\nThe actual data is stored either on the local filesystem or in the cloud.\n\nFor more details and code examples, see the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " class."
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 12,
                                    "name": "Data",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 13,
                                    "name": "datasetIdOrName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "ID or name of the dataset to be opened. If "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`null`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`undefined`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ",\n  the function returns the default dataset associated with the crawler run."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 14,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Storage manager options."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StorageManagerOptions",
                                        "qualifiedName": "StorageManagerOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1,
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "id": 12,
                                                "name": "Data",
                                                "qualifiedName": "Data",
                                                "package": "@crawlee/core"
                                            }
                                        ],
                                        "name": "Dataset",
                                        "qualifiedName": "Dataset",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [31, 28, 29, 32, 30]
                },
                {
                    "title": "Methods",
                    "children": [
                        73, 39, 42, 51, 47, 57, 36, 55, 62, 33, 67, 6, 2, 19, 10
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                    "line": 143,
                    "character": 21
                }
            ],
            "typeParameters": [
                {
                    "id": 75,
                    "name": "Data",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                        "isExternal": true
                    },
                    "type": {
                        "type": "reference",
                        "name": "Dictionary",
                        "qualifiedName": "Dictionary",
                        "package": "@crawlee/types"
                    },
                    "default": {
                        "type": "reference",
                        "name": "Dictionary",
                        "qualifiedName": "Dictionary",
                        "package": "@crawlee/types"
                    }
                }
            ]
        },
        {
            "id": 1575,
            "name": "KeyValueStore",
            "kind": 128,
            "kindString": "Class",
            "flags": {},
            "comment": {
                "summary": [],
                "blockTags": [
                    {
                        "tag": "@inheritDoc",
                        "content": []
                    }
                ]
            },
            "children": [
                {
                    "id": 1612,
                    "name": "config",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 72,
                            "character": 13
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "Configuration",
                        "qualifiedName": "Configuration",
                        "package": "@crawlee/core"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.config"
                    }
                },
                {
                    "id": 1613,
                    "name": "id",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 73,
                            "character": 13
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.id"
                    }
                },
                {
                    "id": 1614,
                    "name": "name",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true,
                        "isReadonly": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 74,
                            "character": 13
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.name"
                    }
                },
                {
                    "id": 1637,
                    "name": "drop",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 204,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1638,
                            "name": "drop",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Removes the key-value store either from the Apify cloud storage or from the local directory,\ndepending on the mode of operation."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreKeyValueStore.drop"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.drop"
                    }
                },
                {
                    "id": 1641,
                    "name": "forEachKey",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 228,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1642,
                            "name": "forEachKey",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Iterates over key-value store keys, yielding each in turn to an "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function.\nEach invocation of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is called with three arguments: "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`(key, index, info)`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", where "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`key`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\nis the record key, "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`index`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is a zero-based index of the key in the current iteration\n(regardless of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`options.exclusiveStartKey`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ") and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`info`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is an object that contains a single property "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`size`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\nindicating size of the record in bytes.\n\nIf the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`iteratee`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function returns a Promise then it is awaited before the next call.\nIf it throws an error, the iteration is aborted and the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`forEachKey`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function throws the error.\n\n**Example usage**\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```javascript\nconst keyValueStore = await KeyValueStore.open();\nawait keyValueStore.forEachKey(async (key, index, info) => {\n  console.log(`Key at ${index}: ${key} has size ${info.size}`);\n});\n```"
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 1643,
                                    "name": "iteratee",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "A function that is called for every key in the key-value store."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 224,
                                        "name": "KeyConsumer",
                                        "qualifiedName": "KeyConsumer",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 1644,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "All "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`forEachKey()`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " parameters."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 237,
                                        "name": "KeyValueStoreIteratorOptions",
                                        "qualifiedName": "KeyValueStoreIteratorOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreKeyValueStore.forEachKey"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.forEachKey"
                    }
                },
                {
                    "id": 1626,
                    "name": "getAutoSavedValue",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 154,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1627,
                            "name": "getAutoSavedValue",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "typeParameter": [
                                {
                                    "id": 1628,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 1629,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1630,
                                    "name": "defaultValue",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1628,
                                        "name": "T",
                                        "qualifiedName": "T",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1628,
                                        "name": "T",
                                        "qualifiedName": "T",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreKeyValueStore.getAutoSavedValue"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.getAutoSavedValue"
                    }
                },
                {
                    "id": 1609,
                    "name": "getPublicUrl",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/key_value_store.ts",
                            "line": 17,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/key_value_store.ts#L17"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1610,
                            "name": "getPublicUrl",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a URL for the given key that may be used to publicly\naccess the value in the remote key-value store."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 1611,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        }
                    ]
                },
                {
                    "id": 1615,
                    "name": "getValue",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 113,
                            "character": 4
                        },
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 146,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1616,
                            "name": "getValue",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Gets a value from the key-value store.\n\nThe function returns a "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Promise`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " that resolves to the record value,\nwhose JavaScript type depends on the MIME content type of the record.\nRecords with the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`application/json`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\ncontent type are automatically parsed and returned as a JavaScript object.\nSimilarly, records with "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`text/plain`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " content types are returned as a string.\nFor all other content types, the value is returned as a raw\n["
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Buffer`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "](https://nodejs.org/api/buffer.html) instance.\n\nIf the record does not exist, the function resolves to "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`null`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nTo save or delete a value in the key-value store, use the\n"
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore.setValue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function.\n\n**Example usage:**\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```javascript\nconst store = await KeyValueStore.open();\nconst buffer = await store.getValue('screenshot1.png');\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Returns a promise that resolves to an object, string\n  or ["
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`Buffer`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "](https://nodejs.org/api/buffer.html), depending\n  on the MIME content type of the record."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 1617,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "default": {
                                        "type": "intrinsic",
                                        "name": "unknown"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 1618,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Unique key of the record. It can be at most 256 characters long and only consist\n  of the following characters: "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`a`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "-"
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`z`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`A`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "-"
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`Z`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`0`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "-"
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`9`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " and "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`!-_.'()`"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "reference",
                                                "id": 1617,
                                                "name": "T",
                                                "qualifiedName": "T",
                                                "package": "@crawlee/core"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreKeyValueStore.getValue"
                            }
                        },
                        {
                            "id": 1619,
                            "name": "getValue",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Gets a value from the key-value store.\n\nThe function returns a "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Promise`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " that resolves to the record value,\nwhose JavaScript type depends on the MIME content type of the record.\nRecords with the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`application/json`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\ncontent type are automatically parsed and returned as a JavaScript object.\nSimilarly, records with "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`text/plain`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " content types are returned as a string.\nFor all other content types, the value is returned as a raw\n["
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Buffer`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "](https://nodejs.org/api/buffer.html) instance.\n\nIf the record does not exist, the function resolves to "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`null`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nTo save or delete a value in the key-value store, use the\n"
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore.setValue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function.\n\n**Example usage:**\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```javascript\nconst store = await KeyValueStore.open();\nconst buffer = await store.getValue('screenshot1.png');\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Returns a promise that resolves to an object, string\n  or ["
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`Buffer`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "](https://nodejs.org/api/buffer.html), depending\n  on the MIME content type of the record, or the default value if the key is missing from the store."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 1620,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "default": {
                                        "type": "intrinsic",
                                        "name": "unknown"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 1621,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Unique key of the record. It can be at most 256 characters long and only consist\n  of the following characters: "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`a`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "-"
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`z`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`A`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "-"
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`Z`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`0`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "-"
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`9`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " and "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`!-_.'()`"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1622,
                                    "name": "defaultValue",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Fallback that will be returned if no value if present in the storage."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1620,
                                        "name": "T",
                                        "qualifiedName": "T",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1620,
                                        "name": "T",
                                        "qualifiedName": "T",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreKeyValueStore.getValue"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.getValue"
                    }
                },
                {
                    "id": 1623,
                    "name": "recordExists",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 153,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1624,
                            "name": "recordExists",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Tests whether a record with the given key exists in the key-value store without retrieving its value."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "code",
                                                "text": "`true`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " if the record exists, "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`false`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " if it does not."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 1625,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The queried record key."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreKeyValueStore.recordExists"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.recordExists"
                    }
                },
                {
                    "id": 1631,
                    "name": "setValue",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 199,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1632,
                            "name": "setValue",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Saves or deletes a record in the key-value store.\nThe function returns a promise that resolves once the record has been saved or deleted.\n\n**Example usage:**\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```javascript\nconst store = await KeyValueStore.open();\nawait store.setValue('OUTPUT', { foo: 'bar' });\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nBeware that the key can be at most 256 characters long and only contain the following characters: "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`a-zA-Z0-9!-_.'()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nBy default, "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`value`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is converted to JSON and stored with the\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`application/json; charset=utf-8`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " MIME content type.\nTo store the value with another content type, pass it in the options as follows:\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```javascript\nconst store = await KeyValueStore.open('my-text-store');\nawait store.setValue('RESULTS', 'my text data', { contentType: 'text/plain' });\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\nIf you set custom content type, "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`value`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " must be either a string or\n["
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Buffer`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "](https://nodejs.org/api/buffer.html), otherwise an error will be thrown.\n\nIf "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`value`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`null`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", the record is deleted instead. Note that the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`setValue()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function succeeds\nregardless whether the record existed or not.\n\nTo retrieve a value from the key-value store, use the\n"
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore.getValue"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function.\n\n**IMPORTANT:** Always make sure to use the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`await`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " keyword when calling "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`setValue()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ",\notherwise the crawler process might finish before the value is stored!"
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 1633,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 1634,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Unique key of the record. It can be at most 256 characters long and only consist\n  of the following characters: "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`a`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "-"
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`z`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`A`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "-"
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`Z`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`0`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "-"
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`9`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " and "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`!-_.'()`"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1635,
                                    "name": "value",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Record data, which can be one of the following values:\n   - If "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`null`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", the record in the key-value store is deleted.\n   - If no "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`options.contentType`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " is specified, "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`value`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " can be any JavaScript object and it will be stringified to JSON.\n   - If "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`options.contentType`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " is set, "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`value`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " is taken as is and it must be a "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`String`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or ["
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`Buffer`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "](https://nodejs.org/api/buffer.html).\n  For any other value an error will be thrown."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "reference",
                                                "id": 1633,
                                                "name": "T",
                                                "qualifiedName": "T",
                                                "package": "@crawlee/core"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1636,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Record options."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 235,
                                        "name": "RecordOptions",
                                        "qualifiedName": "RecordOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreKeyValueStore.setValue"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.setValue"
                    }
                },
                {
                    "id": 1591,
                    "name": "getAutoSavedValue",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 309,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1592,
                            "name": "getAutoSavedValue",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "typeParameter": [
                                {
                                    "id": 1593,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 1594,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 1595,
                                    "name": "defaultValue",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 1593,
                                        "name": "T",
                                        "qualifiedName": "T",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1593,
                                        "name": "T",
                                        "qualifiedName": "T",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreKeyValueStore.getAutoSavedValue"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.getAutoSavedValue"
                    }
                },
                {
                    "id": 1576,
                    "name": "open",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/key_value_store.ts",
                            "line": 28,
                            "character": 26,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/key_value_store.ts#L28"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1577,
                            "name": "open",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [],
                                "blockTags": [
                                    {
                                        "tag": "@inheritDoc",
                                        "content": []
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 1578,
                                    "name": "storeIdOrName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1579,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "name": "StorageManagerOptions",
                                        "qualifiedName": "StorageManagerOptions",
                                        "package": "@crawlee/core"
                                    },
                                    "defaultValue": "{}"
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1575,
                                        "name": "KeyValueStore"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "CoreKeyValueStore.open"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.open"
                    }
                },
                {
                    "id": 1588,
                    "name": "recordExists",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 308,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1589,
                            "name": "recordExists",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Tests whether a record with the given key exists in the default "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " associated with the current crawler run."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "code",
                                                "text": "`true`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " if the record exists, "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`false`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " if it does not."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 1590,
                                    "name": "key",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The queried record key."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "CoreKeyValueStore.recordExists"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreKeyValueStore.recordExists"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1612, 1613, 1614]
                },
                {
                    "title": "Methods",
                    "children": [
                        1637, 1641, 1626, 1609, 1615, 1623, 1631, 1591, 1576,
                        1588
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/key_value_store.ts",
                    "line": 12,
                    "character": 13,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/key_value_store.ts#L12"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "KeyValueStore",
                    "qualifiedName": "KeyValueStore",
                    "package": "@crawlee/core"
                }
            ]
        },
        {
            "id": 240,
            "name": "Log",
            "kind": 128,
            "kindString": "Class",
            "flags": {
                "isExternal": true
            },
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "The log instance enables level aware logging of messages and we advise\nto use it instead of "
                    },
                    {
                        "kind": "code",
                        "text": "`console.log()`"
                    },
                    {
                        "kind": "text",
                        "text": " and its aliases in most development\nscenarios.\n\nA very useful use case for "
                    },
                    {
                        "kind": "code",
                        "text": "`log`"
                    },
                    {
                        "kind": "text",
                        "text": " is using "
                    },
                    {
                        "kind": "code",
                        "text": "`log.debug`"
                    },
                    {
                        "kind": "text",
                        "text": " liberally throughout\nthe codebase to get useful logging messages only when appropriate log level is set\nand keeping the console tidy in production environments.\n\nThe available logging levels are, in this order: "
                    },
                    {
                        "kind": "code",
                        "text": "`DEBUG`"
                    },
                    {
                        "kind": "text",
                        "text": ", "
                    },
                    {
                        "kind": "code",
                        "text": "`INFO`"
                    },
                    {
                        "kind": "text",
                        "text": ", "
                    },
                    {
                        "kind": "code",
                        "text": "`WARNING`"
                    },
                    {
                        "kind": "text",
                        "text": ", "
                    },
                    {
                        "kind": "code",
                        "text": "`ERROR`"
                    },
                    {
                        "kind": "text",
                        "text": ", "
                    },
                    {
                        "kind": "code",
                        "text": "`OFF`"
                    },
                    {
                        "kind": "text",
                        "text": "\nand can be referenced from the "
                    },
                    {
                        "kind": "code",
                        "text": "`log.LEVELS`"
                    },
                    {
                        "kind": "text",
                        "text": " constant, such as "
                    },
                    {
                        "kind": "code",
                        "text": "`log.LEVELS.ERROR`"
                    },
                    {
                        "kind": "text",
                        "text": ".\n\nTo log messages to the system console, use the "
                    },
                    {
                        "kind": "code",
                        "text": "`log.level(message)`"
                    },
                    {
                        "kind": "text",
                        "text": " invocation,\nsuch as "
                    },
                    {
                        "kind": "code",
                        "text": "`log.debug('this is a debug message')`"
                    },
                    {
                        "kind": "text",
                        "text": ".\n\nTo prevent writing of messages above a certain log level to the console, simply\nset the appropriate level. The default log level is "
                    },
                    {
                        "kind": "code",
                        "text": "`INFO`"
                    },
                    {
                        "kind": "text",
                        "text": ", which means that\n"
                    },
                    {
                        "kind": "code",
                        "text": "`DEBUG`"
                    },
                    {
                        "kind": "text",
                        "text": " messages will not be printed, unless enabled.\n\n**Example:**\n"
                    },
                    {
                        "kind": "code",
                        "text": "```js\nimport log from '@apify/log';\n\n// importing from the Apify SDK or Crawlee is also supported:\n// import { log } from 'apify';\n// import { log } from 'crawlee';\n\nlog.info('Information message', { someData: 123 }); // prints message\nlog.debug('Debug message', { debugData: 'hello' }); // doesn't print anything\n\nlog.setLevel(log.LEVELS.DEBUG);\nlog.debug('Debug message'); // prints message\n\nlog.setLevel(log.LEVELS.ERROR);\nlog.debug('Debug message'); // doesn't print anything\nlog.info('Info message'); // doesn't print anything\nlog.error('Error message', { errorDetails: 'This is bad!' }); // prints message\n\ntry {\n  throw new Error('Not good!');\n} catch (e) {\n  log.exception(e, 'Exception occurred', { errorDetails: 'This is really bad!' }); // prints message\n}\n\nlog.setOptions({ prefix: 'My actor' });\nlog.info('I am running!'); // prints \"My actor: I am running\"\n\nconst childLog = log.child({ prefix: 'Crawler' });\nlog.info('I am crawling!'); // prints \"My actor:Crawler: I am crawling\"\n```"
                    },
                    {
                        "kind": "text",
                        "text": "\n\nAnother very useful way of setting the log level is by setting the "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_LOG_LEVEL`"
                    },
                    {
                        "kind": "text",
                        "text": "\nenvironment variable, such as "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_LOG_LEVEL=DEBUG`"
                    },
                    {
                        "kind": "text",
                        "text": ". This way, no code changes\nare necessary to turn on your debug messages and start debugging right away.\n\nTo add timestamps to your logs, you can override the default logger settings:\n"
                    },
                    {
                        "kind": "code",
                        "text": "```js\nlog.setOptions({\n    logger: new log.LoggerText({ skipTime: false }),\n});\n```"
                    },
                    {
                        "kind": "text",
                        "text": "\nYou can customize your logging further by extending or replacing the default\nlogger instances with your own implementations."
                    }
                ]
            },
            "children": [
                {
                    "id": 241,
                    "name": "constructor",
                    "kind": 512,
                    "kindString": "Constructor",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 136,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 242,
                            "name": "new Log",
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 243,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "id": 302,
                                                "name": "LoggerOptions",
                                                "qualifiedName": "LoggerOptions",
                                                "package": "@apify/log"
                                            }
                                        ],
                                        "name": "Partial",
                                        "qualifiedName": "Partial",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 240,
                                "name": "Log",
                                "qualifiedName": "Log",
                                "package": "@apify/log"
                            }
                        }
                    ]
                },
                {
                    "id": 244,
                    "name": "LEVELS",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Map of available log levels that's useful for easy setting of appropriate log levels.\nEach log level is represented internally by a number. Eg. "
                            },
                            {
                                "kind": "code",
                                "text": "`log.LEVELS.DEBUG === 5`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 133,
                            "character": 13
                        }
                    ],
                    "type": {
                        "type": "query",
                        "queryType": {
                            "type": "reference",
                            "id": 310,
                            "name": "LogLevel",
                            "qualifiedName": "LogLevel",
                            "package": "@apify/log"
                        }
                    }
                },
                {
                    "id": 264,
                    "name": "child",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 168,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 265,
                            "name": "child",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Creates a new instance of logger that inherits settings from a parent logger."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 266,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "id": 302,
                                                "name": "LoggerOptions",
                                                "qualifiedName": "LoggerOptions",
                                                "package": "@apify/log"
                                            }
                                        ],
                                        "name": "Partial",
                                        "qualifiedName": "Partial",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 240,
                                "name": "Log",
                                "qualifiedName": "Log",
                                "package": "@apify/log"
                            }
                        }
                    ]
                },
                {
                    "id": 288,
                    "name": "debug",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 195,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 289,
                            "name": "debug",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Logs a "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`DEBUG`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " message. By default, it will not be written to the console. To see "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`DEBUG`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\nmessages in the console, set the log level to "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`DEBUG`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " either using the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`log.setLevel(log.LEVELS.DEBUG)`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\nmethod or using the environment variable "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`APIFY_LOG_LEVEL=DEBUG`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". Data are stringified and appended\nto the message."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 290,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 291,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "AdditionalData",
                                        "qualifiedName": "AdditionalData",
                                        "package": "@apify/log"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 299,
                    "name": "deprecated",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 204,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 300,
                            "name": "deprecated",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Logs given message only once as WARNING. It's used to warn user that some feature he is using has been deprecated."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 301,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 267,
                    "name": "error",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 173,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 268,
                            "name": "error",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Logs an "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`ERROR`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " message. Use this method to log error messages that are not directly connected\nto an exception. For logging exceptions, use the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`log.exception`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 269,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 270,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "AdditionalData",
                                        "qualifiedName": "AdditionalData",
                                        "package": "@apify/log"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 271,
                    "name": "exception",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 178,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 272,
                            "name": "exception",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Logs an "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`ERROR`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " level message with a nicely formatted exception. Note that the exception is the first parameter\nhere and an additional message is only optional."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 273,
                                    "name": "exception",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Error",
                                        "qualifiedName": "Error",
                                        "package": "typescript"
                                    }
                                },
                                {
                                    "id": 274,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 275,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "AdditionalData",
                                        "qualifiedName": "AdditionalData",
                                        "package": "@apify/log"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 248,
                    "name": "getLevel",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 144,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 249,
                            "name": "getLevel",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the currently selected logging level. This is useful for checking whether a message\nwill actually be printed to the console before one actually performs a resource intensive operation\nto construct the message, such as querying a DB for some metadata that need to be added. If the log\nlevel is not high enough at the moment, it doesn't make sense to execute the query."
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            }
                        }
                    ]
                },
                {
                    "id": 262,
                    "name": "getOptions",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 164,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 263,
                            "name": "getOptions",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the logger configuration."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 302,
                                        "name": "LoggerOptions",
                                        "qualifiedName": "LoggerOptions",
                                        "package": "@apify/log"
                                    }
                                ],
                                "name": "Required",
                                "qualifiedName": "Required",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 284,
                    "name": "info",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 188,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 285,
                            "name": "info",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Logs an "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`INFO`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " message. "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`INFO`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is the default log level so info messages will be always logged,\nunless the log level is changed. Data are stringified and appended to the message."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 286,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 287,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "AdditionalData",
                                        "qualifiedName": "AdditionalData",
                                        "package": "@apify/log"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 253,
                    "name": "internal",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 156,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 254,
                            "name": "internal",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 255,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                },
                                {
                                    "id": 256,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 257,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                },
                                {
                                    "id": 258,
                                    "name": "exception",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 292,
                    "name": "perf",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 196,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 293,
                            "name": "perf",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 294,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 295,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "AdditionalData",
                                        "qualifiedName": "AdditionalData",
                                        "package": "@apify/log"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 250,
                    "name": "setLevel",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 155,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 251,
                            "name": "setLevel",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Sets the log level to the given value, preventing messages from less important log levels\nfrom being printed to the console. Use in conjunction with the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`log.LEVELS`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " constants such as\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```\nlog.setLevel(log.LEVELS.DEBUG);\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nDefault log level is INFO."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 252,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 259,
                    "name": "setOptions",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 160,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 260,
                            "name": "setOptions",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Configures logger."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 261,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "reference",
                                                "id": 302,
                                                "name": "LoggerOptions",
                                                "qualifiedName": "LoggerOptions",
                                                "package": "@apify/log"
                                            }
                                        ],
                                        "name": "Partial",
                                        "qualifiedName": "Partial",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 276,
                    "name": "softFail",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 179,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 277,
                            "name": "softFail",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 278,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 279,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "AdditionalData",
                                        "qualifiedName": "AdditionalData",
                                        "package": "@apify/log"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 280,
                    "name": "warning",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 183,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 281,
                            "name": "warning",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Logs a "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`WARNING`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " level message. Data are stringified and appended to the message."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 282,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 283,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "AdditionalData",
                                        "qualifiedName": "AdditionalData",
                                        "package": "@apify/log"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 296,
                    "name": "warningOnce",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 200,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 297,
                            "name": "warningOnce",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Logs a "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`WARNING`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " level message only once."
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 298,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                }
            ],
            "groups": [
                {
                    "title": "Constructors",
                    "children": [241]
                },
                {
                    "title": "Properties",
                    "children": [244]
                },
                {
                    "title": "Methods",
                    "children": [
                        264, 288, 299, 267, 271, 248, 262, 284, 253, 292, 250,
                        259, 276, 280, 296
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                    "line": 128,
                    "character": 14
                }
            ]
        },
        {
            "id": 318,
            "name": "Logger",
            "kind": 128,
            "kindString": "Class",
            "flags": {
                "isExternal": true
            },
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "This is an abstract class that should\nbe extended by custom logger classes.\n\nthis._log() method must be implemented by them."
                    }
                ]
            },
            "children": [
                {
                    "id": 359,
                    "name": "constructor",
                    "kind": 512,
                    "kindString": "Constructor",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 33,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 360,
                            "name": "new Logger",
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 361,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        ],
                                        "name": "Record",
                                        "qualifiedName": "Record",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 318,
                                "name": "Logger",
                                "qualifiedName": "Logger",
                                "package": "@apify/log"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "EventEmitter.constructor"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "EventEmitter.constructor"
                    }
                },
                {
                    "id": 356,
                    "name": "captureRejectionSymbol",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Value: "
                            },
                            {
                                "kind": "code",
                                "text": "`Symbol.for('nodejs.rejection')`"
                            },
                            {
                                "kind": "text",
                                "text": "\n\nSee how to write a custom "
                            },
                            {
                                "kind": "code",
                                "text": "`rejection handler`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v13.4.0, v12.16.0"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 402,
                            "character": 24
                        }
                    ],
                    "type": {
                        "type": "query",
                        "queryType": {
                            "type": "reference",
                            "id": 356,
                            "name": "captureRejectionSymbol",
                            "qualifiedName": "EventEmitter.captureRejectionSymbol",
                            "package": "@types/node"
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.captureRejectionSymbol"
                    }
                },
                {
                    "id": 357,
                    "name": "captureRejections",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
                            },
                            {
                                "kind": "code",
                                "text": "`captureRejections`"
                            },
                            {
                                "kind": "text",
                                "text": " option on all new "
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " objects."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v13.4.0, v12.16.0"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 409,
                            "character": 15
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.captureRejections"
                    }
                },
                {
                    "id": 358,
                    "name": "defaultMaxListeners",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "By default, a maximum of "
                            },
                            {
                                "kind": "code",
                                "text": "`10`"
                            },
                            {
                                "kind": "text",
                                "text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instances\nusing the "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.setMaxListeners(n)`"
                            },
                            {
                                "kind": "text",
                                "text": " method. To change the default\nfor _all_"
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instances, the "
                            },
                            {
                                "kind": "code",
                                "text": "`events.defaultMaxListeners`"
                            },
                            {
                                "kind": "text",
                                "text": "property can be used. If this value is not a positive number, a "
                            },
                            {
                                "kind": "code",
                                "text": "`RangeError`"
                            },
                            {
                                "kind": "text",
                                "text": "is thrown.\n\nTake caution when setting the "
                            },
                            {
                                "kind": "code",
                                "text": "`events.defaultMaxListeners`"
                            },
                            {
                                "kind": "text",
                                "text": " because the\nchange affects _all_"
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instances, including those created before\nthe change is made. However, calling "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.setMaxListeners(n)`"
                            },
                            {
                                "kind": "text",
                                "text": " still has\nprecedence over "
                            },
                            {
                                "kind": "code",
                                "text": "`events.defaultMaxListeners`"
                            },
                            {
                                "kind": "text",
                                "text": ".\n\nThis is not a hard limit. The "
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": ", the "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.getMaxListeners()`"
                            },
                            {
                                "kind": "text",
                                "text": " and "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.setMaxListeners()`"
                            },
                            {
                                "kind": "text",
                                "text": "methods can be used to\ntemporarily avoid this warning:\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\nThe "
                            },
                            {
                                "kind": "code",
                                "text": "`--trace-warnings`"
                            },
                            {
                                "kind": "text",
                                "text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
                            },
                            {
                                "kind": "code",
                                "text": "`process.on('warning')`"
                            },
                            {
                                "kind": "text",
                                "text": " and will\nhave the additional "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter`"
                            },
                            {
                                "kind": "text",
                                "text": ", "
                            },
                            {
                                "kind": "code",
                                "text": "`type`"
                            },
                            {
                                "kind": "text",
                                "text": ", and "
                            },
                            {
                                "kind": "code",
                                "text": "`count`"
                            },
                            {
                                "kind": "text",
                                "text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
                            },
                            {
                                "kind": "code",
                                "text": "`name`"
                            },
                            {
                                "kind": "text",
                                "text": " property is set to "
                            },
                            {
                                "kind": "code",
                                "text": "`'MaxListenersExceededWarning'`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v0.11.2"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 446,
                            "character": 15
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.defaultMaxListeners"
                    }
                },
                {
                    "id": 355,
                    "name": "errorMonitor",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "This symbol shall be used to install a listener for only monitoring "
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": "events. Listeners installed using this symbol are called before the regular"
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": " event is emitted. Therefore, the process will still crash if no\nregular "
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": " listener is installed."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v13.6.0, v12.17.0"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 395,
                            "character": 24
                        }
                    ],
                    "type": {
                        "type": "query",
                        "queryType": {
                            "type": "reference",
                            "id": 355,
                            "name": "errorMonitor",
                            "qualifiedName": "EventEmitter.errorMonitor",
                            "package": "@types/node"
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.errorMonitor"
                    }
                },
                {
                    "id": 384,
                    "name": "[captureRejectionSymbol]",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 112,
                            "character": 8
                        }
                    ],
                    "signatures": [
                        {
                            "id": 385,
                            "name": "[captureRejectionSymbol]",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 386,
                                    "name": "error",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Error",
                                        "qualifiedName": "Error",
                                        "package": "typescript"
                                    }
                                },
                                {
                                    "id": 387,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 388,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.__@captureRejectionSymbol@608"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.__@captureRejectionSymbol@608"
                    }
                },
                {
                    "id": 372,
                    "name": "_log",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 37,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 373,
                            "name": "_log",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 374,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                },
                                {
                                    "id": 375,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 376,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                },
                                {
                                    "id": 377,
                                    "name": "exception",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "unknown"
                                    }
                                },
                                {
                                    "id": 378,
                                    "name": "opts",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        ],
                                        "name": "Record",
                                        "qualifiedName": "Record",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 368,
                    "name": "_outputWithConsole",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 36,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 369,
                            "name": "_outputWithConsole",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 370,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                },
                                {
                                    "id": 371,
                                    "name": "line",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 389,
                    "name": "addListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 545,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 390,
                            "name": "addListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Alias for "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.on(eventName, listener)`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 391,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 392,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 393,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 545,
                                                    "character": 66
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 394,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 395,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 318,
                                "name": "Logger",
                                "qualifiedName": "Logger",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.addListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.addListener"
                    }
                },
                {
                    "id": 438,
                    "name": "emit",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 807,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 439,
                            "name": "emit",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Synchronously calls each of the listeners registered for the event named"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`true`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " if the event had listeners, "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`false`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " otherwise.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 440,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 441,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.emit"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.emit"
                    }
                },
                {
                    "id": 460,
                    "name": "eventNames",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 870,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 461,
                            "name": "eventNames",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Symbol`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v6.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "intrinsic",
                                            "name": "string"
                                        },
                                        {
                                            "type": "intrinsic",
                                            "name": "symbol"
                                        }
                                    ]
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.eventNames"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.eventNames"
                    }
                },
                {
                    "id": 430,
                    "name": "getMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 722,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 431,
                            "name": "getMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the current max listener value for the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " which is either\nset by "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.setMaxListeners(n)`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " or defaults to "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "defaultMaxListeners",
                                        "target": 358
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v1.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.getMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.getMaxListeners"
                    }
                },
                {
                    "id": 366,
                    "name": "getOptions",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 35,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 367,
                            "name": "getOptions",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "string"
                                    },
                                    {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                ],
                                "name": "Record",
                                "qualifiedName": "Record",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 442,
                    "name": "listenerCount",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 816,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 443,
                            "name": "listenerCount",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the number of listeners listening for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nIf "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v3.2.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 444,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event being listened for"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 445,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The event handler function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Function",
                                        "qualifiedName": "Function",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.listenerCount"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.listenerCount"
                    }
                },
                {
                    "id": 432,
                    "name": "listeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 735,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 433,
                            "name": "listeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a copy of the array of listeners for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 434,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "reference",
                                    "name": "Function",
                                    "qualifiedName": "Function",
                                    "package": "typescript"
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.listeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.listeners"
                    }
                },
                {
                    "id": 379,
                    "name": "log",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 38,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 380,
                            "name": "log",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 381,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                },
                                {
                                    "id": 382,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 383,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 417,
                    "name": "off",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 695,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 418,
                            "name": "off",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Alias for "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v10.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 419,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 420,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 421,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 695,
                                                    "character": 58
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 422,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 423,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 318,
                                "name": "Logger",
                                "qualifiedName": "Logger",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.off"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.off"
                    }
                },
                {
                    "id": 396,
                    "name": "on",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 577,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 397,
                            "name": "on",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function to the end of the listeners array for the\nevent named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". No checks are made to see if the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " has\nalready been added. Multiple calls passing the same combination of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will result in the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " being added, and called, multiple\ntimes.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.prependListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.101"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 398,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 399,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 400,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 577,
                                                    "character": 57
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 401,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 402,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 318,
                                "name": "Logger",
                                "qualifiedName": "Logger",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.on"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.on"
                    }
                },
                {
                    "id": 403,
                    "name": "once",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 607,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 404,
                            "name": "once",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds a **one-time**"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". The\nnext time "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is triggered, this listener is removed and then invoked.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.prependOnceListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.3.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 405,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 406,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 407,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 607,
                                                    "character": 59
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 408,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 409,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 318,
                                "name": "Logger",
                                "qualifiedName": "Logger",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.once"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.once"
                    }
                },
                {
                    "id": 446,
                    "name": "prependListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 834,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 447,
                            "name": "prependListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function to the _beginning_ of the listeners array for the\nevent named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". No checks are made to see if the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " has\nalready been added. Multiple calls passing the same combination of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will result in the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " being added, and called, multiple\ntimes.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v6.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 448,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 449,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 450,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 834,
                                                    "character": 70
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 451,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 452,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 318,
                                "name": "Logger",
                                "qualifiedName": "Logger",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.prependListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.prependListener"
                    }
                },
                {
                    "id": 453,
                    "name": "prependOnceListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 850,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 454,
                            "name": "prependOnceListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds a **one-time**"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " to the _beginning_ of the listeners array. The next time "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v6.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 455,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 456,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 457,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 850,
                                                    "character": 74
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 458,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 459,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 318,
                                "name": "Logger",
                                "qualifiedName": "Logger",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.prependOnceListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.prependOnceListener"
                    }
                },
                {
                    "id": 435,
                    "name": "rawListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 766,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 436,
                            "name": "rawListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a copy of the array of listeners for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ",\nincluding any wrappers (such as those created by "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`.once()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ").\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v9.4.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 437,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "reference",
                                    "name": "Function",
                                    "qualifiedName": "Function",
                                    "package": "typescript"
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.rawListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.rawListeners"
                    }
                },
                {
                    "id": 424,
                    "name": "removeAllListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 706,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 425,
                            "name": "removeAllListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Removes all listeners, or those of the specified "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 426,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 318,
                                "name": "Logger",
                                "qualifiedName": "Logger",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.removeAllListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.removeAllListeners"
                    }
                },
                {
                    "id": 410,
                    "name": "removeListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 690,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 411,
                            "name": "removeListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Removes the specified "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " from the listener array for the event named"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", then "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " or "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeAllListeners()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emit()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " in progress. Subsequent events behave as expected.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.listeners()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will remove the most\nrecently added instance. In the example the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`once('ping')`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "listener is removed:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 412,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 413,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 414,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 690,
                                                    "character": 69
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 415,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 416,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 318,
                                "name": "Logger",
                                "qualifiedName": "Logger",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.removeListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.removeListener"
                    }
                },
                {
                    "id": 427,
                    "name": "setMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 716,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 428,
                            "name": "setMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "By default "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s will print a warning if more than "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`10`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.setMaxListeners()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method allows the limit to be\nmodified for this specific "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance. The value can be set to"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Infinity`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " (or "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`0`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.3.5"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 429,
                                    "name": "n",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 318,
                                "name": "Logger",
                                "qualifiedName": "Logger",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.setMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.setMaxListeners"
                    }
                },
                {
                    "id": 363,
                    "name": "setOptions",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 34,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 364,
                            "name": "setOptions",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 365,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        ],
                                        "name": "Record",
                                        "qualifiedName": "Record",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        }
                    ]
                },
                {
                    "id": 348,
                    "name": "addAbortListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 387,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 349,
                            "name": "addAbortListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Listens once to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`abort`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event on the provided "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`signal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nListening to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`abort`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`e.stopImmediatePropagation()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AbortSignal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`stopImmediatePropagation`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v20.5.0"
                                            }
                                        ]
                                    },
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Disposable that removes the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`abort`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " listener."
                                            }
                                        ]
                                    }
                                ],
                                "modifierTags": ["@experimental"]
                            },
                            "parameters": [
                                {
                                    "id": 350,
                                    "name": "signal",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "AbortSignal",
                                        "qualifiedName": "AbortSignal",
                                        "package": "typescript"
                                    }
                                },
                                {
                                    "id": 351,
                                    "name": "resource",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 352,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 387,
                                                    "character": 63
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 353,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 354,
                                                            "name": "event",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true
                                                            },
                                                            "type": {
                                                                "type": "reference",
                                                                "name": "Event",
                                                                "qualifiedName": "Event",
                                                                "package": "typescript"
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "Disposable",
                                "qualifiedName": "global.Disposable",
                                "package": "@types/node"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.addAbortListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.addAbortListener"
                    }
                },
                {
                    "id": 337,
                    "name": "getEventListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 308,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 338,
                            "name": "getEventListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a copy of the array of listeners for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this behaves exactly the same as calling "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`.listeners`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " on\nthe emitter.\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventTarget`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v15.2.0, v14.17.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 339,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "name": "_DOMEventTarget",
                                                "qualifiedName": "_DOMEventTarget",
                                                "package": "@types/node"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "EventEmitter",
                                                "qualifiedName": "global.NodeJS.EventEmitter",
                                                "package": "@types/node"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 340,
                                    "name": "name",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "reference",
                                    "name": "Function",
                                    "qualifiedName": "Function",
                                    "package": "typescript"
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.getEventListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.getEventListeners"
                    }
                },
                {
                    "id": 341,
                    "name": "getMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 337,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 342,
                            "name": "getMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the currently set max amount of listeners.\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this behaves exactly the same as calling "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`.getMaxListeners`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " on\nthe emitter.\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventTarget`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v19.9.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 343,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "name": "_DOMEventTarget",
                                                "qualifiedName": "_DOMEventTarget",
                                                "package": "@types/node"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "EventEmitter",
                                                "qualifiedName": "global.NodeJS.EventEmitter",
                                                "package": "@types/node"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.getMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.getMaxListeners"
                    }
                },
                {
                    "id": 333,
                    "name": "listenerCount",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 280,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 334,
                            "name": "listenerCount",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "A class method that returns the number of listeners for the given "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "registered on the given "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.9.12"
                                            }
                                        ]
                                    },
                                    {
                                        "tag": "@deprecated",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Since v3.2.0 - Use "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`listenerCount`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " instead."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 335,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The emitter to query"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "EventEmitter",
                                        "qualifiedName": "global.NodeJS.EventEmitter",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 336,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The event name"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.listenerCount"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.listenerCount"
                    }
                },
                {
                    "id": 328,
                    "name": "on",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 258,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 329,
                            "name": "on",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns an "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AsyncIterator`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " that iterates "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " events. It will throw\nif the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " emits "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". It removes all listeners when\nexiting the loop. The "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`value`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AbortSignal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " can be used to cancel waiting on events:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v13.6.0, v12.16.0"
                                            }
                                        ]
                                    },
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "that iterates "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`eventName`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " events emitted by the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`emitter`"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 330,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "EventEmitter",
                                        "qualifiedName": "global.NodeJS.EventEmitter",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 331,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event being listened for"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 332,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StaticEventEmitterOptions",
                                        "qualifiedName": "StaticEventEmitterOptions",
                                        "package": "@types/node"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                ],
                                "name": "AsyncIterableIterator",
                                "qualifiedName": "AsyncIterableIterator",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.on"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.on"
                    }
                },
                {
                    "id": 319,
                    "name": "once",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 193,
                            "character": 15
                        },
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 198,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 320,
                            "name": "once",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Creates a "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Promise`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " that is fulfilled when the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " emits the given\nevent or that is rejected if the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " emits "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " while waiting.\nThe "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Promise`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event\nsemantics and does not listen to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nThe special handling of the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event is only used when "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`events.once()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "is used to wait for another event. If "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`events.once()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is used to wait for the\n'"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nAn "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AbortSignal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " can be used to cancel waiting for the event:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v11.13.0, v10.16.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 321,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "_NodeEventTarget",
                                        "qualifiedName": "_NodeEventTarget",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 322,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 323,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StaticEventEmitterOptions",
                                        "qualifiedName": "StaticEventEmitterOptions",
                                        "package": "@types/node"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.once"
                            }
                        },
                        {
                            "id": 324,
                            "name": "once",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 325,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "_DOMEventTarget",
                                        "qualifiedName": "_DOMEventTarget",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 326,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 327,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StaticEventEmitterOptions",
                                        "qualifiedName": "StaticEventEmitterOptions",
                                        "package": "@types/node"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.once"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.once"
                    }
                },
                {
                    "id": 344,
                    "name": "setMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 352,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 345,
                            "name": "setMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v15.4.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 346,
                                    "name": "n",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "A non-negative number. The maximum number of listeners per "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`EventTarget`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                    }
                                },
                                {
                                    "id": 347,
                                    "name": "eventTargets",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "name": "_DOMEventTarget",
                                                    "qualifiedName": "_DOMEventTarget",
                                                    "package": "@types/node"
                                                },
                                                {
                                                    "type": "reference",
                                                    "name": "EventEmitter",
                                                    "qualifiedName": "global.NodeJS.EventEmitter",
                                                    "package": "@types/node"
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventEmitter.setMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventEmitter.setMaxListeners"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Constructors",
                    "children": [359]
                },
                {
                    "title": "Properties",
                    "children": [356, 357, 358, 355]
                },
                {
                    "title": "Methods",
                    "children": [
                        384, 372, 368, 389, 438, 460, 430, 366, 442, 432, 379,
                        417, 396, 403, 446, 453, 435, 424, 410, 427, 363, 348,
                        337, 341, 333, 328, 319, 344
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                    "line": 31,
                    "character": 14
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "EventEmitter",
                    "qualifiedName": "EventEmitter",
                    "package": "@types/node"
                }
            ],
            "extendedBy": [
                {
                    "type": "reference",
                    "id": 462,
                    "name": "LoggerJson"
                },
                {
                    "type": "reference",
                    "id": 607,
                    "name": "LoggerText"
                }
            ]
        },
        {
            "id": 462,
            "name": "LoggerJson",
            "kind": 128,
            "kindString": "Class",
            "flags": {
                "isExternal": true
            },
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "This is an abstract class that should\nbe extended by custom logger classes.\n\nthis._log() method must be implemented by them."
                    }
                ]
            },
            "children": [
                {
                    "id": 503,
                    "name": "constructor",
                    "kind": 512,
                    "kindString": "Constructor",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 241,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 504,
                            "name": "new LoggerJson",
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 505,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 506,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 462,
                                "name": "LoggerJson",
                                "qualifiedName": "LoggerJson",
                                "package": "@apify/log"
                            },
                            "overwrites": {
                                "type": "reference",
                                "id": 360,
                                "name": "Logger.constructor"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "id": 359,
                        "name": "Logger.constructor"
                    }
                },
                {
                    "id": 500,
                    "name": "captureRejectionSymbol",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Value: "
                            },
                            {
                                "kind": "code",
                                "text": "`Symbol.for('nodejs.rejection')`"
                            },
                            {
                                "kind": "text",
                                "text": "\n\nSee how to write a custom "
                            },
                            {
                                "kind": "code",
                                "text": "`rejection handler`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v13.4.0, v12.16.0"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 402,
                            "character": 24
                        }
                    ],
                    "type": {
                        "type": "query",
                        "queryType": {
                            "type": "reference",
                            "id": 356,
                            "name": "captureRejectionSymbol",
                            "qualifiedName": "EventEmitter.captureRejectionSymbol",
                            "package": "@types/node"
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 356,
                        "name": "Logger.captureRejectionSymbol"
                    }
                },
                {
                    "id": 501,
                    "name": "captureRejections",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
                            },
                            {
                                "kind": "code",
                                "text": "`captureRejections`"
                            },
                            {
                                "kind": "text",
                                "text": " option on all new "
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " objects."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v13.4.0, v12.16.0"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 409,
                            "character": 15
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 357,
                        "name": "Logger.captureRejections"
                    }
                },
                {
                    "id": 502,
                    "name": "defaultMaxListeners",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "By default, a maximum of "
                            },
                            {
                                "kind": "code",
                                "text": "`10`"
                            },
                            {
                                "kind": "text",
                                "text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instances\nusing the "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.setMaxListeners(n)`"
                            },
                            {
                                "kind": "text",
                                "text": " method. To change the default\nfor _all_"
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instances, the "
                            },
                            {
                                "kind": "code",
                                "text": "`events.defaultMaxListeners`"
                            },
                            {
                                "kind": "text",
                                "text": "property can be used. If this value is not a positive number, a "
                            },
                            {
                                "kind": "code",
                                "text": "`RangeError`"
                            },
                            {
                                "kind": "text",
                                "text": "is thrown.\n\nTake caution when setting the "
                            },
                            {
                                "kind": "code",
                                "text": "`events.defaultMaxListeners`"
                            },
                            {
                                "kind": "text",
                                "text": " because the\nchange affects _all_"
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instances, including those created before\nthe change is made. However, calling "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.setMaxListeners(n)`"
                            },
                            {
                                "kind": "text",
                                "text": " still has\nprecedence over "
                            },
                            {
                                "kind": "code",
                                "text": "`events.defaultMaxListeners`"
                            },
                            {
                                "kind": "text",
                                "text": ".\n\nThis is not a hard limit. The "
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": ", the "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.getMaxListeners()`"
                            },
                            {
                                "kind": "text",
                                "text": " and "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.setMaxListeners()`"
                            },
                            {
                                "kind": "text",
                                "text": "methods can be used to\ntemporarily avoid this warning:\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\nThe "
                            },
                            {
                                "kind": "code",
                                "text": "`--trace-warnings`"
                            },
                            {
                                "kind": "text",
                                "text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
                            },
                            {
                                "kind": "code",
                                "text": "`process.on('warning')`"
                            },
                            {
                                "kind": "text",
                                "text": " and will\nhave the additional "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter`"
                            },
                            {
                                "kind": "text",
                                "text": ", "
                            },
                            {
                                "kind": "code",
                                "text": "`type`"
                            },
                            {
                                "kind": "text",
                                "text": ", and "
                            },
                            {
                                "kind": "code",
                                "text": "`count`"
                            },
                            {
                                "kind": "text",
                                "text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
                            },
                            {
                                "kind": "code",
                                "text": "`name`"
                            },
                            {
                                "kind": "text",
                                "text": " property is set to "
                            },
                            {
                                "kind": "code",
                                "text": "`'MaxListenersExceededWarning'`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v0.11.2"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 446,
                            "character": 15
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 358,
                        "name": "Logger.defaultMaxListeners"
                    }
                },
                {
                    "id": 499,
                    "name": "errorMonitor",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "This symbol shall be used to install a listener for only monitoring "
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": "events. Listeners installed using this symbol are called before the regular"
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": " event is emitted. Therefore, the process will still crash if no\nregular "
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": " listener is installed."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v13.6.0, v12.17.0"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 395,
                            "character": 24
                        }
                    ],
                    "type": {
                        "type": "query",
                        "queryType": {
                            "type": "reference",
                            "id": 355,
                            "name": "errorMonitor",
                            "qualifiedName": "EventEmitter.errorMonitor",
                            "package": "@types/node"
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 355,
                        "name": "Logger.errorMonitor"
                    }
                },
                {
                    "id": 529,
                    "name": "[captureRejectionSymbol]",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 112,
                            "character": 8
                        }
                    ],
                    "signatures": [
                        {
                            "id": 530,
                            "name": "[captureRejectionSymbol]",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 531,
                                    "name": "error",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Error",
                                        "qualifiedName": "Error",
                                        "package": "typescript"
                                    }
                                },
                                {
                                    "id": 532,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 533,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 385,
                                "name": "Logger.[captureRejectionSymbol]"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 384,
                        "name": "Logger.[captureRejectionSymbol]"
                    }
                },
                {
                    "id": 507,
                    "name": "_log",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 242,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 508,
                            "name": "_log",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 509,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                },
                                {
                                    "id": 510,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 511,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                },
                                {
                                    "id": 512,
                                    "name": "exception",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "unknown"
                                    }
                                },
                                {
                                    "id": 513,
                                    "name": "opts",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        ],
                                        "name": "Record",
                                        "qualifiedName": "Record",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "string"
                            },
                            "overwrites": {
                                "type": "reference",
                                "id": 373,
                                "name": "Logger._log"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "id": 372,
                        "name": "Logger._log"
                    }
                },
                {
                    "id": 520,
                    "name": "_outputWithConsole",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 36,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 521,
                            "name": "_outputWithConsole",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 522,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                },
                                {
                                    "id": 523,
                                    "name": "line",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 369,
                                "name": "Logger._outputWithConsole"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 368,
                        "name": "Logger._outputWithConsole"
                    }
                },
                {
                    "id": 534,
                    "name": "addListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 545,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 535,
                            "name": "addListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Alias for "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.on(eventName, listener)`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 536,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 537,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 538,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 545,
                                                    "character": 66
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 539,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 540,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 462,
                                "name": "LoggerJson",
                                "qualifiedName": "LoggerJson",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 390,
                                "name": "Logger.addListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 389,
                        "name": "Logger.addListener"
                    }
                },
                {
                    "id": 583,
                    "name": "emit",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 807,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 584,
                            "name": "emit",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Synchronously calls each of the listeners registered for the event named"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`true`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " if the event had listeners, "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`false`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " otherwise.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 585,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 586,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 439,
                                "name": "Logger.emit"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 438,
                        "name": "Logger.emit"
                    }
                },
                {
                    "id": 605,
                    "name": "eventNames",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 870,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 606,
                            "name": "eventNames",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Symbol`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v6.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "intrinsic",
                                            "name": "string"
                                        },
                                        {
                                            "type": "intrinsic",
                                            "name": "symbol"
                                        }
                                    ]
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 461,
                                "name": "Logger.eventNames"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 460,
                        "name": "Logger.eventNames"
                    }
                },
                {
                    "id": 575,
                    "name": "getMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 722,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 576,
                            "name": "getMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the current max listener value for the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " which is either\nset by "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.setMaxListeners(n)`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " or defaults to "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "defaultMaxListeners",
                                        "target": 502
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v1.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 431,
                                "name": "Logger.getMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 430,
                        "name": "Logger.getMaxListeners"
                    }
                },
                {
                    "id": 518,
                    "name": "getOptions",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 35,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 519,
                            "name": "getOptions",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "string"
                                    },
                                    {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                ],
                                "name": "Record",
                                "qualifiedName": "Record",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 367,
                                "name": "Logger.getOptions"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 366,
                        "name": "Logger.getOptions"
                    }
                },
                {
                    "id": 587,
                    "name": "listenerCount",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 816,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 588,
                            "name": "listenerCount",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the number of listeners listening for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nIf "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v3.2.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 589,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event being listened for"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 590,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The event handler function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Function",
                                        "qualifiedName": "Function",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 443,
                                "name": "Logger.listenerCount"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 442,
                        "name": "Logger.listenerCount"
                    }
                },
                {
                    "id": 577,
                    "name": "listeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 735,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 578,
                            "name": "listeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a copy of the array of listeners for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 579,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "reference",
                                    "name": "Function",
                                    "qualifiedName": "Function",
                                    "package": "typescript"
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 433,
                                "name": "Logger.listeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 432,
                        "name": "Logger.listeners"
                    }
                },
                {
                    "id": 524,
                    "name": "log",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 38,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 525,
                            "name": "log",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 526,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                },
                                {
                                    "id": 527,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 528,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 380,
                                "name": "Logger.log"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 379,
                        "name": "Logger.log"
                    }
                },
                {
                    "id": 562,
                    "name": "off",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 695,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 563,
                            "name": "off",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Alias for "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v10.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 564,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 565,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 566,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 695,
                                                    "character": 58
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 567,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 568,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 462,
                                "name": "LoggerJson",
                                "qualifiedName": "LoggerJson",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 418,
                                "name": "Logger.off"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 417,
                        "name": "Logger.off"
                    }
                },
                {
                    "id": 541,
                    "name": "on",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 577,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 542,
                            "name": "on",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function to the end of the listeners array for the\nevent named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". No checks are made to see if the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " has\nalready been added. Multiple calls passing the same combination of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will result in the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " being added, and called, multiple\ntimes.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.prependListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.101"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 543,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 544,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 545,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 577,
                                                    "character": 57
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 546,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 547,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 462,
                                "name": "LoggerJson",
                                "qualifiedName": "LoggerJson",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 397,
                                "name": "Logger.on"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 396,
                        "name": "Logger.on"
                    }
                },
                {
                    "id": 548,
                    "name": "once",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 607,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 549,
                            "name": "once",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds a **one-time**"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". The\nnext time "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is triggered, this listener is removed and then invoked.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.prependOnceListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.3.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 550,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 551,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 552,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 607,
                                                    "character": 59
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 553,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 554,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 462,
                                "name": "LoggerJson",
                                "qualifiedName": "LoggerJson",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 404,
                                "name": "Logger.once"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 403,
                        "name": "Logger.once"
                    }
                },
                {
                    "id": 591,
                    "name": "prependListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 834,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 592,
                            "name": "prependListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function to the _beginning_ of the listeners array for the\nevent named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". No checks are made to see if the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " has\nalready been added. Multiple calls passing the same combination of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will result in the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " being added, and called, multiple\ntimes.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v6.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 593,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 594,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 595,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 834,
                                                    "character": 70
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 596,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 597,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 462,
                                "name": "LoggerJson",
                                "qualifiedName": "LoggerJson",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 447,
                                "name": "Logger.prependListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 446,
                        "name": "Logger.prependListener"
                    }
                },
                {
                    "id": 598,
                    "name": "prependOnceListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 850,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 599,
                            "name": "prependOnceListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds a **one-time**"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " to the _beginning_ of the listeners array. The next time "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v6.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 600,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 601,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 602,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 850,
                                                    "character": 74
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 603,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 604,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 462,
                                "name": "LoggerJson",
                                "qualifiedName": "LoggerJson",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 454,
                                "name": "Logger.prependOnceListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 453,
                        "name": "Logger.prependOnceListener"
                    }
                },
                {
                    "id": 580,
                    "name": "rawListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 766,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 581,
                            "name": "rawListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a copy of the array of listeners for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ",\nincluding any wrappers (such as those created by "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`.once()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ").\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v9.4.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 582,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "reference",
                                    "name": "Function",
                                    "qualifiedName": "Function",
                                    "package": "typescript"
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 436,
                                "name": "Logger.rawListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 435,
                        "name": "Logger.rawListeners"
                    }
                },
                {
                    "id": 569,
                    "name": "removeAllListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 706,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 570,
                            "name": "removeAllListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Removes all listeners, or those of the specified "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 571,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 462,
                                "name": "LoggerJson",
                                "qualifiedName": "LoggerJson",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 425,
                                "name": "Logger.removeAllListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 424,
                        "name": "Logger.removeAllListeners"
                    }
                },
                {
                    "id": 555,
                    "name": "removeListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 690,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 556,
                            "name": "removeListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Removes the specified "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " from the listener array for the event named"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", then "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " or "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeAllListeners()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emit()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " in progress. Subsequent events behave as expected.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.listeners()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will remove the most\nrecently added instance. In the example the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`once('ping')`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "listener is removed:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 557,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 558,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 559,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 690,
                                                    "character": 69
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 560,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 561,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 462,
                                "name": "LoggerJson",
                                "qualifiedName": "LoggerJson",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 411,
                                "name": "Logger.removeListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 410,
                        "name": "Logger.removeListener"
                    }
                },
                {
                    "id": 572,
                    "name": "setMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 716,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 573,
                            "name": "setMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "By default "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s will print a warning if more than "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`10`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.setMaxListeners()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method allows the limit to be\nmodified for this specific "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance. The value can be set to"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Infinity`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " (or "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`0`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.3.5"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 574,
                                    "name": "n",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 462,
                                "name": "LoggerJson",
                                "qualifiedName": "LoggerJson",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 428,
                                "name": "Logger.setMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 427,
                        "name": "Logger.setMaxListeners"
                    }
                },
                {
                    "id": 515,
                    "name": "setOptions",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 34,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 516,
                            "name": "setOptions",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 517,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        ],
                                        "name": "Record",
                                        "qualifiedName": "Record",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 364,
                                "name": "Logger.setOptions"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 363,
                        "name": "Logger.setOptions"
                    }
                },
                {
                    "id": 492,
                    "name": "addAbortListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 387,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 493,
                            "name": "addAbortListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Listens once to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`abort`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event on the provided "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`signal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nListening to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`abort`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`e.stopImmediatePropagation()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AbortSignal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`stopImmediatePropagation`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v20.5.0"
                                            }
                                        ]
                                    },
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Disposable that removes the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`abort`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " listener."
                                            }
                                        ]
                                    }
                                ],
                                "modifierTags": ["@experimental"]
                            },
                            "parameters": [
                                {
                                    "id": 494,
                                    "name": "signal",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "AbortSignal",
                                        "qualifiedName": "AbortSignal",
                                        "package": "typescript"
                                    }
                                },
                                {
                                    "id": 495,
                                    "name": "resource",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 496,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 387,
                                                    "character": 63
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 497,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 498,
                                                            "name": "event",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true
                                                            },
                                                            "type": {
                                                                "type": "reference",
                                                                "name": "Event",
                                                                "qualifiedName": "Event",
                                                                "package": "typescript"
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "Disposable",
                                "qualifiedName": "global.Disposable",
                                "package": "@types/node"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 349,
                                "name": "Logger.addAbortListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 348,
                        "name": "Logger.addAbortListener"
                    }
                },
                {
                    "id": 481,
                    "name": "getEventListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 308,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 482,
                            "name": "getEventListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a copy of the array of listeners for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this behaves exactly the same as calling "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`.listeners`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " on\nthe emitter.\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventTarget`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v15.2.0, v14.17.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 483,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "name": "_DOMEventTarget",
                                                "qualifiedName": "_DOMEventTarget",
                                                "package": "@types/node"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "EventEmitter",
                                                "qualifiedName": "global.NodeJS.EventEmitter",
                                                "package": "@types/node"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 484,
                                    "name": "name",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "reference",
                                    "name": "Function",
                                    "qualifiedName": "Function",
                                    "package": "typescript"
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 338,
                                "name": "Logger.getEventListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 337,
                        "name": "Logger.getEventListeners"
                    }
                },
                {
                    "id": 485,
                    "name": "getMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 337,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 486,
                            "name": "getMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the currently set max amount of listeners.\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this behaves exactly the same as calling "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`.getMaxListeners`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " on\nthe emitter.\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventTarget`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v19.9.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 487,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "name": "_DOMEventTarget",
                                                "qualifiedName": "_DOMEventTarget",
                                                "package": "@types/node"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "EventEmitter",
                                                "qualifiedName": "global.NodeJS.EventEmitter",
                                                "package": "@types/node"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 342,
                                "name": "Logger.getMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 341,
                        "name": "Logger.getMaxListeners"
                    }
                },
                {
                    "id": 477,
                    "name": "listenerCount",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 280,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 478,
                            "name": "listenerCount",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "A class method that returns the number of listeners for the given "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "registered on the given "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.9.12"
                                            }
                                        ]
                                    },
                                    {
                                        "tag": "@deprecated",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Since v3.2.0 - Use "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`listenerCount`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " instead."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 479,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The emitter to query"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "EventEmitter",
                                        "qualifiedName": "global.NodeJS.EventEmitter",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 480,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The event name"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 334,
                                "name": "Logger.listenerCount"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 333,
                        "name": "Logger.listenerCount"
                    }
                },
                {
                    "id": 472,
                    "name": "on",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 258,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 473,
                            "name": "on",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns an "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AsyncIterator`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " that iterates "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " events. It will throw\nif the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " emits "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". It removes all listeners when\nexiting the loop. The "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`value`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AbortSignal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " can be used to cancel waiting on events:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v13.6.0, v12.16.0"
                                            }
                                        ]
                                    },
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "that iterates "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`eventName`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " events emitted by the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`emitter`"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 474,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "EventEmitter",
                                        "qualifiedName": "global.NodeJS.EventEmitter",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 475,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event being listened for"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 476,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StaticEventEmitterOptions",
                                        "qualifiedName": "StaticEventEmitterOptions",
                                        "package": "@types/node"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                ],
                                "name": "AsyncIterableIterator",
                                "qualifiedName": "AsyncIterableIterator",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 329,
                                "name": "Logger.on"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 328,
                        "name": "Logger.on"
                    }
                },
                {
                    "id": 463,
                    "name": "once",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 193,
                            "character": 15
                        },
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 198,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 464,
                            "name": "once",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Creates a "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Promise`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " that is fulfilled when the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " emits the given\nevent or that is rejected if the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " emits "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " while waiting.\nThe "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Promise`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event\nsemantics and does not listen to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nThe special handling of the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event is only used when "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`events.once()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "is used to wait for another event. If "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`events.once()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is used to wait for the\n'"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nAn "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AbortSignal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " can be used to cancel waiting for the event:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v11.13.0, v10.16.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 465,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "_NodeEventTarget",
                                        "qualifiedName": "_NodeEventTarget",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 466,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 467,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StaticEventEmitterOptions",
                                        "qualifiedName": "StaticEventEmitterOptions",
                                        "package": "@types/node"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 320,
                                "name": "Logger.once"
                            }
                        },
                        {
                            "id": 468,
                            "name": "once",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 469,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "_DOMEventTarget",
                                        "qualifiedName": "_DOMEventTarget",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 470,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 471,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StaticEventEmitterOptions",
                                        "qualifiedName": "StaticEventEmitterOptions",
                                        "package": "@types/node"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 324,
                                "name": "Logger.once"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 319,
                        "name": "Logger.once"
                    }
                },
                {
                    "id": 488,
                    "name": "setMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 352,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 489,
                            "name": "setMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v15.4.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 490,
                                    "name": "n",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "A non-negative number. The maximum number of listeners per "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`EventTarget`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                    }
                                },
                                {
                                    "id": 491,
                                    "name": "eventTargets",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "name": "_DOMEventTarget",
                                                    "qualifiedName": "_DOMEventTarget",
                                                    "package": "@types/node"
                                                },
                                                {
                                                    "type": "reference",
                                                    "name": "EventEmitter",
                                                    "qualifiedName": "global.NodeJS.EventEmitter",
                                                    "package": "@types/node"
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 345,
                                "name": "Logger.setMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 344,
                        "name": "Logger.setMaxListeners"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Constructors",
                    "children": [503]
                },
                {
                    "title": "Properties",
                    "children": [500, 501, 502, 499]
                },
                {
                    "title": "Methods",
                    "children": [
                        529, 507, 520, 534, 583, 605, 575, 518, 587, 577, 524,
                        562, 541, 548, 591, 598, 580, 569, 555, 572, 515, 492,
                        481, 485, 477, 472, 463, 488
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                    "line": 240,
                    "character": 14
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "id": 318,
                    "name": "Logger",
                    "qualifiedName": "Logger",
                    "package": "@apify/log"
                }
            ]
        },
        {
            "id": 607,
            "name": "LoggerText",
            "kind": 128,
            "kindString": "Class",
            "flags": {
                "isExternal": true
            },
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "This is an abstract class that should\nbe extended by custom logger classes.\n\nthis._log() method must be implemented by them."
                    }
                ]
            },
            "children": [
                {
                    "id": 648,
                    "name": "constructor",
                    "kind": 512,
                    "kindString": "Constructor",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 246,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 649,
                            "name": "new LoggerText",
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 650,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 651,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 607,
                                "name": "LoggerText",
                                "qualifiedName": "LoggerText",
                                "package": "@apify/log"
                            },
                            "overwrites": {
                                "type": "reference",
                                "id": 360,
                                "name": "Logger.constructor"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "id": 359,
                        "name": "Logger.constructor"
                    }
                },
                {
                    "id": 645,
                    "name": "captureRejectionSymbol",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Value: "
                            },
                            {
                                "kind": "code",
                                "text": "`Symbol.for('nodejs.rejection')`"
                            },
                            {
                                "kind": "text",
                                "text": "\n\nSee how to write a custom "
                            },
                            {
                                "kind": "code",
                                "text": "`rejection handler`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v13.4.0, v12.16.0"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 402,
                            "character": 24
                        }
                    ],
                    "type": {
                        "type": "query",
                        "queryType": {
                            "type": "reference",
                            "id": 356,
                            "name": "captureRejectionSymbol",
                            "qualifiedName": "EventEmitter.captureRejectionSymbol",
                            "package": "@types/node"
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 356,
                        "name": "Logger.captureRejectionSymbol"
                    }
                },
                {
                    "id": 646,
                    "name": "captureRejections",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
                            },
                            {
                                "kind": "code",
                                "text": "`captureRejections`"
                            },
                            {
                                "kind": "text",
                                "text": " option on all new "
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " objects."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v13.4.0, v12.16.0"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 409,
                            "character": 15
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 357,
                        "name": "Logger.captureRejections"
                    }
                },
                {
                    "id": 647,
                    "name": "defaultMaxListeners",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "By default, a maximum of "
                            },
                            {
                                "kind": "code",
                                "text": "`10`"
                            },
                            {
                                "kind": "text",
                                "text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instances\nusing the "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.setMaxListeners(n)`"
                            },
                            {
                                "kind": "text",
                                "text": " method. To change the default\nfor _all_"
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instances, the "
                            },
                            {
                                "kind": "code",
                                "text": "`events.defaultMaxListeners`"
                            },
                            {
                                "kind": "text",
                                "text": "property can be used. If this value is not a positive number, a "
                            },
                            {
                                "kind": "code",
                                "text": "`RangeError`"
                            },
                            {
                                "kind": "text",
                                "text": "is thrown.\n\nTake caution when setting the "
                            },
                            {
                                "kind": "code",
                                "text": "`events.defaultMaxListeners`"
                            },
                            {
                                "kind": "text",
                                "text": " because the\nchange affects _all_"
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instances, including those created before\nthe change is made. However, calling "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.setMaxListeners(n)`"
                            },
                            {
                                "kind": "text",
                                "text": " still has\nprecedence over "
                            },
                            {
                                "kind": "code",
                                "text": "`events.defaultMaxListeners`"
                            },
                            {
                                "kind": "text",
                                "text": ".\n\nThis is not a hard limit. The "
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
                            },
                            {
                                "kind": "code",
                                "text": "`EventEmitter`"
                            },
                            {
                                "kind": "text",
                                "text": ", the "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.getMaxListeners()`"
                            },
                            {
                                "kind": "text",
                                "text": " and "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter.setMaxListeners()`"
                            },
                            {
                                "kind": "text",
                                "text": "methods can be used to\ntemporarily avoid this warning:\n\n"
                            },
                            {
                                "kind": "code",
                                "text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
                            },
                            {
                                "kind": "text",
                                "text": "\n\nThe "
                            },
                            {
                                "kind": "code",
                                "text": "`--trace-warnings`"
                            },
                            {
                                "kind": "text",
                                "text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
                            },
                            {
                                "kind": "code",
                                "text": "`process.on('warning')`"
                            },
                            {
                                "kind": "text",
                                "text": " and will\nhave the additional "
                            },
                            {
                                "kind": "code",
                                "text": "`emitter`"
                            },
                            {
                                "kind": "text",
                                "text": ", "
                            },
                            {
                                "kind": "code",
                                "text": "`type`"
                            },
                            {
                                "kind": "text",
                                "text": ", and "
                            },
                            {
                                "kind": "code",
                                "text": "`count`"
                            },
                            {
                                "kind": "text",
                                "text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
                            },
                            {
                                "kind": "code",
                                "text": "`name`"
                            },
                            {
                                "kind": "text",
                                "text": " property is set to "
                            },
                            {
                                "kind": "code",
                                "text": "`'MaxListenersExceededWarning'`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v0.11.2"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 446,
                            "character": 15
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 358,
                        "name": "Logger.defaultMaxListeners"
                    }
                },
                {
                    "id": 644,
                    "name": "errorMonitor",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "This symbol shall be used to install a listener for only monitoring "
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": "events. Listeners installed using this symbol are called before the regular"
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": " event is emitted. Therefore, the process will still crash if no\nregular "
                            },
                            {
                                "kind": "code",
                                "text": "`'error'`"
                            },
                            {
                                "kind": "text",
                                "text": " listener is installed."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@since",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "v13.6.0, v12.17.0"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 395,
                            "character": 24
                        }
                    ],
                    "type": {
                        "type": "query",
                        "queryType": {
                            "type": "reference",
                            "id": 355,
                            "name": "errorMonitor",
                            "qualifiedName": "EventEmitter.errorMonitor",
                            "package": "@types/node"
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 355,
                        "name": "Logger.errorMonitor"
                    }
                },
                {
                    "id": 679,
                    "name": "[captureRejectionSymbol]",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 112,
                            "character": 8
                        }
                    ],
                    "signatures": [
                        {
                            "id": 680,
                            "name": "[captureRejectionSymbol]",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 681,
                                    "name": "error",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Error",
                                        "qualifiedName": "Error",
                                        "package": "typescript"
                                    }
                                },
                                {
                                    "id": 682,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 683,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 385,
                                "name": "Logger.[captureRejectionSymbol]"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 384,
                        "name": "Logger.[captureRejectionSymbol]"
                    }
                },
                {
                    "id": 652,
                    "name": "_log",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 247,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 653,
                            "name": "_log",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 654,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                },
                                {
                                    "id": 655,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 656,
                                    "name": "data",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                },
                                {
                                    "id": 657,
                                    "name": "exception",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "unknown"
                                    }
                                },
                                {
                                    "id": 658,
                                    "name": "opts",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        ],
                                        "name": "Record",
                                        "qualifiedName": "Record",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "string"
                            },
                            "overwrites": {
                                "type": "reference",
                                "id": 373,
                                "name": "Logger._log"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "id": 372,
                        "name": "Logger._log"
                    }
                },
                {
                    "id": 670,
                    "name": "_outputWithConsole",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 36,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 671,
                            "name": "_outputWithConsole",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 672,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                },
                                {
                                    "id": 673,
                                    "name": "line",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 369,
                                "name": "Logger._outputWithConsole"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 368,
                        "name": "Logger._outputWithConsole"
                    }
                },
                {
                    "id": 684,
                    "name": "addListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 545,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 685,
                            "name": "addListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Alias for "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.on(eventName, listener)`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 686,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 687,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 688,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 545,
                                                    "character": 66
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 689,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 690,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 607,
                                "name": "LoggerText",
                                "qualifiedName": "LoggerText",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 390,
                                "name": "Logger.addListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 389,
                        "name": "Logger.addListener"
                    }
                },
                {
                    "id": 733,
                    "name": "emit",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 807,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 734,
                            "name": "emit",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Synchronously calls each of the listeners registered for the event named"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`true`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " if the event had listeners, "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`false`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " otherwise.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 735,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 736,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 439,
                                "name": "Logger.emit"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 438,
                        "name": "Logger.emit"
                    }
                },
                {
                    "id": 755,
                    "name": "eventNames",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 870,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 756,
                            "name": "eventNames",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Symbol`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v6.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "intrinsic",
                                            "name": "string"
                                        },
                                        {
                                            "type": "intrinsic",
                                            "name": "symbol"
                                        }
                                    ]
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 461,
                                "name": "Logger.eventNames"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 460,
                        "name": "Logger.eventNames"
                    }
                },
                {
                    "id": 725,
                    "name": "getMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 722,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 726,
                            "name": "getMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the current max listener value for the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " which is either\nset by "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.setMaxListeners(n)`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " or defaults to "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@link",
                                        "text": "defaultMaxListeners",
                                        "target": 647
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v1.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 431,
                                "name": "Logger.getMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 430,
                        "name": "Logger.getMaxListeners"
                    }
                },
                {
                    "id": 668,
                    "name": "getOptions",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 35,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 669,
                            "name": "getOptions",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "string"
                                    },
                                    {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                ],
                                "name": "Record",
                                "qualifiedName": "Record",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 367,
                                "name": "Logger.getOptions"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 366,
                        "name": "Logger.getOptions"
                    }
                },
                {
                    "id": 737,
                    "name": "listenerCount",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 816,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 738,
                            "name": "listenerCount",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the number of listeners listening for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nIf "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v3.2.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 739,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event being listened for"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 740,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The event handler function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Function",
                                        "qualifiedName": "Function",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 443,
                                "name": "Logger.listenerCount"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 442,
                        "name": "Logger.listenerCount"
                    }
                },
                {
                    "id": 727,
                    "name": "listeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 735,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 728,
                            "name": "listeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a copy of the array of listeners for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 729,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "reference",
                                    "name": "Function",
                                    "qualifiedName": "Function",
                                    "package": "typescript"
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 433,
                                "name": "Logger.listeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 432,
                        "name": "Logger.listeners"
                    }
                },
                {
                    "id": 674,
                    "name": "log",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 38,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 675,
                            "name": "log",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 676,
                                    "name": "level",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "id": 310,
                                        "name": "LogLevel",
                                        "qualifiedName": "LogLevel",
                                        "package": "@apify/log"
                                    }
                                },
                                {
                                    "id": 677,
                                    "name": "message",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 678,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 380,
                                "name": "Logger.log"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 379,
                        "name": "Logger.log"
                    }
                },
                {
                    "id": 712,
                    "name": "off",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 695,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 713,
                            "name": "off",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Alias for "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v10.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 714,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 715,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 716,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 695,
                                                    "character": 58
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 717,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 718,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 607,
                                "name": "LoggerText",
                                "qualifiedName": "LoggerText",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 418,
                                "name": "Logger.off"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 417,
                        "name": "Logger.off"
                    }
                },
                {
                    "id": 691,
                    "name": "on",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 577,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 692,
                            "name": "on",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function to the end of the listeners array for the\nevent named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". No checks are made to see if the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " has\nalready been added. Multiple calls passing the same combination of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will result in the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " being added, and called, multiple\ntimes.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.prependListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.101"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 693,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 694,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 695,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 577,
                                                    "character": 57
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 696,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 697,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 607,
                                "name": "LoggerText",
                                "qualifiedName": "LoggerText",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 397,
                                "name": "Logger.on"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 396,
                        "name": "Logger.on"
                    }
                },
                {
                    "id": 698,
                    "name": "once",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 607,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 699,
                            "name": "once",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds a **one-time**"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". The\nnext time "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is triggered, this listener is removed and then invoked.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.prependOnceListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.3.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 700,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 701,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 702,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 607,
                                                    "character": 59
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 703,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 704,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 607,
                                "name": "LoggerText",
                                "qualifiedName": "LoggerText",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 404,
                                "name": "Logger.once"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 403,
                        "name": "Logger.once"
                    }
                },
                {
                    "id": 741,
                    "name": "prependListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 834,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 742,
                            "name": "prependListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function to the _beginning_ of the listeners array for the\nevent named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". No checks are made to see if the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " has\nalready been added. Multiple calls passing the same combination of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "and "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will result in the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " being added, and called, multiple\ntimes.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v6.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 743,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 744,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 745,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 834,
                                                    "character": 70
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 746,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 747,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 607,
                                "name": "LoggerText",
                                "qualifiedName": "LoggerText",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 447,
                                "name": "Logger.prependListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 446,
                        "name": "Logger.prependListener"
                    }
                },
                {
                    "id": 748,
                    "name": "prependOnceListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 850,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 749,
                            "name": "prependOnceListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Adds a **one-time**"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " to the _beginning_ of the listeners array. The next time "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v6.0.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 750,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 751,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The callback function"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 752,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 850,
                                                    "character": 74
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 753,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 754,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 607,
                                "name": "LoggerText",
                                "qualifiedName": "LoggerText",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 454,
                                "name": "Logger.prependOnceListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 453,
                        "name": "Logger.prependOnceListener"
                    }
                },
                {
                    "id": 730,
                    "name": "rawListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 766,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 731,
                            "name": "rawListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a copy of the array of listeners for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ",\nincluding any wrappers (such as those created by "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`.once()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ").\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v9.4.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 732,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "reference",
                                    "name": "Function",
                                    "qualifiedName": "Function",
                                    "package": "typescript"
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 436,
                                "name": "Logger.rawListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 435,
                        "name": "Logger.rawListeners"
                    }
                },
                {
                    "id": 719,
                    "name": "removeAllListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 706,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 720,
                            "name": "removeAllListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Removes all listeners, or those of the specified "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 721,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 607,
                                "name": "LoggerText",
                                "qualifiedName": "LoggerText",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 425,
                                "name": "Logger.removeAllListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 424,
                        "name": "Logger.removeAllListeners"
                    }
                },
                {
                    "id": 705,
                    "name": "removeListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 690,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 706,
                            "name": "removeListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Removes the specified "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`listener`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " from the listener array for the event named"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", then "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " or "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeAllListeners()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emit()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " in progress. Subsequent events behave as expected.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.listeners()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`removeListener()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will remove the most\nrecently added instance. In the example the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`once('ping')`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "listener is removed:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.1.26"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 707,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 708,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 709,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 690,
                                                    "character": 69
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 710,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 711,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 607,
                                "name": "LoggerText",
                                "qualifiedName": "LoggerText",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 411,
                                "name": "Logger.removeListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 410,
                        "name": "Logger.removeListener"
                    }
                },
                {
                    "id": 722,
                    "name": "setMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 716,
                            "character": 16
                        }
                    ],
                    "signatures": [
                        {
                            "id": 723,
                            "name": "setMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "By default "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s will print a warning if more than "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`10`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter.setMaxListeners()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " method allows the limit to be\nmodified for this specific "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance. The value can be set to"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Infinity`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " (or "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`0`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", so that calls can be chained."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.3.5"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 724,
                                    "name": "n",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 607,
                                "name": "LoggerText",
                                "qualifiedName": "LoggerText",
                                "package": "@apify/log"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 428,
                                "name": "Logger.setMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 427,
                        "name": "Logger.setMaxListeners"
                    }
                },
                {
                    "id": 665,
                    "name": "setOptions",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 34,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 666,
                            "name": "setOptions",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 667,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "typeArguments": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "any"
                                            }
                                        ],
                                        "name": "Record",
                                        "qualifiedName": "Record",
                                        "package": "typescript"
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 364,
                                "name": "Logger.setOptions"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 363,
                        "name": "Logger.setOptions"
                    }
                },
                {
                    "id": 637,
                    "name": "addAbortListener",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 387,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 638,
                            "name": "addAbortListener",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Listens once to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`abort`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event on the provided "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`signal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nListening to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`abort`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`e.stopImmediatePropagation()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AbortSignal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`stopImmediatePropagation`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v20.5.0"
                                            }
                                        ]
                                    },
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Disposable that removes the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`abort`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " listener."
                                            }
                                        ]
                                    }
                                ],
                                "modifierTags": ["@experimental"]
                            },
                            "parameters": [
                                {
                                    "id": 639,
                                    "name": "signal",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "AbortSignal",
                                        "qualifiedName": "AbortSignal",
                                        "package": "typescript"
                                    }
                                },
                                {
                                    "id": 640,
                                    "name": "resource",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 641,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@types/node/events.d.ts",
                                                    "line": 387,
                                                    "character": 63
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 642,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 643,
                                                            "name": "event",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true
                                                            },
                                                            "type": {
                                                                "type": "reference",
                                                                "name": "Event",
                                                                "qualifiedName": "Event",
                                                                "package": "typescript"
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "void"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "name": "Disposable",
                                "qualifiedName": "global.Disposable",
                                "package": "@types/node"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 349,
                                "name": "Logger.addAbortListener"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 348,
                        "name": "Logger.addAbortListener"
                    }
                },
                {
                    "id": 626,
                    "name": "getEventListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 308,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 627,
                            "name": "getEventListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a copy of the array of listeners for the event named "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this behaves exactly the same as calling "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`.listeners`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " on\nthe emitter.\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventTarget`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v15.2.0, v14.17.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 628,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "name": "_DOMEventTarget",
                                                "qualifiedName": "_DOMEventTarget",
                                                "package": "@types/node"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "EventEmitter",
                                                "qualifiedName": "global.NodeJS.EventEmitter",
                                                "package": "@types/node"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 629,
                                    "name": "name",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "array",
                                "elementType": {
                                    "type": "reference",
                                    "name": "Function",
                                    "qualifiedName": "Function",
                                    "package": "typescript"
                                }
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 338,
                                "name": "Logger.getEventListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 337,
                        "name": "Logger.getEventListeners"
                    }
                },
                {
                    "id": 630,
                    "name": "getMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 337,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 631,
                            "name": "getMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the currently set max amount of listeners.\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this behaves exactly the same as calling "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`.getMaxListeners`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " on\nthe emitter.\n\nFor "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventTarget`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v19.9.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 632,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "reference",
                                                "name": "_DOMEventTarget",
                                                "qualifiedName": "_DOMEventTarget",
                                                "package": "@types/node"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "EventEmitter",
                                                "qualifiedName": "global.NodeJS.EventEmitter",
                                                "package": "@types/node"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 342,
                                "name": "Logger.getMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 341,
                        "name": "Logger.getMaxListeners"
                    }
                },
                {
                    "id": 622,
                    "name": "listenerCount",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 280,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 623,
                            "name": "listenerCount",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "A class method that returns the number of listeners for the given "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "registered on the given "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`emitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v0.9.12"
                                            }
                                        ]
                                    },
                                    {
                                        "tag": "@deprecated",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Since v3.2.0 - Use "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`listenerCount`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " instead."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 624,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The emitter to query"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "EventEmitter",
                                        "qualifiedName": "global.NodeJS.EventEmitter",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 625,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The event name"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 334,
                                "name": "Logger.listenerCount"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 333,
                        "name": "Logger.listenerCount"
                    }
                },
                {
                    "id": 617,
                    "name": "on",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 258,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 618,
                            "name": "on",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nReturns an "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AsyncIterator`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " that iterates "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`eventName`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " events. It will throw\nif the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " emits "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ". It removes all listeners when\nexiting the loop. The "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`value`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AbortSignal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " can be used to cancel waiting on events:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v13.6.0, v12.16.0"
                                            }
                                        ]
                                    },
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "that iterates "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`eventName`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " events emitted by the "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`emitter`"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 619,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "EventEmitter",
                                        "qualifiedName": "global.NodeJS.EventEmitter",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 620,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "The name of the event being listened for"
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 621,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StaticEventEmitterOptions",
                                        "qualifiedName": "StaticEventEmitterOptions",
                                        "package": "@types/node"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "any"
                                    }
                                ],
                                "name": "AsyncIterableIterator",
                                "qualifiedName": "AsyncIterableIterator",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 329,
                                "name": "Logger.on"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 328,
                        "name": "Logger.on"
                    }
                },
                {
                    "id": 608,
                    "name": "once",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 193,
                            "character": 15
                        },
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 198,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 609,
                            "name": "once",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Creates a "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Promise`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " that is fulfilled when the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " emits the given\nevent or that is rejected if the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`EventEmitter`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " emits "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " while waiting.\nThe "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Promise`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event\nsemantics and does not listen to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event.\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nThe special handling of the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`'error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event is only used when "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`events.once()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "is used to wait for another event. If "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`events.once()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " is used to wait for the\n'"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`error'`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\n\nAn "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`AbortSignal`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " can be used to cancel waiting for the event:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v11.13.0, v10.16.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 610,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "_NodeEventTarget",
                                        "qualifiedName": "_NodeEventTarget",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 611,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "symbol"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 612,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StaticEventEmitterOptions",
                                        "qualifiedName": "StaticEventEmitterOptions",
                                        "package": "@types/node"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 320,
                                "name": "Logger.once"
                            }
                        },
                        {
                            "id": 613,
                            "name": "once",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 614,
                                    "name": "emitter",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "_DOMEventTarget",
                                        "qualifiedName": "_DOMEventTarget",
                                        "package": "@types/node"
                                    }
                                },
                                {
                                    "id": 615,
                                    "name": "eventName",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                },
                                {
                                    "id": 616,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "StaticEventEmitterOptions",
                                        "qualifiedName": "StaticEventEmitterOptions",
                                        "package": "@types/node"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "any"
                                        }
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 324,
                                "name": "Logger.once"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 319,
                        "name": "Logger.once"
                    }
                },
                {
                    "id": 633,
                    "name": "setMaxListeners",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@types/node/events.d.ts",
                            "line": 352,
                            "character": 15
                        }
                    ],
                    "signatures": [
                        {
                            "id": 634,
                            "name": "setMaxListeners",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "code",
                                        "text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@since",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "v15.4.0"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 635,
                                    "name": "n",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "A non-negative number. The maximum number of listeners per "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`EventTarget`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " event."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "number"
                                    }
                                },
                                {
                                    "id": 636,
                                    "name": "eventTargets",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "union",
                                            "types": [
                                                {
                                                    "type": "reference",
                                                    "name": "_DOMEventTarget",
                                                    "qualifiedName": "_DOMEventTarget",
                                                    "package": "@types/node"
                                                },
                                                {
                                                    "type": "reference",
                                                    "name": "EventEmitter",
                                                    "qualifiedName": "global.NodeJS.EventEmitter",
                                                    "package": "@types/node"
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "id": 345,
                                "name": "Logger.setMaxListeners"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 344,
                        "name": "Logger.setMaxListeners"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Constructors",
                    "children": [648]
                },
                {
                    "title": "Properties",
                    "children": [645, 646, 647, 644]
                },
                {
                    "title": "Methods",
                    "children": [
                        679, 652, 670, 684, 733, 755, 725, 668, 737, 727, 674,
                        712, 691, 698, 741, 748, 730, 719, 705, 722, 665, 637,
                        626, 630, 622, 617, 608, 633
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                    "line": 245,
                    "character": 14
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "id": 318,
                    "name": "Logger",
                    "qualifiedName": "Logger",
                    "package": "@apify/log"
                }
            ]
        },
        {
            "id": 1528,
            "name": "PlatformEventManager",
            "kind": 128,
            "kindString": "Class",
            "flags": {},
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "Gets an instance of a Node.js'\n[EventEmitter](https://nodejs.org/api/events.html#events_class_eventemitter)\nclass that emits various events from the SDK or the Apify platform.\nThe event emitter is initialized by calling the "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "Actor.main"
                    },
                    {
                        "kind": "text",
                        "text": " function.\n\n**Example usage:**\n\n"
                    },
                    {
                        "kind": "code",
                        "text": "```javascript\nActor.on('cpuInfo', (data) => {\n  if (data.isCpuOverloaded) console.log('Oh no, the CPU is overloaded!');\n});\n```"
                    },
                    {
                        "kind": "text",
                        "text": "\n\nThe following events are emitted:\n\n- "
                    },
                    {
                        "kind": "code",
                        "text": "`cpuInfo`"
                    },
                    {
                        "kind": "text",
                        "text": ": "
                    },
                    {
                        "kind": "code",
                        "text": "`{ \"isCpuOverloaded\": Boolean }`"
                    },
                    {
                        "kind": "text",
                        "text": "\n  The event is emitted approximately every second\n  and it indicates whether the Actor is using the maximum of available CPU resources.\n  If that's the case, the Actor should not add more workload.\n  For example, this event is used by the "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "AutoscaledPool"
                    },
                    {
                        "kind": "text",
                        "text": " class.\n- "
                    },
                    {
                        "kind": "code",
                        "text": "`migrating`"
                    },
                    {
                        "kind": "text",
                        "text": ": "
                    },
                    {
                        "kind": "code",
                        "text": "`void`"
                    },
                    {
                        "kind": "text",
                        "text": "\n  Emitted when the Actor running on the Apify platform is going to be migrated to another worker server soon.\n  You can use it to persist the state of the Actor and gracefully stop your in-progress tasks,\n  so that they are not interrupted by the migration.\n  For example, this is used by the "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "RequestList"
                    },
                    {
                        "kind": "text",
                        "text": " class.\n- "
                    },
                    {
                        "kind": "code",
                        "text": "`aborting`"
                    },
                    {
                        "kind": "text",
                        "text": ": "
                    },
                    {
                        "kind": "code",
                        "text": "`void`"
                    },
                    {
                        "kind": "text",
                        "text": "\n  When a user aborts an Actor run on the Apify platform, they can choose to abort gracefully to allow\n  the Actor some time before getting killed. This graceful abort emits the "
                    },
                    {
                        "kind": "code",
                        "text": "`aborting`"
                    },
                    {
                        "kind": "text",
                        "text": " event which the SDK\n  uses to gracefully stop running crawls and you can use it to do your own cleanup as well.\n- "
                    },
                    {
                        "kind": "code",
                        "text": "`persistState`"
                    },
                    {
                        "kind": "text",
                        "text": ": "
                    },
                    {
                        "kind": "code",
                        "text": "`{ \"isMigrating\": Boolean }`"
                    },
                    {
                        "kind": "text",
                        "text": "\n  Emitted in regular intervals (by default 60 seconds) to notify all components of Apify SDK that it is time to persist\n  their state, in order to avoid repeating all work when the Actor restarts.\n  This event is automatically emitted together with the "
                    },
                    {
                        "kind": "code",
                        "text": "`migrating`"
                    },
                    {
                        "kind": "text",
                        "text": " event,\n  in which case the "
                    },
                    {
                        "kind": "code",
                        "text": "`isMigrating`"
                    },
                    {
                        "kind": "text",
                        "text": " flag is set to "
                    },
                    {
                        "kind": "code",
                        "text": "`true`"
                    },
                    {
                        "kind": "text",
                        "text": ". Otherwise the flag is "
                    },
                    {
                        "kind": "code",
                        "text": "`false`"
                    },
                    {
                        "kind": "text",
                        "text": ".\n  Note that the "
                    },
                    {
                        "kind": "code",
                        "text": "`persistState`"
                    },
                    {
                        "kind": "text",
                        "text": " event is provided merely for user convenience,\n  you can achieve the same effect using "
                    },
                    {
                        "kind": "code",
                        "text": "`setInterval()`"
                    },
                    {
                        "kind": "text",
                        "text": " and listening for the "
                    },
                    {
                        "kind": "code",
                        "text": "`migrating`"
                    },
                    {
                        "kind": "text",
                        "text": " event."
                    }
                ]
            },
            "children": [
                {
                    "id": 1529,
                    "name": "constructor",
                    "kind": 512,
                    "kindString": "Constructor",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/platform_event_manager.ts",
                            "line": 50,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/platform_event_manager.ts#L50"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1530,
                            "name": "new PlatformEventManager",
                            "kind": 16384,
                            "kindString": "Constructor signature",
                            "flags": {},
                            "parameters": [
                                {
                                    "id": 1531,
                                    "name": "config",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                        "type": "reference",
                                        "id": 1277,
                                        "name": "Configuration"
                                    },
                                    "defaultValue": "..."
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "id": 1528,
                                "name": "PlatformEventManager"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "EventManager.constructor"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "EventManager.constructor"
                    }
                },
                {
                    "id": 1533,
                    "name": "config",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isReadonly": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/platform_event_manager.ts",
                            "line": 50,
                            "character": 34,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/platform_event_manager.ts#L50"
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "id": 1277,
                        "name": "Configuration"
                    },
                    "defaultValue": "...",
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventManager.config"
                    }
                },
                {
                    "id": 1539,
                    "name": "close",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/platform_event_manager.ts",
                            "line": 112,
                            "character": 19,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/platform_event_manager.ts#L112"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1540,
                            "name": "close",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Closes websocket providing events from Actor infrastructure and also stops sending internal events\nof Apify package such as "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`persistState`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nThis is automatically called at the end of "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Actor.main()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "EventManager.close"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "EventManager.close"
                    }
                },
                {
                    "id": 1559,
                    "name": "emit",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
                            "line": 37,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1560,
                            "name": "emit",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 1561,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "EventTypeName",
                                        "qualifiedName": "EventTypeName",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 1562,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "array",
                                        "elementType": {
                                            "type": "intrinsic",
                                            "name": "unknown"
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventManager.emit"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventManager.emit"
                    }
                },
                {
                    "id": 1534,
                    "name": "init",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/platform_event_manager.ts",
                            "line": 58,
                            "character": 19,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/platform_event_manager.ts#L58"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1535,
                            "name": "init",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Initializes "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Actor.events`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " event emitter by creating a connection to a websocket that provides them.\nThis is an internal function that is automatically called by "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`Actor.main()`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "EventManager.init"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "EventManager.init"
                    }
                },
                {
                    "id": 1563,
                    "name": "isInitialized",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
                            "line": 38,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1564,
                            "name": "isInitialized",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventManager.isInitialized"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventManager.isInitialized"
                    }
                },
                {
                    "id": 1552,
                    "name": "off",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
                            "line": 36,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1553,
                            "name": "off",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 1554,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "EventTypeName",
                                        "qualifiedName": "EventTypeName",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 1555,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 1556,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
                                                    "line": 36,
                                                    "character": 41
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 1557,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 1558,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventManager.off"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventManager.off"
                    }
                },
                {
                    "id": 1545,
                    "name": "on",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
                            "line": 35,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1546,
                            "name": "on",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 1547,
                                    "name": "event",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "EventTypeName",
                                        "qualifiedName": "EventTypeName",
                                        "package": "@crawlee/core"
                                    }
                                },
                                {
                                    "id": 1548,
                                    "name": "listener",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reflection",
                                        "declaration": {
                                            "id": 1549,
                                            "name": "__type",
                                            "kind": 65536,
                                            "kindString": "Type literal",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@crawlee/core/events/event_manager.d.ts",
                                                    "line": 35,
                                                    "character": 39
                                                }
                                            ],
                                            "signatures": [
                                                {
                                                    "id": 1550,
                                                    "name": "__type",
                                                    "kind": 4096,
                                                    "kindString": "Call signature",
                                                    "flags": {
                                                        "isExternal": true
                                                    },
                                                    "parameters": [
                                                        {
                                                            "id": 1551,
                                                            "name": "args",
                                                            "kind": 32768,
                                                            "kindString": "Parameter",
                                                            "flags": {
                                                                "isExternal": true,
                                                                "isRest": true
                                                            },
                                                            "type": {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "any"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "any"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ],
                            "type": {
                                "type": "intrinsic",
                                "name": "void"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "EventManager.on"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "EventManager.on"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Constructors",
                    "children": [1529]
                },
                {
                    "title": "Properties",
                    "children": [1533]
                },
                {
                    "title": "Methods",
                    "children": [1539, 1559, 1534, 1563, 1552, 1545]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/platform_event_manager.ts",
                    "line": 46,
                    "character": 13,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/platform_event_manager.ts#L46"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "EventManager",
                    "qualifiedName": "EventManager",
                    "package": "@crawlee/core"
                }
            ]
        },
        {
            "id": 1453,
            "name": "ProxyConfiguration",
            "kind": 128,
            "kindString": "Class",
            "flags": {},
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "Configures connection to a proxy server with the provided options. Proxy servers are used to prevent target websites from blocking\nyour crawlers based on IP address rate limits or blacklists. Setting proxy configuration in your crawlers automatically configures\nthem to use the selected proxies for all connections. You can get information about the currently used proxy by inspecting\nthe "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "ProxyInfo"
                    },
                    {
                        "kind": "text",
                        "text": " property in your crawler's page function. There, you can inspect the proxy's URL and other attributes.\n\nThe proxy servers are managed by [Apify Proxy](https://docs.apify.com/proxy). To be able to use Apify Proxy,\nyou need an Apify account and access to the selected proxies. If you provide no configuration option,\nthe proxies will be managed automatically using a smart algorithm.\n\nIf you want to use your own proxies, use the "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "ProxyConfigurationOptions.proxyUrls"
                    },
                    {
                        "kind": "text",
                        "text": " option. Your list of proxy URLs will\nbe rotated by the configuration if this option is provided.\n\n**Example usage:**\n\n"
                    },
                    {
                        "kind": "code",
                        "text": "```javascript\n\nconst proxyConfiguration = await Actor.createProxyConfiguration({\n  groups: ['GROUP1', 'GROUP2'] // List of Apify Proxy groups\n  countryCode: 'US',\n});\n\nconst crawler = new CheerioCrawler({\n  // ...\n  proxyConfiguration,\n  requestHandler({ proxyInfo }) {\n     const usedProxyUrl = proxyInfo.url; // Getting the proxy URL\n  }\n})\n\n```"
                    }
                ]
            },
            "children": [
                {
                    "id": 1464,
                    "name": "config",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isReadonly": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 171,
                            "character": 66,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L171"
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "id": 1277,
                        "name": "Configuration"
                    },
                    "defaultValue": "..."
                },
                {
                    "id": 1497,
                    "name": "isManInTheMiddle",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
                            "line": 155,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreProxyConfiguration.isManInTheMiddle"
                    }
                },
                {
                    "id": 1465,
                    "name": "initialize",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 234,
                            "character": 10,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L234"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1466,
                            "name": "initialize",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Loads proxy password if token is provided and checks access to Apify Proxy and provided proxy groups\nif Apify Proxy configuration is used.\nAlso checks if country has access to Apify Proxy groups if the country code is provided.\n\nYou should use the "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "createProxyConfiguration"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function to create a pre-initialized\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`ProxyConfiguration`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instance instead of calling this manually."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            }
                        }
                    ]
                },
                {
                    "id": 1467,
                    "name": "newProxyInfo",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 260,
                            "character": 19,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L260"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1468,
                            "name": "newProxyInfo",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "This function creates a new "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "ProxyInfo"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " info object.\nIt is used by CheerioCrawler and PuppeteerCrawler to generate proxy URLs and also to allow the user to inspect\nthe currently used proxy via the requestHandler parameter "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`proxyInfo`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nUse it if you want to work with a rich representation of a proxy URL.\nIf you need the URL string only, use "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "ProxyConfiguration.newUrl"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Represents information about used proxy and its configuration."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 1469,
                                    "name": "sessionId",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Represents the identifier of user "
                                            },
                                            {
                                                "kind": "inline-tag",
                                                "tag": "@apilink",
                                                "text": "Session"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " that can be managed by the "
                                            },
                                            {
                                                "kind": "inline-tag",
                                                "tag": "@apilink",
                                                "text": "SessionPool"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or\n you can use the Apify Proxy [Session](https://docs.apify.com/proxy#sessions) identifier.\n When the provided sessionId is a number, it's converted to a string. Property sessionId of\n "
                                            },
                                            {
                                                "kind": "inline-tag",
                                                "tag": "@apilink",
                                                "text": "ProxyInfo"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " is always returned as a type string.\n\n All the HTTP requests going through the proxy with the same session identifier\n will use the same target proxy server (i.e. the same IP address).\n The identifier must not be longer than 50 characters and include only the following: "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`0-9`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`a-z`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`A-Z`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`\".\"`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`\"_\"`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " and "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`\"~\"`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "number"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1470,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "TieredProxyOptions",
                                        "qualifiedName": "TieredProxyOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "reference",
                                                "id": 1443,
                                                "name": "ProxyInfo"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "CoreProxyConfiguration.newProxyInfo"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "CoreProxyConfiguration.newProxyInfo"
                    }
                },
                {
                    "id": 1471,
                    "name": "newUrl",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 293,
                            "character": 19,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L293"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1472,
                            "name": "newUrl",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a new proxy URL based on provided configuration options and the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`sessionId`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " parameter."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "A string with a proxy URL, including authentication credentials and port number.\n For example, "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`http://bob:password123@proxy.example.com:8000`"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "parameters": [
                                {
                                    "id": 1473,
                                    "name": "sessionId",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "Represents the identifier of user "
                                            },
                                            {
                                                "kind": "inline-tag",
                                                "tag": "@apilink",
                                                "text": "Session"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " that can be managed by the "
                                            },
                                            {
                                                "kind": "inline-tag",
                                                "tag": "@apilink",
                                                "text": "SessionPool"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " or\n you can use the Apify Proxy [Session](https://docs.apify.com/proxy#sessions) identifier.\n When the provided sessionId is a number, it's converted to a string.\n\n All the HTTP requests going through the proxy with the same session identifier\n will use the same target proxy server (i.e. the same IP address).\n The identifier must not be longer than 50 characters and include only the following: "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`0-9`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`a-z`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`A-Z`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`\".\"`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": ", "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`\"_\"`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " and "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`\"~\"`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": "."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "number"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": 1474,
                                    "name": "options",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isOptional": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "TieredProxyOptions",
                                        "qualifiedName": "TieredProxyOptions",
                                        "package": "@crawlee/core"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "CoreProxyConfiguration.newUrl"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "CoreProxyConfiguration.newUrl"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1464, 1497]
                },
                {
                    "title": "Methods",
                    "children": [1465, 1467, 1471]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/proxy_configuration.ts",
                    "line": 160,
                    "character": 13,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L160"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "ProxyConfiguration",
                    "qualifiedName": "ProxyConfiguration",
                    "package": "@crawlee/core"
                }
            ]
        },
        {
            "id": 125,
            "name": "RequestQueue",
            "kind": 128,
            "kindString": "Class",
            "flags": {
                "isExternal": true
            },
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "Represents a queue of URLs to crawl, which is used for deep crawling of websites\nwhere you start with several URLs and then recursively\nfollow links to other pages. The data structure supports both breadth-first and depth-first crawling orders.\n\nEach URL is represented using an instance of the "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "Request"
                    },
                    {
                        "kind": "text",
                        "text": " class.\nThe queue can only contain unique URLs. More precisely, it can only contain "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "Request"
                    },
                    {
                        "kind": "text",
                        "text": " instances\nwith distinct "
                    },
                    {
                        "kind": "code",
                        "text": "`uniqueKey`"
                    },
                    {
                        "kind": "text",
                        "text": " properties. By default, "
                    },
                    {
                        "kind": "code",
                        "text": "`uniqueKey`"
                    },
                    {
                        "kind": "text",
                        "text": " is generated from the URL, but it can also be overridden.\nTo add a single URL multiple times to the queue,\ncorresponding "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "Request"
                    },
                    {
                        "kind": "text",
                        "text": " objects will need to have different "
                    },
                    {
                        "kind": "code",
                        "text": "`uniqueKey`"
                    },
                    {
                        "kind": "text",
                        "text": " properties.\n\nDo not instantiate this class directly, use the "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "RequestQueue.open"
                    },
                    {
                        "kind": "text",
                        "text": " function instead.\n\n"
                    },
                    {
                        "kind": "code",
                        "text": "`RequestQueue`"
                    },
                    {
                        "kind": "text",
                        "text": " is used by "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "BasicCrawler"
                    },
                    {
                        "kind": "text",
                        "text": ", "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "CheerioCrawler"
                    },
                    {
                        "kind": "text",
                        "text": ", "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "PuppeteerCrawler"
                    },
                    {
                        "kind": "text",
                        "text": "\nand "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "PlaywrightCrawler"
                    },
                    {
                        "kind": "text",
                        "text": " as a source of URLs to crawl.\nUnlike "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "RequestList"
                    },
                    {
                        "kind": "text",
                        "text": ", "
                    },
                    {
                        "kind": "code",
                        "text": "`RequestQueue`"
                    },
                    {
                        "kind": "text",
                        "text": " supports dynamic adding and removing of requests.\nOn the other hand, the queue is not optimized for operations that add or remove a large number of URLs in a batch.\n\n"
                    },
                    {
                        "kind": "code",
                        "text": "`RequestQueue`"
                    },
                    {
                        "kind": "text",
                        "text": " stores its data either on local disk or in the Apify Cloud,\ndepending on whether the "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_LOCAL_STORAGE_DIR`"
                    },
                    {
                        "kind": "text",
                        "text": " or "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_TOKEN`"
                    },
                    {
                        "kind": "text",
                        "text": " environment variable is set.\n\nIf the "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_LOCAL_STORAGE_DIR`"
                    },
                    {
                        "kind": "text",
                        "text": " environment variable is set, the queue data is stored in\nthat directory in an SQLite database file.\n\nIf the "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_TOKEN`"
                    },
                    {
                        "kind": "text",
                        "text": " environment variable is set but "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_LOCAL_STORAGE_DIR`"
                    },
                    {
                        "kind": "text",
                        "text": " is not, the data is stored in the\n[Apify Request Queue](https://docs.apify.com/storage/request-queue)\ncloud storage. Note that you can force usage of the cloud storage also by passing the "
                    },
                    {
                        "kind": "code",
                        "text": "`forceCloud`"
                    },
                    {
                        "kind": "text",
                        "text": "\noption to "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "RequestQueue.open"
                    },
                    {
                        "kind": "text",
                        "text": " function,\neven if the "
                    },
                    {
                        "kind": "code",
                        "text": "`APIFY_LOCAL_STORAGE_DIR`"
                    },
                    {
                        "kind": "text",
                        "text": " variable is set.\n\n**Example usage:**\n\n"
                    },
                    {
                        "kind": "code",
                        "text": "```javascript\n// Open the default request queue associated with the crawler run\nconst queue = await RequestQueue.open();\n\n// Open a named request queue\nconst queueWithName = await RequestQueue.open('some-name');\n\n// Enqueue few requests\nawait queue.addRequest({ url: 'http://example.com/aaa' });\nawait queue.addRequest({ url: 'http://example.com/bbb' });\nawait queue.addRequest({ url: 'http://example.com/foo/bar' }, { forefront: true });\n```"
                    }
                ]
            },
            "children": [
                {
                    "id": 175,
                    "name": "assumedHandledCount",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 21,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.assumedHandledCount"
                    }
                },
                {
                    "id": 174,
                    "name": "assumedTotalCount",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 20,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.assumedTotalCount"
                    }
                },
                {
                    "id": 169,
                    "name": "client",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 15,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "RequestQueueClient",
                        "qualifiedName": "RequestQueueClient",
                        "package": "@crawlee/types"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.client"
                    }
                },
                {
                    "id": 168,
                    "name": "clientKey",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 14,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.clientKey"
                    }
                },
                {
                    "id": 164,
                    "name": "config",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isReadonly": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 10,
                            "character": 13
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "Configuration",
                        "qualifiedName": "Configuration",
                        "package": "@crawlee/core"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.config"
                    }
                },
                {
                    "id": 165,
                    "name": "id",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 11,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.id"
                    }
                },
                {
                    "id": 172,
                    "name": "internalTimeoutMillis",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 18,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.internalTimeoutMillis"
                    }
                },
                {
                    "id": 171,
                    "name": "log",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 17,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "id": 240,
                        "name": "Log",
                        "qualifiedName": "Log",
                        "package": "@apify/log"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.log"
                    }
                },
                {
                    "id": 166,
                    "name": "name",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 12,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.name"
                    }
                },
                {
                    "id": 173,
                    "name": "requestLockSecs",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 19,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.requestLockSecs"
                    }
                },
                {
                    "id": 167,
                    "name": "timeoutSecs",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 13,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.timeoutSecs"
                    }
                },
                {
                    "id": 147,
                    "name": "addRequest",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
                            "line": 92,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 148,
                            "name": "addRequest",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 149,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "tuple",
                                        "elements": [
                                            {
                                                "type": "named-tuple-member",
                                                "name": "requestLike",
                                                "isOptional": false,
                                                "element": {
                                                    "type": "reference",
                                                    "name": "Source",
                                                    "qualifiedName": "Source",
                                                    "package": "@crawlee/core"
                                                }
                                            },
                                            {
                                                "type": "named-tuple-member",
                                                "name": "options",
                                                "isOptional": true,
                                                "element": {
                                                    "type": "reference",
                                                    "id": 217,
                                                    "name": "RequestQueueOperationOptions",
                                                    "qualifiedName": "RequestQueueOperationOptions",
                                                    "package": "@crawlee/core"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "name": "RequestQueueOperationInfo",
                                        "qualifiedName": "RequestQueueOperationInfo",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "RequestProvider.addRequest"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "RequestProvider.addRequest"
                    }
                },
                {
                    "id": 150,
                    "name": "addRequests",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
                            "line": 94,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 151,
                            "name": "addRequests",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 152,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "tuple",
                                        "elements": [
                                            {
                                                "type": "named-tuple-member",
                                                "name": "requestsLike",
                                                "isOptional": false,
                                                "element": {
                                                    "type": "array",
                                                    "elementType": {
                                                        "type": "reference",
                                                        "name": "Source",
                                                        "qualifiedName": "Source",
                                                        "package": "@crawlee/core"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "named-tuple-member",
                                                "name": "options",
                                                "isOptional": true,
                                                "element": {
                                                    "type": "reference",
                                                    "id": 217,
                                                    "name": "RequestQueueOperationOptions",
                                                    "qualifiedName": "RequestQueueOperationOptions",
                                                    "package": "@crawlee/core"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "name": "BatchAddRequestsResult",
                                        "qualifiedName": "BatchAddRequestsResult",
                                        "package": "@crawlee/types"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "RequestProvider.addRequests"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "RequestProvider.addRequests"
                    }
                },
                {
                    "id": 153,
                    "name": "addRequestsBatched",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
                            "line": 96,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 154,
                            "name": "addRequestsBatched",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 155,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "tuple",
                                        "elements": [
                                            {
                                                "type": "named-tuple-member",
                                                "name": "requests",
                                                "isOptional": false,
                                                "element": {
                                                    "type": "array",
                                                    "elementType": {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "intrinsic",
                                                                "name": "string"
                                                            },
                                                            {
                                                                "type": "reference",
                                                                "name": "Source",
                                                                "qualifiedName": "Source",
                                                                "package": "@crawlee/core"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "type": "named-tuple-member",
                                                "name": "options",
                                                "isOptional": true,
                                                "element": {
                                                    "type": "reference",
                                                    "name": "AddRequestsBatchedOptions",
                                                    "qualifiedName": "AddRequestsBatchedOptions",
                                                    "package": "@crawlee/core"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "name": "AddRequestsBatchedResult",
                                        "qualifiedName": "AddRequestsBatchedResult",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "RequestProvider.addRequestsBatched"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "RequestProvider.addRequestsBatched"
                    }
                },
                {
                    "id": 199,
                    "name": "drop",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 127,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 200,
                            "name": "drop",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Removes the queue either from the Apify Cloud storage or from the local database,\ndepending on the mode of operation."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "void"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "RequestProvider.drop"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.drop"
                    }
                },
                {
                    "id": 135,
                    "name": "fetchNextRequest",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
                            "line": 76,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 136,
                            "name": "fetchNextRequest",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns a next request in the queue to be processed, or "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`null`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " if there are no more pending requests.\n\nOnce you successfully finish processing of the request, you need to call\n"
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "RequestQueue.markRequestHandled"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\nto mark the request as handled in the queue. If there was some error in processing the request,\ncall "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "RequestQueue.reclaimRequest"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instead,\nso that the queue will give the request to some other consumer in another call to the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`fetchNextRequest`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " function.\n\nNote that the "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`null`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " return value doesn't mean the queue processing finished,\nit means there are currently no pending requests.\nTo check whether all requests in queue were finished,\nuse "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "RequestQueue.isFinished"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " instead."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Returns the request object or "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`null`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " if there are no more pending requests."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 137,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "reference",
                                                "typeArguments": [
                                                    {
                                                        "type": "reference",
                                                        "id": 137,
                                                        "name": "T",
                                                        "qualifiedName": "T",
                                                        "package": "@crawlee/core"
                                                    }
                                                ],
                                                "name": "Request",
                                                "qualifiedName": "Request",
                                                "package": "@crawlee/core"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "RequestProvider.fetchNextRequest"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "RequestProvider.fetchNextRequest"
                    }
                },
                {
                    "id": 203,
                    "name": "getInfo",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 162,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 204,
                            "name": "getInfo",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns an object containing general information about the request queue.\n\nThe function returns the same object as the Apify API Client's\n[getQueue](https://docs.apify.com/api/apify-client-js/latest#ApifyClient-requestQueues)\nfunction, which in turn calls the\n[Get request queue](https://apify.com/docs/api/v2#/reference/request-queues/queue/get-request-queue)\nAPI endpoint.\n\n**Example:**\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```\n{\n  id: \"WkzbQMuFYuamGv3YF\",\n  name: \"my-queue\",\n  userId: \"wRsJZtadYvn4mBZmm\",\n  createdAt: new Date(\"2015-12-12T07:34:14.202Z\"),\n  modifiedAt: new Date(\"2015-12-13T08:36:13.202Z\"),\n  accessedAt: new Date(\"2015-12-14T08:36:13.202Z\"),\n  totalRequestCount: 25,\n  handledRequestCount: 5,\n  pendingRequestCount: 20,\n}\n```"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "intrinsic",
                                                "name": "undefined"
                                            },
                                            {
                                                "type": "reference",
                                                "name": "RequestQueueInfo",
                                                "qualifiedName": "RequestQueueInfo",
                                                "package": "@crawlee/types"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "RequestProvider.getInfo"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.getInfo"
                    }
                },
                {
                    "id": 185,
                    "name": "getRequest",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 83,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 186,
                            "name": "getRequest",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Gets the request from the queue specified by ID."
                                    }
                                ],
                                "blockTags": [
                                    {
                                        "tag": "@returns",
                                        "content": [
                                            {
                                                "kind": "text",
                                                "text": "Returns the request object, or "
                                            },
                                            {
                                                "kind": "code",
                                                "text": "`null`"
                                            },
                                            {
                                                "kind": "text",
                                                "text": " if it was not found."
                                            }
                                        ]
                                    }
                                ]
                            },
                            "typeParameter": [
                                {
                                    "id": 187,
                                    "name": "T",
                                    "kind": 131072,
                                    "kindString": "Type parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "type": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    },
                                    "default": {
                                        "type": "reference",
                                        "name": "Dictionary",
                                        "qualifiedName": "Dictionary",
                                        "package": "@crawlee/types"
                                    }
                                }
                            ],
                            "parameters": [
                                {
                                    "id": 188,
                                    "name": "id",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "comment": {
                                        "summary": [
                                            {
                                                "kind": "text",
                                                "text": "ID of the request."
                                            }
                                        ]
                                    },
                                    "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "reference",
                                                "typeArguments": [
                                                    {
                                                        "type": "reference",
                                                        "id": 187,
                                                        "name": "T",
                                                        "qualifiedName": "T",
                                                        "package": "@crawlee/core"
                                                    }
                                                ],
                                                "name": "Request",
                                                "qualifiedName": "Request",
                                                "package": "@crawlee/core"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "RequestProvider.getRequest"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.getRequest"
                    }
                },
                {
                    "id": 183,
                    "name": "getTotalCount",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 39,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 184,
                            "name": "getTotalCount",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns an offline approximation of the total number of requests in the queue (i.e. pending + handled).\n\nSurvives restarts and actor migrations."
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "RequestProvider.getTotalCount"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.getTotalCount"
                    }
                },
                {
                    "id": 201,
                    "name": "handledCount",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 137,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 202,
                            "name": "handledCount",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Returns the number of handled requests.\n\nThis function is just a convenient shortcut for:\n\n"
                                    },
                                    {
                                        "kind": "code",
                                        "text": "```javascript\nconst { handledRequestCount } = await queue.getInfo();\n```"
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "number"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "RequestProvider.handledCount"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.handledCount"
                    }
                },
                {
                    "id": 189,
                    "name": "isEmpty",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 106,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 190,
                            "name": "isEmpty",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Resolves to "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`true`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " if the next call to "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "RequestQueue.fetchNextRequest"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "\nwould return "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`null`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ", otherwise it resolves to "
                                    },
                                    {
                                        "kind": "code",
                                        "text": "`false`"
                                    },
                                    {
                                        "kind": "text",
                                        "text": ".\nNote that even if the queue is empty, there might be some pending requests currently being processed.\nIf you need to ensure that there is no activity in the queue, use "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "RequestQueue.isFinished"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "inheritedFrom": {
                                "type": "reference",
                                "name": "RequestProvider.isEmpty"
                            }
                        }
                    ],
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProvider.isEmpty"
                    }
                },
                {
                    "id": 145,
                    "name": "isFinished",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
                            "line": 90,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 146,
                            "name": "isFinished",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "intrinsic",
                                        "name": "boolean"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "RequestProvider.isFinished"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "RequestProvider.isFinished"
                    }
                },
                {
                    "id": 156,
                    "name": "markRequestHandled",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
                            "line": 98,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 157,
                            "name": "markRequestHandled",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 158,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "tuple",
                                        "elements": [
                                            {
                                                "type": "named-tuple-member",
                                                "name": "request",
                                                "isOptional": false,
                                                "element": {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                        {
                                                            "type": "reference",
                                                            "name": "Dictionary",
                                                            "qualifiedName": "Dictionary",
                                                            "package": "@crawlee/types"
                                                        }
                                                    ],
                                                    "name": "Request",
                                                    "qualifiedName": "Request",
                                                    "package": "@crawlee/core"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "reference",
                                                "name": "RequestQueueOperationInfo",
                                                "qualifiedName": "RequestQueueOperationInfo",
                                                "package": "@crawlee/core"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "RequestProvider.markRequestHandled"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "RequestProvider.markRequestHandled"
                    }
                },
                {
                    "id": 159,
                    "name": "reclaimRequest",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
                            "line": 100,
                            "character": 4
                        }
                    ],
                    "signatures": [
                        {
                            "id": 160,
                            "name": "reclaimRequest",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 161,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "tuple",
                                        "elements": [
                                            {
                                                "type": "named-tuple-member",
                                                "name": "request",
                                                "isOptional": false,
                                                "element": {
                                                    "type": "reference",
                                                    "typeArguments": [
                                                        {
                                                            "type": "reference",
                                                            "name": "Dictionary",
                                                            "qualifiedName": "Dictionary",
                                                            "package": "@crawlee/types"
                                                        }
                                                    ],
                                                    "name": "Request",
                                                    "qualifiedName": "Request",
                                                    "package": "@crawlee/core"
                                                }
                                            },
                                            {
                                                "type": "named-tuple-member",
                                                "name": "options",
                                                "isOptional": true,
                                                "element": {
                                                    "type": "reference",
                                                    "id": 217,
                                                    "name": "RequestQueueOperationOptions",
                                                    "qualifiedName": "RequestQueueOperationOptions",
                                                    "package": "@crawlee/core"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "union",
                                        "types": [
                                            {
                                                "type": "literal",
                                                "value": null
                                            },
                                            {
                                                "type": "reference",
                                                "name": "RequestQueueOperationInfo",
                                                "qualifiedName": "RequestQueueOperationInfo",
                                                "package": "@crawlee/core"
                                            }
                                        ]
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "RequestProvider.reclaimRequest"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "RequestProvider.reclaimRequest"
                    }
                },
                {
                    "id": 126,
                    "name": "open",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {
                        "isStatic": true,
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
                            "line": 102,
                            "character": 11
                        }
                    ],
                    "signatures": [
                        {
                            "id": 127,
                            "name": "open",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {
                                "isExternal": true
                            },
                            "parameters": [
                                {
                                    "id": 128,
                                    "name": "args",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {
                                        "isExternal": true,
                                        "isRest": true
                                    },
                                    "type": {
                                        "type": "tuple",
                                        "elements": [
                                            {
                                                "type": "named-tuple-member",
                                                "name": "queueIdOrName",
                                                "isOptional": true,
                                                "element": {
                                                    "type": "union",
                                                    "types": [
                                                        {
                                                            "type": "literal",
                                                            "value": null
                                                        },
                                                        {
                                                            "type": "intrinsic",
                                                            "name": "string"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "named-tuple-member",
                                                "name": "options",
                                                "isOptional": true,
                                                "element": {
                                                    "type": "reference",
                                                    "name": "StorageManagerOptions",
                                                    "qualifiedName": "StorageManagerOptions",
                                                    "package": "@crawlee/core"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 125,
                                        "name": "RequestQueue",
                                        "qualifiedName": "RequestQueue",
                                        "package": "@crawlee/core"
                                    }
                                ],
                                "name": "Promise",
                                "qualifiedName": "Promise",
                                "package": "typescript"
                            },
                            "overwrites": {
                                "type": "reference",
                                "name": "RequestProvider.open"
                            }
                        }
                    ],
                    "overwrites": {
                        "type": "reference",
                        "name": "RequestProvider.open"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [
                        175, 174, 169, 168, 164, 165, 172, 171, 166, 173, 167
                    ]
                },
                {
                    "title": "Methods",
                    "children": [
                        147, 150, 153, 199, 135, 203, 185, 183, 201, 189, 145,
                        156, 159, 126
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/request_queue.d.ts",
                    "line": 52,
                    "character": 21
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "RequestProvider",
                    "qualifiedName": "RequestProvider",
                    "package": "@crawlee/core"
                }
            ]
        },
        {
            "id": 1167,
            "name": "AbortOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1170,
                    "name": "gracefully",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/run.d.ts",
                            "line": 84,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RunAbortOptions.gracefully"
                    }
                },
                {
                    "id": 1169,
                    "name": "statusMessage",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Exit with given status message"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1730,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1730"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1168,
                    "name": "token",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "User API token that is used to run the Actor. By default, it is taken from the "
                            },
                            {
                                "kind": "code",
                                "text": "`APIFY_TOKEN`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1727,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1727"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1170, 1169, 1168]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1723,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1723"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "RunAbortOptions",
                    "qualifiedName": "RunAbortOptions",
                    "package": "apify-client"
                }
            ]
        },
        {
            "id": 1189,
            "name": "ActorRun",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 1201,
                    "name": "actId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 171,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.actId"
                    }
                },
                {
                    "id": 1202,
                    "name": "actorTaskId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 172,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.actorTaskId"
                    }
                },
                {
                    "id": 1207,
                    "name": "buildId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 177,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.buildId"
                    }
                },
                {
                    "id": 1208,
                    "name": "buildNumber",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 178,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.buildNumber"
                    }
                },
                {
                    "id": 1195,
                    "name": "containerUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 190,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1210,
                    "name": "defaultDatasetId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 180,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.defaultDatasetId"
                    }
                },
                {
                    "id": 1209,
                    "name": "defaultKeyValueStoreId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 179,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.defaultKeyValueStoreId"
                    }
                },
                {
                    "id": 1211,
                    "name": "defaultRequestQueueId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 181,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.defaultRequestQueueId"
                    }
                },
                {
                    "id": 1194,
                    "name": "exitCode",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 189,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 1204,
                    "name": "finishedAt",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 174,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "Date",
                        "qualifiedName": "Date",
                        "package": "typescript"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.finishedAt"
                    }
                },
                {
                    "id": 1197,
                    "name": "gitBranchName",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 192,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1200,
                    "name": "id",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 170,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.id"
                    }
                },
                {
                    "id": 1196,
                    "name": "isContainerServerReady",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 191,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                },
                {
                    "id": 1206,
                    "name": "meta",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 176,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "ActorRunMeta",
                        "qualifiedName": "ActorRunMeta",
                        "package": "apify-client"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.meta"
                    }
                },
                {
                    "id": 1193,
                    "name": "options",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 188,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "ActorRunOptions",
                        "qualifiedName": "ActorRunOptions",
                        "package": "apify-client"
                    }
                },
                {
                    "id": 1203,
                    "name": "startedAt",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 173,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "Date",
                        "qualifiedName": "Date",
                        "package": "typescript"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.startedAt"
                    }
                },
                {
                    "id": 1192,
                    "name": "stats",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 187,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "ActorRunStats",
                        "qualifiedName": "ActorRunStats",
                        "package": "apify-client"
                    }
                },
                {
                    "id": 1205,
                    "name": "status",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 175,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": "READY"
                            },
                            {
                                "type": "literal",
                                "value": "RUNNING"
                            },
                            {
                                "type": "literal",
                                "value": "SUCCEEDED"
                            },
                            {
                                "type": "literal",
                                "value": "FAILED"
                            },
                            {
                                "type": "literal",
                                "value": "ABORTING"
                            },
                            {
                                "type": "literal",
                                "value": "ABORTED"
                            },
                            {
                                "type": "literal",
                                "value": "TIMING-OUT"
                            },
                            {
                                "type": "literal",
                                "value": "TIMED-OUT"
                            }
                        ]
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.status"
                    }
                },
                {
                    "id": 1191,
                    "name": "statusMessage",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 186,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1198,
                    "name": "usage",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 193,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "ActorRunUsage",
                        "qualifiedName": "ActorRunUsage",
                        "package": "apify-client"
                    }
                },
                {
                    "id": 1212,
                    "name": "usageTotalUsd",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 182,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorRunListItem.usageTotalUsd"
                    }
                },
                {
                    "id": 1199,
                    "name": "usageUsd",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 194,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "ActorRunUsage",
                        "qualifiedName": "ActorRunUsage",
                        "package": "apify-client"
                    }
                },
                {
                    "id": 1190,
                    "name": "userId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 185,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [
                        1201, 1202, 1207, 1208, 1195, 1210, 1209, 1211, 1194,
                        1204, 1197, 1200, 1196, 1206, 1193, 1203, 1192, 1205,
                        1191, 1198, 1212, 1199, 1190
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                    "line": 184,
                    "character": 17
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "ActorRunListItem",
                    "qualifiedName": "ActorRunListItem",
                    "package": "apify-client"
                }
            ]
        },
        {
            "id": 831,
            "name": "ApifyClientOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 832,
                    "name": "baseUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "https://api.apify.com"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 137,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 833,
                    "name": "maxRetries",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "8"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 139,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 834,
                    "name": "minDelayBetweenRetriesMillis",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "500"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 141,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 835,
                    "name": "requestInterceptors",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "[]"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 143,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "array",
                        "elementType": {
                            "type": "union",
                            "types": [
                                {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                },
                                {
                                    "type": "literal",
                                    "value": null
                                },
                                {
                                    "type": "reflection",
                                    "declaration": {
                                        "id": 836,
                                        "name": "__type",
                                        "kind": 65536,
                                        "kindString": "Type literal",
                                        "flags": {
                                            "isExternal": true
                                        },
                                        "sources": [
                                            {
                                                "fileName": "node_modules/axios/index.d.ts",
                                                "line": 477,
                                                "character": 21
                                            }
                                        ],
                                        "signatures": [
                                            {
                                                "id": 837,
                                                "name": "__type",
                                                "kind": 4096,
                                                "kindString": "Call signature",
                                                "flags": {
                                                    "isExternal": true
                                                },
                                                "parameters": [
                                                    {
                                                        "id": 838,
                                                        "name": "value",
                                                        "kind": 32768,
                                                        "kindString": "Parameter",
                                                        "flags": {
                                                            "isExternal": true
                                                        },
                                                        "type": {
                                                            "type": "reference",
                                                            "name": "ApifyRequestConfig",
                                                            "qualifiedName": "ApifyRequestConfig",
                                                            "package": "apify-client"
                                                        }
                                                    }
                                                ],
                                                "type": {
                                                    "type": "union",
                                                    "types": [
                                                        {
                                                            "type": "reference",
                                                            "name": "ApifyRequestConfig",
                                                            "qualifiedName": "ApifyRequestConfig",
                                                            "package": "apify-client"
                                                        },
                                                        {
                                                            "type": "reference",
                                                            "typeArguments": [
                                                                {
                                                                    "type": "reference",
                                                                    "name": "ApifyRequestConfig",
                                                                    "qualifiedName": "ApifyRequestConfig",
                                                                    "package": "apify-client"
                                                                }
                                                            ],
                                                            "name": "Promise",
                                                            "qualifiedName": "Promise",
                                                            "package": "typescript"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "id": 839,
                    "name": "timeoutSecs",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "360"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 145,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 840,
                    "name": "token",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                            "line": 146,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [832, 833, 834, 835, 839, 840]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/apify-client/dist/apify_client.d.ts",
                    "line": 135,
                    "character": 17
                }
            ]
        },
        {
            "id": 1106,
            "name": "ApifyEnv",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "Parsed representation of the Apify environment variables.\nThis object is returned by the "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "Actor.getEnv"
                    },
                    {
                        "kind": "text",
                        "text": " function."
                    }
                ]
            },
            "children": [
                {
                    "id": 1110,
                    "name": "actorBuildId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ID of the Actor build used in the run. (ACTOR_BUILD_ID)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1597,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1597"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1140,
                    "name": "actorBuildNumber",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1699,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1699"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1141,
                    "name": "actorEventsWsUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1700,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1700"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1107,
                    "name": "actorId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ID of the Actor (ACTOR_ID)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1582,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1582"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1142,
                    "name": "actorMaxPaidDatasetItems",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1701,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1701"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "number"
                            }
                        ]
                    }
                },
                {
                    "id": 1108,
                    "name": "actorRunId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ID of the Actor run (ACTOR_RUN_ID)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1587,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1587"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1109,
                    "name": "actorTaskId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ID of the Actor task (ACTOR_TASK_ID)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1592,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1592"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1124,
                    "name": "apiBaseUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1662,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1662"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1125,
                    "name": "apiPublicBaseUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1663,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1663"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1126,
                    "name": "chromeExecutablePath",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1664,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1664"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1143,
                    "name": "containerPort",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1702,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1702"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "number"
                            }
                        ]
                    }
                },
                {
                    "id": 1144,
                    "name": "containerUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1703,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1703"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1127,
                    "name": "dedicatedCpus",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1665,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1665"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1116,
                    "name": "defaultDatasetId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ID of the dataset where input and output data of this\nActor is stored (ACTOR_DEFAULT_DATASET_ID)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1631,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1631"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1115,
                    "name": "defaultKeyValueStoreId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ID of the key-value store where input and output data of this\nActor is stored (ACTOR_DEFAULT_KEY_VALUE_STORE_ID)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1625,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1625"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1145,
                    "name": "defaultRequestQueueId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1704,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1704"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1128,
                    "name": "disableOutdatedWarning",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1666,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1666"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "literal",
                                "value": 1
                            }
                        ]
                    }
                },
                {
                    "id": 1129,
                    "name": "fact",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1667,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1667"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1118,
                    "name": "headless",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "If set to \"1\", the web browsers inside the Actor should run in headless\nmode because there is no windowing system available. (APIFY_HEADLESS)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1643,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1643"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1136,
                    "name": "inputKey",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The key of the input record in the Actor’s default key-value store (ACTOR_INPUT_KEY)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1695,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1695"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1130,
                    "name": "inputSecretsPrivateKeyFile",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1668,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1668"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1131,
                    "name": "inputSecretsPrivateKeyPassphrase",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1669,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1669"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1119,
                    "name": "isAtHome",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Is set to \"1\" if the Actor is running on Apify servers.\n(APIFY_IS_AT_HOME)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1649,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1649"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1132,
                    "name": "localStorageDir",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines the path to a local directory where KeyValueStore, Dataset, and RequestQueue\nstore their data. Typically, it is set to ./storage. If omitted, you should define the\nAPIFY_TOKEN environment variable instead. See more info on combination of this and\nAPIFY_TOKEN [here](https://docs.apify.com/sdk/js/docs/guides/environment-variables#combinations-of-apify_local_storage_dir-and-apify_token)(CRAWLEE_STORAGE_DIR)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1677,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1677"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1134,
                    "name": "logFormat",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1684,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1684"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1133,
                    "name": "logLevel",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Specifies the minimum log level, which can be one of the following values (in order of severity): DEBUG, INFO, WARNING and ERROR\n(APIFY_LOG_LEVEL)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1683,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1683"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1117,
                    "name": "memoryMbytes",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Amount of memory allocated for the Actor,\nin megabytes (ACTOR_MEMORY_MBYTES)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1637,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1637"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "number"
                            }
                        ]
                    }
                },
                {
                    "id": 1135,
                    "name": "metaOrigin",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Origin for the Actor run, i.e. how it was started. See [here](https://docs.apify.com/sdk/python/reference/enum/MetaOrigin)\nfor more details. (APIFY_META_ORIGIN)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1690,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1690"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1121,
                    "name": "proxyHostname",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1655,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1655"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1120,
                    "name": "proxyPassword",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The Apify Proxy password of the user who started the Actor. (APIFY_PROXY_PASSWORD)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1654,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1654"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1122,
                    "name": "proxyPort",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1656,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1656"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1123,
                    "name": "proxyStatusUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "You can visit this page to troubleshoot your proxy connection. (APIFY_PROXY_STATUS_URL)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1661,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1661"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1137,
                    "name": "sdkLatestVersion",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1696,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1696"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1113,
                    "name": "startedAt",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Date when the Actor was started (ACTOR_STARTED_AT)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1614,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1614"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "reference",
                                "name": "Date",
                                "qualifiedName": "Date",
                                "package": "typescript"
                            }
                        ]
                    }
                },
                {
                    "id": 1138,
                    "name": "systemInfoIntervalMillis",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1697,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1697"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1114,
                    "name": "timeoutAt",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Date when the Actor will time out (ACTOR_TIMEOUT_AT)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1619,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1619"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "reference",
                                "name": "Date",
                                "qualifiedName": "Date",
                                "package": "typescript"
                            }
                        ]
                    }
                },
                {
                    "id": 1112,
                    "name": "token",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Authentication token representing privileges given to the Actor run,\nit can be passed to various Apify APIs (APIFY_TOKEN)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1609,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1609"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1111,
                    "name": "userId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "ID of the user who started the Actor - note that it might be\ndifferent than the owner of the Actor (APIFY_USER_ID)"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1603,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1603"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 1139,
                    "name": "workflowKey",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1698,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1698"
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [
                        1110, 1140, 1141, 1107, 1142, 1108, 1109, 1124, 1125,
                        1126, 1143, 1144, 1127, 1116, 1115, 1145, 1128, 1129,
                        1118, 1136, 1130, 1131, 1119, 1132, 1134, 1133, 1117,
                        1135, 1121, 1120, 1122, 1123, 1137, 1113, 1138, 1114,
                        1112, 1111, 1139
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1575,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1575"
                }
            ]
        },
        {
            "id": 1150,
            "name": "CallOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1153,
                    "name": "build",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Tag or number of the actor build to run (e.g. "
                            },
                            {
                                "kind": "code",
                                "text": "`beta`"
                            },
                            {
                                "kind": "text",
                                "text": " or "
                            },
                            {
                                "kind": "code",
                                "text": "`1.2.345`"
                            },
                            {
                                "kind": "text",
                                "text": ").\nIf not provided, the run uses build tag or number from the default actor run configuration (typically "
                            },
                            {
                                "kind": "code",
                                "text": "`latest`"
                            },
                            {
                                "kind": "text",
                                "text": ")."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 128,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorCallOptions.build"
                    }
                },
                {
                    "id": 1154,
                    "name": "contentType",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Content type for the "
                            },
                            {
                                "kind": "code",
                                "text": "`input`"
                            },
                            {
                                "kind": "text",
                                "text": ". If not specified,\n"
                            },
                            {
                                "kind": "code",
                                "text": "`input`"
                            },
                            {
                                "kind": "text",
                                "text": " is expected to be an object that will be stringified to JSON and content type set to\n"
                            },
                            {
                                "kind": "code",
                                "text": "`application/json; charset=utf-8`"
                            },
                            {
                                "kind": "text",
                                "text": ". If "
                            },
                            {
                                "kind": "code",
                                "text": "`options.contentType`"
                            },
                            {
                                "kind": "text",
                                "text": " is specified, then "
                            },
                            {
                                "kind": "code",
                                "text": "`input`"
                            },
                            {
                                "kind": "text",
                                "text": " must be a\n"
                            },
                            {
                                "kind": "code",
                                "text": "`String`"
                            },
                            {
                                "kind": "text",
                                "text": " or "
                            },
                            {
                                "kind": "code",
                                "text": "`Buffer`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 135,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorCallOptions.contentType"
                    }
                },
                {
                    "id": 1158,
                    "name": "maxItems",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Specifies maximum number of items that the actor run should return.\nThis is used by pay per result actors to limit the maximum number of results that will be charged to customer.\nValue can be accessed in actor run using "
                            },
                            {
                                "kind": "code",
                                "text": "`ACTOR_MAX_PAID_DATASET_ITEMS`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 164,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorCallOptions.maxItems"
                    }
                },
                {
                    "id": 1155,
                    "name": "memory",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Memory in megabytes which will be allocated for the new actor run.\nIf not provided, the run uses memory of the default actor run configuration."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 140,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorCallOptions.memory"
                    }
                },
                {
                    "id": 1156,
                    "name": "timeout",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Timeout for the actor run in seconds. Zero value means there is no timeout.\nIf not provided, the run uses timeout of the default actor run configuration."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 145,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorCallOptions.timeout"
                    }
                },
                {
                    "id": 1151,
                    "name": "token",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "User API token that is used to run the Actor. By default, it is taken from the "
                            },
                            {
                                "kind": "code",
                                "text": "`APIFY_TOKEN`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1713,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1713"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1152,
                    "name": "waitSecs",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 167,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorCallOptions.waitSecs"
                    }
                },
                {
                    "id": 1157,
                    "name": "webhooks",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Specifies optional webhooks associated with the actor run, which can be used\nto receive a notification e.g. when the actor finished or failed, see\n[ad hook webhooks documentation](https://docs.apify.com/webhooks/ad-hoc-webhooks) for detailed description."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 158,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "name": "WebhookUpdateData",
                                "qualifiedName": "WebhookUpdateData",
                                "package": "apify-client"
                            }
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "ActorCallOptions.webhooks"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1153, 1154, 1158, 1155, 1156, 1151, 1152, 1157]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1709,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1709"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "ActorCallOptions",
                    "qualifiedName": "ActorCallOptions",
                    "package": "apify-client"
                }
            ]
        },
        {
            "id": 1159,
            "name": "CallTaskOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1162,
                    "name": "build",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Tag or number of the actor build to run (e.g. "
                            },
                            {
                                "kind": "code",
                                "text": "`beta`"
                            },
                            {
                                "kind": "text",
                                "text": " or "
                            },
                            {
                                "kind": "code",
                                "text": "`1.2.345`"
                            },
                            {
                                "kind": "text",
                                "text": ").\nIf not provided, the run uses build tag or number from the default actor run configuration (typically "
                            },
                            {
                                "kind": "code",
                                "text": "`latest`"
                            },
                            {
                                "kind": "text",
                                "text": ")."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 128,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "TaskCallOptions.build"
                    }
                },
                {
                    "id": 1166,
                    "name": "maxItems",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Specifies maximum number of items that the actor run should return.\nThis is used by pay per result actors to limit the maximum number of results that will be charged to customer.\nValue can be accessed in actor run using "
                            },
                            {
                                "kind": "code",
                                "text": "`ACTOR_MAX_PAID_DATASET_ITEMS`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 164,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "TaskCallOptions.maxItems"
                    }
                },
                {
                    "id": 1163,
                    "name": "memory",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Memory in megabytes which will be allocated for the new actor run.\nIf not provided, the run uses memory of the default actor run configuration."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 140,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "TaskCallOptions.memory"
                    }
                },
                {
                    "id": 1164,
                    "name": "timeout",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Timeout for the actor run in seconds. Zero value means there is no timeout.\nIf not provided, the run uses timeout of the default actor run configuration."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 145,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "TaskCallOptions.timeout"
                    }
                },
                {
                    "id": 1160,
                    "name": "token",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "User API token that is used to run the Actor. By default, it is taken from the "
                            },
                            {
                                "kind": "code",
                                "text": "`APIFY_TOKEN`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1720,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1720"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1161,
                    "name": "waitSecs",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/task.d.ts",
                            "line": 86,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "TaskCallOptions.waitSecs"
                    }
                },
                {
                    "id": 1165,
                    "name": "webhooks",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Specifies optional webhooks associated with the actor run, which can be used\nto receive a notification e.g. when the actor finished or failed, see\n[ad hook webhooks documentation](https://docs.apify.com/webhooks/ad-hoc-webhooks) for detailed description."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/apify-client/dist/resource_clients/actor.d.ts",
                            "line": 158,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "name": "WebhookUpdateData",
                                "qualifiedName": "WebhookUpdateData",
                                "package": "apify-client"
                            }
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "TaskCallOptions.webhooks"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1162, 1166, 1163, 1164, 1160, 1161, 1165]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1716,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1716"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "TaskCallOptions",
                    "qualifiedName": "TaskCallOptions",
                    "package": "apify-client"
                }
            ]
        },
        {
            "id": 1218,
            "name": "ConfigurationOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1220,
                    "name": "actorEventsWsUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 12,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L12"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1222,
                    "name": "actorId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 14,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L14"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1223,
                    "name": "actorRunId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 15,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L15"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1224,
                    "name": "actorTaskId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 16,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L16"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1225,
                    "name": "apiBaseUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 17,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L17"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1244,
                    "name": "availableMemoryRatio",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the ratio, defining the amount of system memory that could be used by the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "AutoscaledPool"
                            },
                            {
                                "kind": "text",
                                "text": ".\nWhen the memory usage is more than the provided ratio, the memory is considered overloaded.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_AVAILABLE_MEMORY_RATIO`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "0.25"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 68,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.availableMemoryRatio"
                    }
                },
                {
                    "id": 1251,
                    "name": "chromeExecutablePath",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines a path to Chrome executable.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_CHROME_EXECUTABLE_PATH`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 115,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.chromeExecutablePath"
                    }
                },
                {
                    "id": 1226,
                    "name": "containerPort",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 18,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L18"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 1227,
                    "name": "containerUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 19,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L19"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1252,
                    "name": "defaultBrowserPath",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines a path to default browser executable.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_DEFAULT_BROWSER_PATH`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 121,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.defaultBrowserPath"
                    }
                },
                {
                    "id": 1239,
                    "name": "defaultDatasetId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Default dataset id.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_DEFAULT_DATASET_ID`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "'default'"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 33,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.defaultDatasetId"
                    }
                },
                {
                    "id": 1241,
                    "name": "defaultKeyValueStoreId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Default key-value store id.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_DEFAULT_KEY_VALUE_STORE_ID`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "'default'"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 47,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.defaultKeyValueStoreId"
                    }
                },
                {
                    "id": 1242,
                    "name": "defaultRequestQueueId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Default request queue id.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_DEFAULT_REQUEST_QUEUE_ID`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "'default'"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 54,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.defaultRequestQueueId"
                    }
                },
                {
                    "id": 1253,
                    "name": "disableBrowserSandbox",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines whether to disable browser sandbox by adding "
                            },
                            {
                                "kind": "code",
                                "text": "`--no-sandbox`"
                            },
                            {
                                "kind": "text",
                                "text": " flag to "
                            },
                            {
                                "kind": "code",
                                "text": "`launchOptions`"
                            },
                            {
                                "kind": "text",
                                "text": ".\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_DISABLE_BROWSER_SANDBOX`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 127,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.disableBrowserSandbox"
                    }
                },
                {
                    "id": 1237,
                    "name": "eventManager",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines the Event Manager to be used."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "EventManager"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 21,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "EventManager",
                        "qualifiedName": "EventManager",
                        "package": "@crawlee/core"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.eventManager"
                    }
                },
                {
                    "id": 1249,
                    "name": "headless",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines whether web browsers launched by Crawlee will run in the headless mode.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_HEADLESS`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "true"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 102,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.headless"
                    }
                },
                {
                    "id": 1248,
                    "name": "inputKey",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines the default input key, i.e. the key that is used to get the crawler input value\nfrom the default "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "KeyValueStore"
                            },
                            {
                                "kind": "text",
                                "text": " associated with the current crawler run.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_INPUT_KEY`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "'INPUT'"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 95,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.inputKey"
                    }
                },
                {
                    "id": 1235,
                    "name": "inputSecretsPrivateKeyFile",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 27,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L27"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1234,
                    "name": "inputSecretsPrivateKeyPassphrase",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 26,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L26"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1232,
                    "name": "isAtHome",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 24,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L24"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                },
                {
                    "id": 1254,
                    "name": "logLevel",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the log level to the given value.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_LOG_LEVEL`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "'INFO'"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 134,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "reference",
                                "id": 310,
                                "name": "LogLevel",
                                "qualifiedName": "LogLevel",
                                "package": "@apify/log"
                            },
                            {
                                "type": "reflection",
                                "declaration": {
                                    "id": 1255,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                            "line": 551,
                                            "character": 4
                                        }
                                    ],
                                    "signatures": [
                                        {
                                            "id": 1256,
                                            "name": "__type",
                                            "kind": 4096,
                                            "kindString": "Call signature",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "parameters": [
                                                {
                                                    "id": 1257,
                                                    "name": "radix",
                                                    "kind": 32768,
                                                    "kindString": "Parameter",
                                                    "flags": {
                                                        "isExternal": true,
                                                        "isOptional": true
                                                    },
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "number"
                                                    }
                                                }
                                            ],
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "reflection",
                                "declaration": {
                                    "id": 1258,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                            "line": 557,
                                            "character": 4
                                        }
                                    ],
                                    "signatures": [
                                        {
                                            "id": 1259,
                                            "name": "__type",
                                            "kind": 4096,
                                            "kindString": "Call signature",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "parameters": [
                                                {
                                                    "id": 1260,
                                                    "name": "fractionDigits",
                                                    "kind": 32768,
                                                    "kindString": "Parameter",
                                                    "flags": {
                                                        "isExternal": true,
                                                        "isOptional": true
                                                    },
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "number"
                                                    }
                                                }
                                            ],
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "reflection",
                                "declaration": {
                                    "id": 1261,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                            "line": 563,
                                            "character": 4
                                        }
                                    ],
                                    "signatures": [
                                        {
                                            "id": 1262,
                                            "name": "__type",
                                            "kind": 4096,
                                            "kindString": "Call signature",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "parameters": [
                                                {
                                                    "id": 1263,
                                                    "name": "fractionDigits",
                                                    "kind": 32768,
                                                    "kindString": "Parameter",
                                                    "flags": {
                                                        "isExternal": true,
                                                        "isOptional": true
                                                    },
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "number"
                                                    }
                                                }
                                            ],
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "reflection",
                                "declaration": {
                                    "id": 1264,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                            "line": 569,
                                            "character": 4
                                        }
                                    ],
                                    "signatures": [
                                        {
                                            "id": 1265,
                                            "name": "__type",
                                            "kind": 4096,
                                            "kindString": "Call signature",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "parameters": [
                                                {
                                                    "id": 1266,
                                                    "name": "precision",
                                                    "kind": 32768,
                                                    "kindString": "Parameter",
                                                    "flags": {
                                                        "isExternal": true,
                                                        "isOptional": true
                                                    },
                                                    "type": {
                                                        "type": "intrinsic",
                                                        "name": "number"
                                                    }
                                                }
                                            ],
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "reflection",
                                "declaration": {
                                    "id": 1267,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                            "line": 572,
                                            "character": 4
                                        }
                                    ],
                                    "signatures": [
                                        {
                                            "id": 1268,
                                            "name": "__type",
                                            "kind": 4096,
                                            "kindString": "Call signature",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "number"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "reflection",
                                "declaration": {
                                    "id": 1269,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "sources": [
                                        {
                                            "fileName": "website/node_modules/typescript/lib/lib.es5.d.ts",
                                            "line": 4499,
                                            "character": 4
                                        },
                                        {
                                            "fileName": "website/node_modules/typescript/lib/lib.es2020.number.d.ts",
                                            "line": 27,
                                            "character": 4
                                        }
                                    ],
                                    "signatures": [
                                        {
                                            "id": 1270,
                                            "name": "__type",
                                            "kind": 4096,
                                            "kindString": "Call signature",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "parameters": [
                                                {
                                                    "id": 1271,
                                                    "name": "locales",
                                                    "kind": 32768,
                                                    "kindString": "Parameter",
                                                    "flags": {
                                                        "isExternal": true,
                                                        "isOptional": true
                                                    },
                                                    "type": {
                                                        "type": "union",
                                                        "types": [
                                                            {
                                                                "type": "intrinsic",
                                                                "name": "string"
                                                            },
                                                            {
                                                                "type": "array",
                                                                "elementType": {
                                                                    "type": "intrinsic",
                                                                    "name": "string"
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "id": 1272,
                                                    "name": "options",
                                                    "kind": 32768,
                                                    "kindString": "Parameter",
                                                    "flags": {
                                                        "isExternal": true,
                                                        "isOptional": true
                                                    },
                                                    "type": {
                                                        "type": "reference",
                                                        "name": "NumberFormatOptions",
                                                        "qualifiedName": "Intl.NumberFormatOptions",
                                                        "package": "typescript"
                                                    }
                                                }
                                            ],
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        },
                                        {
                                            "id": 1273,
                                            "name": "__type",
                                            "kind": 4096,
                                            "kindString": "Call signature",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "parameters": [
                                                {
                                                    "id": 1274,
                                                    "name": "locales",
                                                    "kind": 32768,
                                                    "kindString": "Parameter",
                                                    "flags": {
                                                        "isExternal": true,
                                                        "isOptional": true
                                                    },
                                                    "type": {
                                                        "type": "reference",
                                                        "name": "LocalesArgument",
                                                        "qualifiedName": "Intl.LocalesArgument",
                                                        "package": "typescript"
                                                    }
                                                },
                                                {
                                                    "id": 1275,
                                                    "name": "options",
                                                    "kind": 32768,
                                                    "kindString": "Parameter",
                                                    "flags": {
                                                        "isExternal": true,
                                                        "isOptional": true
                                                    },
                                                    "type": {
                                                        "type": "reference",
                                                        "name": "NumberFormatOptions",
                                                        "qualifiedName": "Intl.NumberFormatOptions",
                                                        "package": "typescript"
                                                    }
                                                }
                                            ],
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.logLevel"
                    }
                },
                {
                    "id": 1243,
                    "name": "maxUsedCpuRatio",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the ratio, defining the maximum CPU usage.\nWhen the CPU usage is higher than the provided ratio, the CPU is considered overloaded."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "0.95"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 60,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.maxUsedCpuRatio"
                    }
                },
                {
                    "id": 1245,
                    "name": "memoryMbytes",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the amount of system memory in megabytes to be used by the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "AutoscaledPool"
                            },
                            {
                                "kind": "text",
                                "text": ".\nBy default, the maximum memory is set to one quarter of total system memory.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_MEMORY_MBYTES`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 75,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.memoryMbytes"
                    }
                },
                {
                    "id": 1219,
                    "name": "metamorphAfterSleepMillis",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 11,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L11"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 1246,
                    "name": "persistStateIntervalMillis",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines the interval of emitting the "
                            },
                            {
                                "kind": "code",
                                "text": "`persistState`"
                            },
                            {
                                "kind": "text",
                                "text": " event.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_PERSIST_STATE_INTERVAL_MILLIS`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "60_000"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 82,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.persistStateIntervalMillis"
                    }
                },
                {
                    "id": 1276,
                    "name": "persistStorage",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines whether the storage client used should persist the data it stores.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_PERSIST_STORAGE`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 140,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.persistStorage"
                    }
                },
                {
                    "id": 1228,
                    "name": "proxyHostname",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 20,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L20"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1229,
                    "name": "proxyPassword",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 21,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L21"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1230,
                    "name": "proxyPort",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 22,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L22"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 1231,
                    "name": "proxyStatusUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 23,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L23"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1240,
                    "name": "purgeOnStart",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines whether to purge the default storage folders before starting the crawler run.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_PURGE_ON_START`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "true"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 40,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.purgeOnStart"
                    }
                },
                {
                    "id": 1236,
                    "name": "storageClient",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines storage client to be used."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "MemoryStorage"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 16,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "StorageClient",
                        "qualifiedName": "StorageClient",
                        "package": "@crawlee/types"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.storageClient"
                    }
                },
                {
                    "id": 1238,
                    "name": "storageClientOptions",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Could be used to adjust the storage client behavior\ne.g. "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "MemoryStorageOptions"
                            },
                            {
                                "kind": "text",
                                "text": " could be used to adjust the "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "MemoryStorage"
                            },
                            {
                                "kind": "text",
                                "text": " behavior."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 26,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "Dictionary",
                        "qualifiedName": "Dictionary",
                        "package": "@crawlee/types"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.storageClientOptions"
                    }
                },
                {
                    "id": 1247,
                    "name": "systemInfoIntervalMillis",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines the interval of emitting the "
                            },
                            {
                                "kind": "code",
                                "text": "`systemInfo`"
                            },
                            {
                                "kind": "text",
                                "text": " event."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "60_000"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 87,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.systemInfoIntervalMillis"
                    }
                },
                {
                    "id": 1221,
                    "name": "token",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 13,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L13"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1233,
                    "name": "userId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/configuration.ts",
                            "line": 25,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L25"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1250,
                    "name": "xvfb",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Defines whether to run X virtual framebuffer on the web browsers launched by Crawlee.\n\nAlternative to "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_XVFB`"
                            },
                            {
                                "kind": "text",
                                "text": " environment variable."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "false"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/configuration.d.ts",
                            "line": 109,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreConfigurationOptions.xvfb"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [
                        1220, 1222, 1223, 1224, 1225, 1244, 1251, 1226, 1227,
                        1252, 1239, 1241, 1242, 1253, 1237, 1249, 1248, 1235,
                        1234, 1232, 1254, 1243, 1245, 1219, 1246, 1276, 1228,
                        1229, 1230, 1231, 1240, 1236, 1238, 1247, 1221, 1233,
                        1250
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/configuration.ts",
                    "line": 10,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/configuration.ts#L10"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "ConfigurationOptions",
                    "qualifiedName": "ConfigurationOptions",
                    "package": "@crawlee/core"
                }
            ]
        },
        {
            "id": 95,
            "name": "DatasetConsumer",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                    "line": 346,
                    "character": 17
                }
            ],
            "typeParameters": [
                {
                    "id": 96,
                    "name": "Data",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                        "isExternal": true
                    }
                }
            ],
            "signatures": [
                {
                    "id": 97,
                    "name": "DatasetConsumer",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {
                        "isExternal": true
                    },
                    "parameters": [
                        {
                            "id": 98,
                            "name": "item",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Current "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " entry being processed."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "id": 96,
                                "name": "Data",
                                "qualifiedName": "DatasetConsumer.Data",
                                "package": "@crawlee/core"
                            }
                        },
                        {
                            "id": 99,
                            "name": "index",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Position of current "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " entry."
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            }
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "typeArguments": [
                            {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        ],
                        "name": "Awaitable",
                        "qualifiedName": "Awaitable",
                        "package": "@crawlee/core"
                    }
                }
            ]
        },
        {
            "id": 117,
            "name": "DatasetContent",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 119,
                    "name": "count",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Count of dataset entries returned in this set."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 384,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 123,
                    "name": "desc",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Should the results be in descending order."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 392,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                },
                {
                    "id": 122,
                    "name": "items",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Dataset entries based on chosen format parameter."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 390,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "array",
                        "elementType": {
                            "type": "reference",
                            "id": 124,
                            "name": "Data",
                            "qualifiedName": "DatasetContent.Data",
                            "package": "@crawlee/core"
                        }
                    }
                },
                {
                    "id": 121,
                    "name": "limit",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Maximum number of dataset entries requested."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 388,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 120,
                    "name": "offset",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Position of the first returned entry in the dataset."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 386,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 118,
                    "name": "total",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Total count of entries in the dataset."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 382,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [119, 123, 122, 121, 120, 118]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                    "line": 380,
                    "character": 17
                }
            ],
            "typeParameters": [
                {
                    "id": 124,
                    "name": "Data",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                        "isExternal": true
                    }
                }
            ]
        },
        {
            "id": 76,
            "name": "DatasetDataOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 82,
                    "name": "clean",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "If "
                            },
                            {
                                "kind": "code",
                                "text": "`true`"
                            },
                            {
                                "kind": "text",
                                "text": " then the function returns only non-empty items and skips hidden fields (i.e. fields starting with "
                            },
                            {
                                "kind": "code",
                                "text": "`#`"
                            },
                            {
                                "kind": "text",
                                "text": " character).\nNote that the "
                            },
                            {
                                "kind": "code",
                                "text": "`clean`"
                            },
                            {
                                "kind": "text",
                                "text": " parameter is a shortcut for "
                            },
                            {
                                "kind": "code",
                                "text": "`skipHidden: true`"
                            },
                            {
                                "kind": "text",
                                "text": " and "
                            },
                            {
                                "kind": "code",
                                "text": "`skipEmpty: true`"
                            },
                            {
                                "kind": "text",
                                "text": " options."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "false"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 56,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                },
                {
                    "id": 79,
                    "name": "desc",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "If "
                            },
                            {
                                "kind": "code",
                                "text": "`true`"
                            },
                            {
                                "kind": "text",
                                "text": " then the objects are sorted by "
                            },
                            {
                                "kind": "code",
                                "text": "`createdAt`"
                            },
                            {
                                "kind": "text",
                                "text": " in descending order.\nOtherwise they are sorted in ascending order."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "false"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 41,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                },
                {
                    "id": 80,
                    "name": "fields",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An array of field names that will be included in the result. If omitted, all fields are included in the results."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 45,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "array",
                        "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                },
                {
                    "id": 78,
                    "name": "limit",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Maximum number of array elements to return."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "250000"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 35,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 77,
                    "name": "offset",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Number of array elements that should be skipped at the start."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "0"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 30,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 84,
                    "name": "skipEmpty",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "If "
                            },
                            {
                                "kind": "code",
                                "text": "`true`"
                            },
                            {
                                "kind": "text",
                                "text": " then the function doesn't return empty items.\nNote that in this case the returned number of items might be lower than limit parameter and pagination must be done using the "
                            },
                            {
                                "kind": "code",
                                "text": "`limit`"
                            },
                            {
                                "kind": "text",
                                "text": " value."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "false"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 67,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                },
                {
                    "id": 83,
                    "name": "skipHidden",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "If "
                            },
                            {
                                "kind": "code",
                                "text": "`true`"
                            },
                            {
                                "kind": "text",
                                "text": " then the function doesn't return hidden fields (fields starting with \"#\" character)."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "false"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 61,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                },
                {
                    "id": 81,
                    "name": "unwind",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Specifies a name of the field in the result objects that will be used to unwind the resulting objects.\nBy default, the results are returned as they are."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 50,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [82, 79, 80, 78, 77, 84, 83, 81]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                    "line": 25,
                    "character": 17
                }
            ]
        },
        {
            "id": 85,
            "name": "DatasetIteratorOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 92,
                    "name": "desc",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "If "
                            },
                            {
                                "kind": "code",
                                "text": "`true`"
                            },
                            {
                                "kind": "text",
                                "text": " then the objects are sorted by "
                            },
                            {
                                "kind": "code",
                                "text": "`createdAt`"
                            },
                            {
                                "kind": "text",
                                "text": " in descending order.\nOtherwise they are sorted in ascending order."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "false"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 41,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "Omit.desc"
                    }
                },
                {
                    "id": 93,
                    "name": "fields",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An array of field names that will be included in the result. If omitted, all fields are included in the results."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 45,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "array",
                        "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "Omit.fields"
                    }
                },
                {
                    "id": 94,
                    "name": "unwind",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Specifies a name of the field in the result objects that will be used to unwind the resulting objects.\nBy default, the results are returned as they are."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 50,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "Omit.unwind"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [92, 93, 94]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                    "line": 71,
                    "character": 17
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "typeArguments": [
                        {
                            "type": "reference",
                            "id": 76,
                            "name": "DatasetDataOptions",
                            "qualifiedName": "DatasetDataOptions",
                            "package": "@crawlee/core"
                        },
                        {
                            "type": "union",
                            "types": [
                                {
                                    "type": "literal",
                                    "value": "offset"
                                },
                                {
                                    "type": "literal",
                                    "value": "limit"
                                },
                                {
                                    "type": "literal",
                                    "value": "clean"
                                },
                                {
                                    "type": "literal",
                                    "value": "skipHidden"
                                },
                                {
                                    "type": "literal",
                                    "value": "skipEmpty"
                                }
                            ]
                        }
                    ],
                    "name": "Omit",
                    "qualifiedName": "Omit",
                    "package": "typescript"
                }
            ]
        },
        {
            "id": 100,
            "name": "DatasetMapper",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                    "line": 356,
                    "character": 17
                }
            ],
            "typeParameters": [
                {
                    "id": 101,
                    "name": "Data",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                        "isExternal": true
                    }
                },
                {
                    "id": 102,
                    "name": "R",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                        "isExternal": true
                    }
                }
            ],
            "signatures": [
                {
                    "id": 103,
                    "name": "DatasetMapper",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "User-function used in the "
                            },
                            {
                                "kind": "code",
                                "text": "`Dataset.map()`"
                            },
                            {
                                "kind": "text",
                                "text": " API."
                            }
                        ]
                    },
                    "parameters": [
                        {
                            "id": 104,
                            "name": "item",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Current "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " entry being processed."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "id": 101,
                                "name": "Data",
                                "qualifiedName": "DatasetMapper.Data",
                                "package": "@crawlee/core"
                            }
                        },
                        {
                            "id": 105,
                            "name": "index",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Position of current "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " entry."
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            }
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "typeArguments": [
                            {
                                "type": "reference",
                                "id": 102,
                                "name": "R",
                                "qualifiedName": "DatasetMapper.R",
                                "package": "@crawlee/core"
                            }
                        ],
                        "name": "Awaitable",
                        "qualifiedName": "Awaitable",
                        "package": "@crawlee/core"
                    }
                }
            ]
        },
        {
            "id": 113,
            "name": "DatasetOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 116,
                    "name": "client",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 378,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "StorageClient",
                        "qualifiedName": "StorageClient",
                        "package": "@crawlee/types"
                    }
                },
                {
                    "id": 114,
                    "name": "id",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 376,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 115,
                    "name": "name",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                            "line": 377,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [116, 114, 115]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                    "line": 375,
                    "character": 17
                }
            ]
        },
        {
            "id": 106,
            "name": "DatasetReducer",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/dataset.d.ts",
                    "line": 367,
                    "character": 17
                }
            ],
            "typeParameters": [
                {
                    "id": 107,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                        "isExternal": true
                    }
                },
                {
                    "id": 108,
                    "name": "Data",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {
                        "isExternal": true
                    }
                }
            ],
            "signatures": [
                {
                    "id": 109,
                    "name": "DatasetReducer",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {
                        "isExternal": true
                    },
                    "parameters": [
                        {
                            "id": 110,
                            "name": "memo",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Previous state of the reduction."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "id": 107,
                                "name": "T",
                                "qualifiedName": "DatasetReducer.T",
                                "package": "@crawlee/core"
                            }
                        },
                        {
                            "id": 111,
                            "name": "item",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Current "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " entry being processed."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reference",
                                "id": 108,
                                "name": "Data",
                                "qualifiedName": "DatasetReducer.Data",
                                "package": "@crawlee/core"
                            }
                        },
                        {
                            "id": 112,
                            "name": "index",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Position of current "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "Dataset"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " entry."
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            }
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "typeArguments": [
                            {
                                "type": "reference",
                                "id": 107,
                                "name": "T",
                                "qualifiedName": "DatasetReducer.T",
                                "package": "@crawlee/core"
                            }
                        ],
                        "name": "Awaitable",
                        "qualifiedName": "Awaitable",
                        "package": "@crawlee/core"
                    }
                }
            ]
        },
        {
            "id": 1182,
            "name": "ExitOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1186,
                    "name": "exit",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Call "
                            },
                            {
                                "kind": "code",
                                "text": "`process.exit()`"
                            },
                            {
                                "kind": "text",
                                "text": "? Defaults to true"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1799,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1799"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                },
                {
                    "id": 1185,
                    "name": "exitCode",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Exit code, defaults to 0"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1797,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1797"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 1183,
                    "name": "statusMessage",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Exit with given status message"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1790,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1790"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1184,
                    "name": "timeoutSecs",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Amount of time, in seconds, to wait for all event handlers to finish before exiting the process."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "30"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1795,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1795"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1186, 1185, 1183, 1184]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1788,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1788"
                }
            ],
            "extendedBy": [
                {
                    "type": "reference",
                    "id": 1100,
                    "name": "MainOptions"
                }
            ]
        },
        {
            "id": 1098,
            "name": "InitOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1099,
                    "name": "storage",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1566,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1566"
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "StorageClient",
                        "qualifiedName": "StorageClient",
                        "package": "@crawlee/types"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1099]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1565,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1565"
                }
            ],
            "extendedBy": [
                {
                    "type": "reference",
                    "id": 1100,
                    "name": "MainOptions"
                }
            ]
        },
        {
            "id": 224,
            "name": "KeyConsumer",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                    "line": 366,
                    "character": 17
                }
            ],
            "signatures": [
                {
                    "id": 225,
                    "name": "KeyConsumer",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {
                        "isExternal": true
                    },
                    "parameters": [
                        {
                            "id": 226,
                            "name": "key",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Current "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " key being processed."
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        },
                        {
                            "id": 227,
                            "name": "index",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Position of the current key in "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": "."
                                    }
                                ]
                            },
                            "type": {
                                "type": "intrinsic",
                                "name": "number"
                            }
                        },
                        {
                            "id": 228,
                            "name": "info",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                                "isExternal": true
                            },
                            "comment": {
                                "summary": [
                                    {
                                        "kind": "text",
                                        "text": "Information about the current "
                                    },
                                    {
                                        "kind": "inline-tag",
                                        "tag": "@apilink",
                                        "text": "KeyValueStore"
                                    },
                                    {
                                        "kind": "text",
                                        "text": " entry."
                                    }
                                ]
                            },
                            "type": {
                                "type": "reflection",
                                "declaration": {
                                    "id": 229,
                                    "name": "__type",
                                    "kind": 65536,
                                    "kindString": "Type literal",
                                    "flags": {
                                        "isExternal": true
                                    },
                                    "children": [
                                        {
                                            "id": 230,
                                            "name": "size",
                                            "kind": 1024,
                                            "kindString": "Property",
                                            "flags": {
                                                "isExternal": true
                                            },
                                            "comment": {
                                                "summary": [
                                                    {
                                                        "kind": "text",
                                                        "text": "Size of the value associated with the current key in bytes."
                                                    }
                                                ]
                                            },
                                            "sources": [
                                                {
                                                    "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                                                    "line": 374,
                                                    "character": 8
                                                }
                                            ],
                                            "type": {
                                                "type": "intrinsic",
                                                "name": "number"
                                            }
                                        }
                                    ],
                                    "groups": [
                                        {
                                            "title": "Properties",
                                            "children": [230]
                                        }
                                    ],
                                    "sources": [
                                        {
                                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                                            "line": 373,
                                            "character": 39
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "typeArguments": [
                            {
                                "type": "intrinsic",
                                "name": "void"
                            }
                        ],
                        "name": "Awaitable",
                        "qualifiedName": "Awaitable",
                        "package": "@crawlee/core"
                    }
                }
            ]
        },
        {
            "id": 237,
            "name": "KeyValueStoreIteratorOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 238,
                    "name": "exclusiveStartKey",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "All keys up to this one (including) are skipped from the result."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 392,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [238]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                    "line": 388,
                    "character": 17
                }
            ]
        },
        {
            "id": 231,
            "name": "KeyValueStoreOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 234,
                    "name": "client",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 380,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "StorageClient",
                        "qualifiedName": "StorageClient",
                        "package": "@crawlee/types"
                    }
                },
                {
                    "id": 232,
                    "name": "id",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 378,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 233,
                    "name": "name",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 379,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [234, 232, 233]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                    "line": 377,
                    "character": 17
                }
            ]
        },
        {
            "id": 302,
            "name": "LoggerOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 309,
                    "name": "data",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Additional data to be added to each log line."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 61,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "typeArguments": [
                            {
                                "type": "intrinsic",
                                "name": "string"
                            },
                            {
                                "type": "intrinsic",
                                "name": "unknown"
                            }
                        ],
                        "name": "Record",
                        "qualifiedName": "Record",
                        "package": "typescript"
                    }
                },
                {
                    "id": 303,
                    "name": "level",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Sets the log level to the given value, preventing messages from less important log levels\nfrom being printed to the console. Use in conjunction with the "
                            },
                            {
                                "kind": "code",
                                "text": "`log.LEVELS`"
                            },
                            {
                                "kind": "text",
                                "text": " constants."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 46,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 308,
                    "name": "logger",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Logger implementation to be used. Default one is log.LoggerText to log messages as easily readable\nstrings. Optionally you can use "
                            },
                            {
                                "kind": "code",
                                "text": "`log.LoggerJson`"
                            },
                            {
                                "kind": "text",
                                "text": " that formats each log line as a JSON."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 59,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "id": 318,
                        "name": "Logger",
                        "qualifiedName": "Logger",
                        "package": "@apify/log"
                    }
                },
                {
                    "id": 304,
                    "name": "maxDepth",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Max depth of data object that will be logged. Anything deeper than the limit will be stripped off."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 48,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 305,
                    "name": "maxStringLength",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Max length of the string to be logged. Longer strings will be truncated."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 50,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    }
                },
                {
                    "id": 306,
                    "name": "prefix",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Prefix to be prepended the each logged line."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 52,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                },
                {
                    "id": 307,
                    "name": "suffix",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Suffix that will be appended the each logged line."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                            "line": 54,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "literal",
                                "value": null
                            },
                            {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        ]
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [309, 303, 308, 304, 305, 306, 307]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                    "line": 41,
                    "character": 10
                }
            ]
        },
        {
            "id": 1100,
            "name": "MainOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1104,
                    "name": "exit",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Call "
                            },
                            {
                                "kind": "code",
                                "text": "`process.exit()`"
                            },
                            {
                                "kind": "text",
                                "text": "? Defaults to true"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1799,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1799"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 1186,
                        "name": "ExitOptions.exit"
                    }
                },
                {
                    "id": 1103,
                    "name": "exitCode",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Exit code, defaults to 0"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1797,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1797"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 1185,
                        "name": "ExitOptions.exitCode"
                    }
                },
                {
                    "id": 1101,
                    "name": "statusMessage",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Exit with given status message"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1790,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1790"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 1183,
                        "name": "ExitOptions.statusMessage"
                    }
                },
                {
                    "id": 1105,
                    "name": "storage",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1566,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1566"
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "StorageClient",
                        "qualifiedName": "StorageClient",
                        "package": "@crawlee/types"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 1099,
                        "name": "InitOptions.storage"
                    }
                },
                {
                    "id": 1102,
                    "name": "timeoutSecs",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Amount of time, in seconds, to wait for all event handlers to finish before exiting the process."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "30"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1795,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1795"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "id": 1184,
                        "name": "ExitOptions.timeoutSecs"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1104, 1103, 1101, 1105, 1102]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1569,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1569"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "id": 1182,
                    "name": "ExitOptions"
                },
                {
                    "type": "reference",
                    "id": 1098,
                    "name": "InitOptions"
                }
            ]
        },
        {
            "id": 1176,
            "name": "MetamorphOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1178,
                    "name": "build",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Tag or number of the target Actor build to metamorph into (e.g. "
                            },
                            {
                                "kind": "code",
                                "text": "`beta`"
                            },
                            {
                                "kind": "text",
                                "text": " or "
                            },
                            {
                                "kind": "code",
                                "text": "`1.2.345`"
                            },
                            {
                                "kind": "text",
                                "text": ").\nIf not provided, the run uses build tag or number from the default Actor run configuration (typically "
                            },
                            {
                                "kind": "code",
                                "text": "`latest`"
                            },
                            {
                                "kind": "text",
                                "text": ")."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1777,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1777"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1177,
                    "name": "contentType",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Content type for the "
                            },
                            {
                                "kind": "code",
                                "text": "`input`"
                            },
                            {
                                "kind": "text",
                                "text": ". If not specified,\n"
                            },
                            {
                                "kind": "code",
                                "text": "`input`"
                            },
                            {
                                "kind": "text",
                                "text": " is expected to be an object that will be stringified to JSON and content type set to\n"
                            },
                            {
                                "kind": "code",
                                "text": "`application/json; charset=utf-8`"
                            },
                            {
                                "kind": "text",
                                "text": ". If "
                            },
                            {
                                "kind": "code",
                                "text": "`options.contentType`"
                            },
                            {
                                "kind": "text",
                                "text": " is specified, then "
                            },
                            {
                                "kind": "code",
                                "text": "`input`"
                            },
                            {
                                "kind": "text",
                                "text": " must be a\n"
                            },
                            {
                                "kind": "code",
                                "text": "`String`"
                            },
                            {
                                "kind": "text",
                                "text": " or "
                            },
                            {
                                "kind": "code",
                                "text": "`Buffer`"
                            },
                            {
                                "kind": "text",
                                "text": "."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1771,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1771"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1178, 1177]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1764,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1764"
                }
            ]
        },
        {
            "id": 1187,
            "name": "OpenStorageOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1188,
                    "name": "forceCloud",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "If set to "
                            },
                            {
                                "kind": "code",
                                "text": "`true`"
                            },
                            {
                                "kind": "text",
                                "text": " then the cloud storage is used even if the "
                            },
                            {
                                "kind": "code",
                                "text": "`CRAWLEE_STORAGE_DIR`"
                            },
                            {
                                "kind": "text",
                                "text": "\nenvironment variable is set. This way it is possible to combine local and cloud storage."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "false"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1808,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1808"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1188]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1802,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1802"
                }
            ]
        },
        {
            "id": 1433,
            "name": "ProxyConfigurationOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1438,
                    "name": "apifyProxyCountry",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Same option as "
                            },
                            {
                                "kind": "code",
                                "text": "`countryCode`"
                            },
                            {
                                "kind": "text",
                                "text": " which can be used to\nconfigurate the proxy by UI input schema. You should use the "
                            },
                            {
                                "kind": "code",
                                "text": "`countryCode`"
                            },
                            {
                                "kind": "text",
                                "text": " option in your crawler code."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 59,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L59"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1437,
                    "name": "apifyProxyGroups",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Same option as "
                            },
                            {
                                "kind": "code",
                                "text": "`groups`"
                            },
                            {
                                "kind": "text",
                                "text": " which can be used to\nconfigurate the proxy by UI input schema. You should use the "
                            },
                            {
                                "kind": "code",
                                "text": "`groups`"
                            },
                            {
                                "kind": "text",
                                "text": " option in your crawler code."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 53,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L53"
                        }
                    ],
                    "type": {
                        "type": "array",
                        "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                },
                {
                    "id": 1436,
                    "name": "countryCode",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "If set and relevant proxies are available in your Apify account, all proxied requests will\nuse IP addresses that are geolocated to the specified country. For example "
                            },
                            {
                                "kind": "code",
                                "text": "`GB`"
                            },
                            {
                                "kind": "text",
                                "text": " for IPs\nfrom Great Britain. Note that online services often have their own rules for handling\ngeolocation and thus the country selection is a best attempt at geolocation, rather than\na guaranteed hit. This parameter is optional, by default, each proxied request is assigned\nan IP address from a random country. The country code needs to be a two letter ISO country code. See the\n[full list of available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements).\nThis parameter is optional, by default, the proxy uses all available proxy servers from all countries.\non the Apify cloud, or when using the [Apify CLI](https://github.com/apify/apify-cli)."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 47,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L47"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1435,
                    "name": "groups",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An array of proxy groups to be used by the [Apify Proxy](https://docs.apify.com/proxy).\nIf not provided, the proxy will select the groups automatically."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 34,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L34"
                        }
                    ],
                    "type": {
                        "type": "array",
                        "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                },
                {
                    "id": 1441,
                    "name": "newUrlFunction",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Custom function that allows you to generate the new proxy URL dynamically. It gets the "
                            },
                            {
                                "kind": "code",
                                "text": "`sessionId`"
                            },
                            {
                                "kind": "text",
                                "text": " as a parameter and an optional parameter with the "
                            },
                            {
                                "kind": "code",
                                "text": "`Request`"
                            },
                            {
                                "kind": "text",
                                "text": " object when applicable.\nCan return either stringified proxy URL or "
                            },
                            {
                                "kind": "code",
                                "text": "`null`"
                            },
                            {
                                "kind": "text",
                                "text": " if the proxy should not be used. Can be asynchronous.\n\nThis function is used to generate the URL when "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "ProxyConfiguration.newUrl"
                            },
                            {
                                "kind": "text",
                                "text": " or "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "ProxyConfiguration.newProxyInfo"
                            },
                            {
                                "kind": "text",
                                "text": " is called."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
                            "line": 20,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "ProxyConfigurationFunction",
                        "qualifiedName": "ProxyConfigurationFunction",
                        "package": "@crawlee/core"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreProxyConfigurationOptions.newUrlFunction"
                    }
                },
                {
                    "id": 1434,
                    "name": "password",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "User's password for the proxy. By default, it is taken from the "
                            },
                            {
                                "kind": "code",
                                "text": "`APIFY_PROXY_PASSWORD`"
                            },
                            {
                                "kind": "text",
                                "text": "\nenvironment variable, which is automatically set by the system when running the Actors."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 28,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L28"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1440,
                    "name": "proxyUrls",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An array of custom proxy URLs to be rotated.\nCustom proxies are not compatible with Apify Proxy and an attempt to use both\nconfiguration options will cause an error to be thrown on initialize."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
                            "line": 13,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "array",
                        "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreProxyConfigurationOptions.proxyUrls"
                    }
                },
                {
                    "id": 1439,
                    "name": "tieredProxyConfig",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Multiple different ProxyConfigurationOptions stratified into tiers. Crawlee crawlers will switch between those tiers\nbased on the blocked request statistics."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 65,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L65"
                        }
                    ],
                    "type": {
                        "type": "array",
                        "elementType": {
                            "type": "reference",
                            "typeArguments": [
                                {
                                    "type": "reference",
                                    "id": 1433,
                                    "name": "ProxyConfigurationOptions"
                                },
                                {
                                    "type": "union",
                                    "types": [
                                        {
                                            "type": "typeOperator",
                                            "operator": "keyof",
                                            "target": {
                                                "type": "reference",
                                                "name": "ProxyConfigurationOptions",
                                                "qualifiedName": "ProxyConfigurationOptions",
                                                "package": "@crawlee/core"
                                            }
                                        },
                                        {
                                            "type": "literal",
                                            "value": "tieredProxyConfig"
                                        }
                                    ]
                                }
                            ],
                            "name": "Omit",
                            "qualifiedName": "Omit",
                            "package": "typescript"
                        }
                    }
                },
                {
                    "id": 1442,
                    "name": "tieredProxyUrls",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An array of custom proxy URLs to be rotated stratified in tiers.\nThis is a more advanced version of "
                            },
                            {
                                "kind": "code",
                                "text": "`proxyUrls`"
                            },
                            {
                                "kind": "text",
                                "text": " that allows you to define a hierarchy of proxy URLs\nIf everything goes well, all the requests will be sent through the first proxy URL in the list.\nWhenever the crawler encounters a problem with the current proxy on the given domain, it will switch to the higher tier for this domain.\nThe crawler probes lower-level proxies at intervals to check if it can make the tier downshift.\n\nThis feature is useful when you have a set of proxies with different performance characteristics (speed, price, antibot performance etc.) and you want to use the best one for each domain."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
                            "line": 30,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "array",
                        "elementType": {
                            "type": "array",
                            "elementType": {
                                "type": "intrinsic",
                                "name": "string"
                            }
                        }
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreProxyConfigurationOptions.tieredProxyUrls"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [
                        1438, 1437, 1436, 1435, 1441, 1434, 1440, 1439, 1442
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/proxy_configuration.ts",
                    "line": 23,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L23"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "ProxyConfigurationOptions",
                    "qualifiedName": "ProxyConfigurationOptions",
                    "package": "@crawlee/core"
                }
            ]
        },
        {
            "id": 1443,
            "name": "ProxyInfo",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "The main purpose of the ProxyInfo object is to provide information\nabout the current proxy connection used by the crawler for the request.\nOutside of crawlers, you can get this object by calling "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "ProxyConfiguration.newProxyInfo"
                    },
                    {
                        "kind": "text",
                        "text": ".\n\n**Example usage:**\n\n"
                    },
                    {
                        "kind": "code",
                        "text": "```javascript\n\nconst proxyConfiguration = await Actor.createProxyConfiguration({\n  groups: ['GROUP1', 'GROUP2'] // List of Apify Proxy groups\n  countryCode: 'US',\n});\n\n// Getting proxyInfo object by calling class method directly\nconst proxyInfo = proxyConfiguration.newProxyInfo();\n\n// In crawler\nconst crawler = new CheerioCrawler({\n  // ...\n  proxyConfiguration,\n  requestHandler({ proxyInfo }) {\n      // Getting used proxy URL\n      const proxyUrl = proxyInfo.url;\n\n      // Getting ID of used Session\n      const sessionIdentifier = proxyInfo.sessionId;\n  }\n})\n\n```"
                    }
                ]
            },
            "children": [
                {
                    "id": 1445,
                    "name": "countryCode",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "If set and relevant proxies are available in your Apify account, all proxied requests will\nuse IP addresses that are geolocated to the specified country. For example "
                            },
                            {
                                "kind": "code",
                                "text": "`GB`"
                            },
                            {
                                "kind": "text",
                                "text": " for IPs\nfrom Great Britain. Note that online services often have their own rules for handling\ngeolocation and thus the country selection is a best attempt at geolocation, rather than\na guaranteed hit. This parameter is optional, by default, each proxied request is assigned\nan IP address from a random country. The country code needs to be a two letter ISO country code. See the\n[full list of available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements).\nThis parameter is optional, by default, the proxy uses all available proxy servers from all countries."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 117,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L117"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1444,
                    "name": "groups",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "An array of proxy groups to be used by the [Apify Proxy](https://docs.apify.com/proxy).\nIf not provided, the proxy will select the groups automatically."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 105,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L105"
                        }
                    ],
                    "type": {
                        "type": "array",
                        "elementType": {
                            "type": "intrinsic",
                            "name": "string"
                        }
                    }
                },
                {
                    "id": 1450,
                    "name": "hostname",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Hostname of your proxy."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
                            "line": 86,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreProxyInfo.hostname"
                    }
                },
                {
                    "id": 1446,
                    "name": "password",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "User's password for the proxy. By default, it is taken from the "
                            },
                            {
                                "kind": "code",
                                "text": "`APIFY_PROXY_PASSWORD`"
                            },
                            {
                                "kind": "text",
                                "text": "\nenvironment variable, which is automatically set by the system when running the Actors\non the Apify cloud, or when using the [Apify CLI](https://github.com/apify/apify-cli)."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/proxy_configuration.ts",
                            "line": 124,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L124"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "overwrites": {
                        "type": "reference",
                        "name": "CoreProxyInfo.password"
                    }
                },
                {
                    "id": 1451,
                    "name": "port",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Proxy port."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
                            "line": 90,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "union",
                        "types": [
                            {
                                "type": "intrinsic",
                                "name": "string"
                            },
                            {
                                "type": "intrinsic",
                                "name": "number"
                            }
                        ]
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreProxyInfo.port"
                    }
                },
                {
                    "id": 1452,
                    "name": "proxyTier",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Proxy tier for the current proxy, if applicable (only for "
                            },
                            {
                                "kind": "code",
                                "text": "`tieredProxyUrls`"
                            },
                            {
                                "kind": "text",
                                "text": ")."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
                            "line": 94,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "number"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreProxyInfo.proxyTier"
                    }
                },
                {
                    "id": 1447,
                    "name": "sessionId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The identifier of used "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "Session"
                            },
                            {
                                "kind": "text",
                                "text": ", if used."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
                            "line": 70,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreProxyInfo.sessionId"
                    }
                },
                {
                    "id": 1448,
                    "name": "url",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The URL of the proxy."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
                            "line": 74,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreProxyInfo.url"
                    }
                },
                {
                    "id": 1449,
                    "name": "username",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Username for the proxy."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/proxy_configuration.d.ts",
                            "line": 78,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "CoreProxyInfo.username"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [
                        1445, 1444, 1450, 1446, 1451, 1452, 1447, 1448, 1449
                    ]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/proxy_configuration.ts",
                    "line": 100,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/proxy_configuration.ts#L100"
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "ProxyInfo",
                    "qualifiedName": "ProxyInfo",
                    "package": "@crawlee/core"
                }
            ]
        },
        {
            "id": 213,
            "name": "QueueOperationInfo",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "comment": {
                "summary": [
                    {
                        "kind": "text",
                        "text": "A helper class that is used to report results from various\n"
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "RequestQueue"
                    },
                    {
                        "kind": "text",
                        "text": " functions as well as "
                    },
                    {
                        "kind": "inline-tag",
                        "tag": "@apilink",
                        "text": "enqueueLinks"
                    },
                    {
                        "kind": "text",
                        "text": "."
                    }
                ]
            },
            "children": [
                {
                    "id": 216,
                    "name": "requestId",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "The ID of the added request"
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/types/storages.d.ts",
                            "line": 14,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 215,
                    "name": "wasAlreadyHandled",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Indicates if request was already marked as handled."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/types/storages.d.ts",
                            "line": 12,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                },
                {
                    "id": 214,
                    "name": "wasAlreadyPresent",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Indicates if request was already present in the queue."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/types/storages.d.ts",
                            "line": 10,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [216, 215, 214]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/types/storages.d.ts",
                    "line": 8,
                    "character": 17
                }
            ]
        },
        {
            "id": 1180,
            "name": "RebootOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1783,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1783"
                }
            ]
        },
        {
            "id": 235,
            "name": "RecordOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 236,
                    "name": "contentType",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Specifies a custom MIME content type of the record."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                            "line": 386,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [236]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/key_value_store.d.ts",
                    "line": 382,
                    "character": 17
                }
            ]
        },
        {
            "id": 217,
            "name": "RequestQueueOperationOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "children": [
                {
                    "id": 218,
                    "name": "forefront",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "If set to "
                            },
                            {
                                "kind": "code",
                                "text": "`true`"
                            },
                            {
                                "kind": "text",
                                "text": ":\n  - while adding the request to the queue: the request will be added to the foremost position in the queue.\n  - while reclaiming the request: the request will be placed to the beginning of the queue, so that it's returned\n  in the next call to "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "RequestQueue.fetchNextRequest"
                            },
                            {
                                "kind": "text",
                                "text": ".\nBy default, it's put to the end of the queue."
                            }
                        ],
                        "blockTags": [
                            {
                                "tag": "@default",
                                "content": [
                                    {
                                        "kind": "text",
                                        "text": "false"
                                    }
                                ]
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 233,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [218]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                    "line": 224,
                    "character": 17
                }
            ]
        },
        {
            "id": 219,
            "name": "RequestQueueOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {
                "isExternal": true
            },
            "comment": {
                "summary": [],
                "blockTags": [
                    {
                        "tag": "@deprecated",
                        "content": [
                            {
                                "kind": "text",
                                "text": "Use "
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "RequestProviderOptions"
                            },
                            {
                                "kind": "text",
                                "text": " instead."
                            }
                        ]
                    }
                ]
            },
            "children": [
                {
                    "id": 222,
                    "name": "client",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 203,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "StorageClient",
                        "qualifiedName": "StorageClient",
                        "package": "@crawlee/types"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProviderOptions.client"
                    }
                },
                {
                    "id": 220,
                    "name": "id",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 201,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProviderOptions.id"
                    }
                },
                {
                    "id": 221,
                    "name": "name",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 202,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProviderOptions.name"
                    }
                },
                {
                    "id": 223,
                    "name": "proxyConfiguration",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isExternal": true,
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Used to pass the proxy configuration for the "
                            },
                            {
                                "kind": "code",
                                "text": "`requestsFromUrl`"
                            },
                            {
                                "kind": "text",
                                "text": " objects.\nTakes advantage of the internal address rotation and authentication process.\nIf undefined, the "
                            },
                            {
                                "kind": "code",
                                "text": "`requestsFromUrl`"
                            },
                            {
                                "kind": "text",
                                "text": " requests will be made without proxy."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                            "line": 209,
                            "character": 4
                        }
                    ],
                    "type": {
                        "type": "reference",
                        "name": "ProxyConfiguration",
                        "qualifiedName": "ProxyConfiguration",
                        "package": "@crawlee/core"
                    },
                    "inheritedFrom": {
                        "type": "reference",
                        "name": "RequestProviderOptions.proxyConfiguration"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [222, 220, 221, 223]
                }
            ],
            "sources": [
                {
                    "fileName": "node_modules/@crawlee/core/storages/request_provider.d.ts",
                    "line": 214,
                    "character": 17
                }
            ],
            "extendedTypes": [
                {
                    "type": "reference",
                    "name": "RequestProviderOptions",
                    "qualifiedName": "RequestProviderOptions",
                    "package": "@crawlee/core"
                }
            ]
        },
        {
            "id": 1171,
            "name": "WebhookOptions",
            "kind": 256,
            "kindString": "Interface",
            "flags": {},
            "children": [
                {
                    "id": 1172,
                    "name": "eventTypes",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Array of event types, which you can set for Actor run, see\nthe [Actor run events](https://docs.apify.com/webhooks/events#actor-run) in the Apify doc."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1738,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1738"
                        }
                    ],
                    "type": {
                        "type": "typeOperator",
                        "operator": "readonly",
                        "target": {
                            "type": "array",
                            "elementType": {
                                "type": "reference",
                                "name": "WebhookEventType",
                                "qualifiedName": "WebhookEventType",
                                "package": "apify-client"
                            }
                        }
                    }
                },
                {
                    "id": 1175,
                    "name": "idempotencyKey",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Idempotency key enables you to ensure that a webhook will not be added multiple times in case of\nan Actor restart or other situation that would cause the "
                            },
                            {
                                "kind": "code",
                                "text": "`addWebhook()`"
                            },
                            {
                                "kind": "text",
                                "text": " function to be called again.\nWe suggest using the Actor run ID as the idempotency key. You can get the run ID by calling\n"
                            },
                            {
                                "kind": "inline-tag",
                                "tag": "@apilink",
                                "text": "Actor.getEnv"
                            },
                            {
                                "kind": "text",
                                "text": " function."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1761,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1761"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1174,
                    "name": "payloadTemplate",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {
                        "isOptional": true
                    },
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "Payload template is a JSON-like string that describes the structure of the webhook POST request payload.\nIt uses JSON syntax, extended with a double curly braces syntax for injecting variables "
                            },
                            {
                                "kind": "code",
                                "text": "`{{variable}}`"
                            },
                            {
                                "kind": "text",
                                "text": ".\nThose variables are resolved at the time of the webhook's dispatch, and a list of available variables with their descriptions\nis available in the [Apify webhook documentation](https://docs.apify.com/webhooks).\nIf "
                            },
                            {
                                "kind": "code",
                                "text": "`payloadTemplate`"
                            },
                            {
                                "kind": "text",
                                "text": " is omitted, the default payload template is used\n([view docs](https://docs.apify.com/webhooks/actions#payload-template))."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1753,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1753"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                },
                {
                    "id": 1173,
                    "name": "requestUrl",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "comment": {
                        "summary": [
                            {
                                "kind": "text",
                                "text": "URL which will be requested using HTTP POST request, when Actor run will reach the set event type."
                            }
                        ]
                    },
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1743,
                            "character": 4,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1743"
                        }
                    ],
                    "type": {
                        "type": "intrinsic",
                        "name": "string"
                    }
                }
            ],
            "groups": [
                {
                    "title": "Properties",
                    "children": [1172, 1175, 1174, 1173]
                }
            ],
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1733,
                    "character": 17,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1733"
                }
            ]
        },
        {
            "id": 1146,
            "name": "UserFunc",
            "kind": 4194304,
            "kindString": "Type alias",
            "flags": {},
            "sources": [
                {
                    "fileName": "packages/apify/src/actor.ts",
                    "line": 1707,
                    "character": 12,
                    "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1707"
                }
            ],
            "typeParameters": [
                {
                    "id": 1149,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {},
                    "default": {
                        "type": "intrinsic",
                        "name": "unknown"
                    }
                }
            ],
            "type": {
                "type": "reflection",
                "declaration": {
                    "id": 1147,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "sources": [
                        {
                            "fileName": "packages/apify/src/actor.ts",
                            "line": 1707,
                            "character": 36,
                            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/actor.ts#L1707"
                        }
                    ],
                    "signatures": [
                        {
                            "id": 1148,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                                "type": "reference",
                                "typeArguments": [
                                    {
                                        "type": "reference",
                                        "id": 1149,
                                        "name": "T"
                                    }
                                ],
                                "name": "Awaitable",
                                "qualifiedName": "Awaitable",
                                "package": "@crawlee/types"
                            }
                        }
                    ]
                }
            }
        },
        {
            "id": 239,
            "name": "log",
            "kind": 32,
            "kindString": "Variable",
            "flags": {
                "isExternal": true,
                "isConst": true
            },
            "sources": [
                {
                    "fileName": "node_modules/@apify/log/cjs/index.d.ts",
                    "line": 252,
                    "character": 14
                }
            ],
            "type": {
                "type": "reference",
                "id": 240,
                "name": "Log",
                "qualifiedName": "Log",
                "package": "@apify/log"
            }
        }
    ],
    "groups": [
        {
            "title": "Enumerations",
            "children": [310]
        },
        {
            "title": "Classes",
            "children": [
                841, 757, 1277, 1, 1575, 240, 318, 462, 607, 1528, 1453, 125
            ],
            "categories": [
                {
                    "title": "CATEGORY",
                    "children": [841, 757, 1277, 1575, 240, 318, 462, 607, 1528]
                },
                {
                    "title": "Result Stores",
                    "children": [1]
                },
                {
                    "title": "Scaling",
                    "children": [1453]
                },
                {
                    "title": "Sources",
                    "children": [125]
                }
            ]
        },
        {
            "title": "Interfaces",
            "children": [
                1167, 1189, 831, 1106, 1150, 1159, 1218, 95, 117, 76, 85, 100,
                113, 106, 1182, 1098, 224, 237, 231, 302, 1100, 1176, 1187,
                1433, 1443, 213, 1180, 235, 217, 219, 1171
            ]
        },
        {
            "title": "Type Aliases",
            "children": [1146]
        },
        {
            "title": "Variables",
            "children": [239]
        }
    ],
    "sources": [
        {
            "fileName": "packages/apify/src/index.ts",
            "line": 1,
            "character": 0,
            "url": "https://github.com/apify/apify-sdk-js/blob/7bce4a9a88/packages/apify/src/index.ts#L1"
        }
    ]
}
